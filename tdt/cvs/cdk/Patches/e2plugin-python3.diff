--- a/genmetaindex.py
+++ b/genmetaindex.py
@@ -51,4 +51,4 @@
 
 indent(root)
 
-ElementTree(root).write(sys.stdout)
+ElementTree(root).write(sys.stdout.buffer)
 
\
--- a/alternativesoftcammanager/src/Manager.py
+++ b/alternativesoftcammanager/src/Manager.py
@@ -1,5 +1,5 @@
 from . import _
-import Softcam
+from . import Softcam
 
 from Components.ActionMap import ActionMap
 from Components.config import config, getConfigListEntry
@@ -218,7 +218,7 @@
 		if self.iscam and self.finish:
 			self.camstart = self["list"].getCurrent()[0]
 			if self.camstart != self.actcam:
-				print "[Alternative SoftCam Manager] Start SoftCam"
+				print("[Alternative SoftCam Manager] Start SoftCam")
 				self.camstartcmd = Softcam.getcamcmd(self.camstart)
 				msg = _("Starting %s") % self.camstart
 				self.mbox = self.session.open(MessageBox, msg, MessageBox.TYPE_INFO)
@@ -239,7 +239,7 @@
 
 	def restart(self):
 		if self.iscam and self.actcam != "none" and self.finish:
-			print "[Alternative SoftCam Manager] restart SoftCam"
+			print("[Alternative SoftCam Manager] restart SoftCam")
 			self.camstart = self.actcam
 			if self.camstartcmd == "":
 				self.camstartcmd = Softcam.getcamcmd(self.camstart)
@@ -255,7 +255,7 @@
 		if service:
 			self.session.nav.stopService()
 		self.Console.ePopen(self.camstartcmd)
-		print "[Alternative SoftCam Manager] ", self.camstartcmd
+		print("[Alternative SoftCam Manager] ", self.camstartcmd)
 		if self.mbox:
 			self.mbox.close()
 		if service:
--- a/alternativesoftcammanager/src/Softcam.py
+++ b/alternativesoftcammanager/src/Softcam.py
@@ -47,7 +47,7 @@
 	else:
 		cmd = "killall -15 " + cam
 	Console().ePopen(cmd)
-	print "[Alternative SoftCam Manager] stopping", cam
+	print("[Alternative SoftCam Manager] stopping", cam)
 	try:
 		remove("/tmp/ecm.info")
 	except:
@@ -61,7 +61,7 @@
 			try:
 				mkdir(dir)
 			except:
-				print "[Alternative SoftCam Manager] Failed to mkdir", dir
+				print("[Alternative SoftCam Manager] Failed to mkdir", dir)
 
 def checkconfigdir():
 	if not path.exists(config.plugins.AltSoftcam.camconfig.value):
--- a/alternativesoftcammanager/src/plugin.py
+++ b/alternativesoftcammanager/src/plugin.py
@@ -1,5 +1,5 @@
 from . import _
-import Softcam
+from . import Softcam
 
 from Components.config import config, ConfigSubsection, ConfigText
 from Components.Console import Console
@@ -19,7 +19,7 @@
 Softcam.checkconfigdir()
 
 def main(session, **kwargs):
-	import Manager
+	from . import Manager
 	session.open(Manager.AltCamManager)
 
 EnigmaStart = False
@@ -33,7 +33,7 @@
 			try:
 				cmd = Softcam.getcamcmd(config.plugins.AltSoftcam.actcam.value)
 				Console().ePopen(cmd)
-				print "[Alternative SoftCam Manager] ", cmd
+				print("[Alternative SoftCam Manager] ", cmd)
 			except:
 				pass
 		elif reason == 1 and EnigmaStart == True: # Enigma stop
--- a/antiscrollbar/src/plugin.py
+++ b/antiscrollbar/src/plugin.py
@@ -30,7 +30,7 @@
     else:
         i = 0
         while i < modescount:
-            print "["+myname+".initConfig] i is %s" % i
+            print("["+myname+".initConfig] i is %s" % i)
             config.plugins.antiscrollbar.mode.append(ConfigSubsection())
             config.plugins.antiscrollbar.mode[i].sref = ConfigText("")
             config.plugins.antiscrollbar.mode[i].sizex = ConfigInteger(0)
@@ -136,13 +136,13 @@
         }, -2)
 
     def openCurrentSeviceConfig(self):
-        print "yellow"
+        print("yellow")
         smode = False
         for mode in config.plugins.antiscrollbar.mode:
             if mode.sref.value == self.session.nav.getCurrentlyPlayingServiceReference().toString():
                 smode = mode
         if smode is False:
-            print "new config "*40
+            print("new config "*40)
             i = config.plugins.antiscrollbar.modescount.value
             config.plugins.antiscrollbar.mode.append(ConfigSubsection())
             config.plugins.antiscrollbar.mode[i].sref = ConfigText("")
@@ -162,13 +162,13 @@
         self.session.open(CurrentSeviceConfig,smode)
 
     def save(self):
-        print "saving"
+        print("saving")
         for x in self["config"].list:
             x[1].save()
         self.close(True, self.session)
 
     def cancel(self):
-        print "cancel"
+        print("cancel")
         for x in self["config"].list:
             x[1].cancel()
         self.close(False, self.session)
@@ -176,7 +176,7 @@
 class CurrentSeviceConfig(Screen):
     step = 5
     def __init__(self, session, mode):
-        print "editing "+mode.sref.value
+        print("editing "+mode.sref.value)
         self.mode = mode
         self.size = [mode.sizex.value,mode.sizey.value]
         self.enabled = mode.enabled.value
--- a/audiosync/src/AC3delay.py
+++ b/audiosync/src/AC3delay.py
@@ -1,4 +1,4 @@
-from AC3utils import AC3, PCM, AC3GLOB, PCMGLOB, AC3PCM
+from .AC3utils import AC3, PCM, AC3GLOB, PCMGLOB, AC3PCM
 from Components.config import config
 from enigma import eTimer
 from Tools.ISO639 import LanguageCodes
@@ -89,7 +89,7 @@
         r = self.iSeek.getPlayPosition()
         if r[0]:
             return None
-        return long(r[1])
+        return int(r[1])
 
     def getSystemDelay(self, sAudio):
         bInitialized = False
@@ -168,7 +168,7 @@
                 i = oAudioTracks.getTrackInfo(x)
                 language = i.getLanguage()
                 description = i.getDescription()
-                if LanguageCodes.has_key(language):
+                if language in LanguageCodes:
                     language = LanguageCodes[language][0]
                 if len(description):
                     description += " (" + language + ")"
--- a/audiosync/src/AC3main.py
+++ b/audiosync/src/AC3main.py
@@ -1,17 +1,17 @@
-from AC3utils import AC3, PCM, AC3GLOB, PCMGLOB, AC3PCM, SKIN
-from AC3delay import AC3delay
+from .AC3utils import AC3, PCM, AC3GLOB, PCMGLOB, AC3PCM, SKIN
+from .AC3delay import AC3delay
 from enigma import ePoint
-from HelpableNumberActionMap import HelpableNumberActionMap
+from .HelpableNumberActionMap import HelpableNumberActionMap
 from Components.Label import Label,MultiColorLabel
 from Components.Pixmap import MultiPixmap
 from Components.ProgressBar import ProgressBar
 from Components.config import config
-from MovableScreen import MovableScreen
+from .MovableScreen import MovableScreen
 from Screens.ChoiceBox import ChoiceBox
 from Screens.HelpMenu import HelpableScreen
 from Screens.MessageBox import MessageBox
 from Screens.Screen import Screen
-from __init__ import _
+from .__init__ import _
 
 class AC3LipSync(Screen, HelpableScreen, MovableScreen):
 
@@ -182,7 +182,7 @@
     def keyCancel(self):
         for sAudio in AC3PCM:
             iSliderValue = self.currentValue[sAudio]
-            if iSliderValue <> self.savedValue[sAudio]:
+            if iSliderValue != self.savedValue[sAudio]:
                 self.AC3delay.whichAudio = sAudio
                 self.AC3delay.setSystemDelay(sAudio, self.savedValue[sAudio], False)
         self.close()
@@ -234,7 +234,7 @@
 
     def getKeyList(self):
         keyList = []
-        for i,iValue in self.keyStep.iteritems():
+        for i,iValue in self.keyStep.items():
             if i != "0":
                 keyList.append((_("Key %(key)s (current value: %(value)i ms)") %dict(key=i, value=iValue),i))
         return keyList
--- a/audiosync/src/AC3setup.py
+++ b/audiosync/src/AC3setup.py
@@ -1,4 +1,4 @@
-from AC3utils import PLUGIN_BASE, PLUGIN_VERSION
+from .AC3utils import PLUGIN_BASE, PLUGIN_VERSION
 from Components.ActionMap import ActionMap, NumberActionMap
 from Components.Button import Button
 from Components.ConfigList import ConfigListScreen
@@ -8,7 +8,7 @@
 from Screens.ChoiceBox import ChoiceBox
 from Screens.MessageBox import MessageBox
 from Screens.Screen import Screen
-from __init__ import _
+from .__init__ import _
 import os
 
 class AC3LipSyncSetup(ConfigListScreen, Screen):
--- a/audiosync/src/HelpableNumberActionMap.py
+++ b/audiosync/src/HelpableNumberActionMap.py
@@ -5,7 +5,7 @@
     It does not have any code, just inherits the init-method from HelpableActionMap and the action from the NumberActionMap"""
     def action(self, contexts, action):
         numbers = ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9")
-        if (action in numbers and self.actions.has_key(action)):
+        if (action in numbers and action in self.actions):
             res = self.actions[action](int(action))
             if res is not None:
                 return res
--- a/audiosync/src/MovableScreen.py
+++ b/audiosync/src/MovableScreen.py
@@ -1,6 +1,6 @@
-from HelpableNumberActionMap import HelpableNumberActionMap
+from .HelpableNumberActionMap import HelpableNumberActionMap
 from Components.config import config
-from __init__ import _
+from .__init__ import _
 from enigma import ePoint, eTimer, getDesktop
 
 class MovableScreen():
--- a/audiosync/src/__init__.py
+++ b/audiosync/src/__init__.py
@@ -11,7 +11,7 @@
 def _(txt):
     t = gettext.dgettext(PluginLanguageDomain, txt)
     if t == txt:
-        print "[" + PluginLanguageDomain + "] fallback to default translation for ", txt
+        print("[" + PluginLanguageDomain + "] fallback to default translation for ", txt)
         t = gettext.gettext(txt)
     return t
 
--- a/audiosync/src/plugin.py
+++ b/audiosync/src/plugin.py
@@ -1,8 +1,8 @@
 from Components.config import config, ConfigSubsection, ConfigInteger, ConfigSubList
 from Plugins.Plugin import PluginDescriptor
 from Screens.MessageBox import MessageBox
-import AC3main
-import AC3setup
+from . import AC3main
+from . import AC3setup
 
 config.plugins.AC3LipSync = ConfigSubsection()
 config.plugins.AC3LipSync.outerBounds = ConfigInteger(default = 1000, limits = (-10000,10000))
--- a/automaticcleanup/src/plugin.py
+++ b/automaticcleanup/src/plugin.py
@@ -141,8 +141,8 @@
 			# try to import EMC module to check for its existence
 			from Plugins.Extensions.EnhancedMovieCenter.EnhancedMovieCenter import EnhancedMovieCenterMenu 
 			self.EMC_timer_autocln = config.EMC.timer_autocln.value
-		except ImportError, ie:
-			print pluginPrintname, "EMC not installed:", ie
+		except ImportError as ie:
+			print(pluginPrintname, "EMC not installed:", ie)
 			self.EMC_timer_autocln = False
 			
 		if self.EMC_timer_autocln: # Timer cleanup enabled in EMC plugin?
@@ -221,8 +221,8 @@
         checkInterval = 60 * 60 * 24 # check timerlist every 24 hours
 	def __init__(self, session):
 		self.session = session
-		if DEBUG: print pluginPrintname, "Starting in debugging mode..."
-		else: print pluginPrintname, "Starting AutomaticCleanup..."
+		if DEBUG: print(pluginPrintname, "Starting in debugging mode...")
+		else: print(pluginPrintname, "Starting AutomaticCleanup...")
 		self.timer = eTimer() # check timer
 		self.timer.callback.append(self.doCleanup)
 		self.doCleanup() # always check immediately after starting plugin
@@ -236,12 +236,12 @@
 		# config was changed in setup
 		if self.timer.isActive(): # stop timer if running
 			self.timer.stop()
-		print pluginPrintname, "Setup values have changed"
+		print(pluginPrintname, "Setup values have changed")
 		if self.cleanupEnabled(): # check only if feature is enabled
-			print pluginPrintname, "Next automatic timerlist cleanup at ", strftime("%c", localtime(time()+120))
+			print(pluginPrintname, "Next automatic timerlist cleanup at ", strftime("%c", localtime(time()+120)))
 			self.timer.startLongTimer(120) # check timerlist in 2 minutes after changing 
 		else:
-			print pluginPrintname, "Cleanup disabled"
+			print(pluginPrintname, "Cleanup disabled")
 			
 	def doCleanup(self):
 		if self.timer.isActive(): # stop timer if running
@@ -250,27 +250,27 @@
 			self.cleanupSettings()
 			self.cleanupMovies()
 			self.cleanupTimerlist()
-			print pluginPrintname, "Next automatic cleanup at", strftime("%c", localtime(time()+self.checkInterval))
+			print(pluginPrintname, "Next automatic cleanup at", strftime("%c", localtime(time()+self.checkInterval)))
 			self.timer.startLongTimer(self.checkInterval) # check again after x secs
 		else:
-			print pluginPrintname, "Cleanup disabled"
+			print(pluginPrintname, "Cleanup disabled")
 		
 	def cleanupSettings(self):
 		if int(config.plugins.AutomaticCleanup.keepSettings.value) > -1 or int(config.plugins.AutomaticCleanup.deleteSettingsOlderThan.value) > -1: # check only if feature is enabled
-			print pluginPrintname, "Cleaning up setting backups"
+			print(pluginPrintname, "Cleaning up setting backups")
 			self.backupPath = self.getBackupPath()
 			if (path.exists(self.backupPath) == False):
-				print pluginPrintname, "No backup directory available!"
+				print(pluginPrintname, "No backup directory available!")
 				return
 			self.settingList = glob(self.backupPath + '/*-enigma2settingsbackup.tar.gz')
 			self.numSettings = len(self.settingList)
 			if self.numSettings == 0:
-				print pluginPrintname, "No deletable setting backup found!"
+				print(pluginPrintname, "No deletable setting backup found!")
 			else:
 				self.settingList.sort()
 				self.filterSettings()
 		else:
-			print pluginPrintname, "Setting backups cleanup disabled"
+			print(pluginPrintname, "Setting backups cleanup disabled")
 				
 	def filterSettings(self):
 		self.deleteList = [ ]
@@ -278,15 +278,15 @@
 		keep = int(config.plugins.AutomaticCleanup.keepSettings.value)
 		if keep > -1: # don't keep all setting backups
 			if keep > self.numSettings:
-				print pluginPrintname, "Found %i setting backup(s), keeping max %i" %(self.numSettings+1, keep) # increment for uncounted latest
-			else:
-				print pluginPrintname, "Keeping the %i latest settings"  % keep
+				print(pluginPrintname, "Found %i setting backup(s), keeping max %i" %(self.numSettings+1, keep)) # increment for uncounted latest
+			else:
+				print(pluginPrintname, "Keeping the %i latest settings"  % keep)
 				# add all settings > config.plugins.AutomaticCleanup.keepSettings.value
 				# to a new list. the settings in this new list will be deleted later.
 				self.deleteList = self.settingList[0 : self.numSettings - keep + 1] # increment for uncounted latest
 
 		if int(config.plugins.AutomaticCleanup.deleteSettingsOlderThan.value) > -1:
-			print pluginPrintname, "Searching for outdated setting backup(s)"
+			print(pluginPrintname, "Searching for outdated setting backup(s)")
 			now = int(time())
 			# 86400 = one day in seconds
 			deleteOlderThan = now - 86400 * int(config.plugins.AutomaticCleanup.deleteSettingsOlderThan.value)
@@ -306,28 +306,28 @@
 				self.backupPath = self.getBackupPath()
 				backupDatePos = self.settingList[i].rfind('/') + 1
 				backupDate = self.settingList[i][backupDatePos:backupDatePos + 10]
-				if DEBUG: print pluginPrintname, "Backup path: %s, file: %s, date: %s"  %(self.backupPath, self.settingList[i], backupDate)
+				if DEBUG: print(pluginPrintname, "Backup path: %s, file: %s, date: %s"  %(self.backupPath, self.settingList[i], backupDate))
 				settingTime = mktime(strptime(backupDate, "%Y-%m-%d"))
 				if int(settingTime) > deleteOlderThan:
 					break
 				self.deleteList.append(self.settingList[i])
 				i += 1
 			
-			print pluginPrintname, "Found %i outdated setting backup(s)"  % i
+			print(pluginPrintname, "Found %i outdated setting backup(s)"  % i)
 
 		for setting in self.deleteList:
-			if DEBUG: print pluginPrintname, "Setting backup to delete:", setting
+			if DEBUG: print(pluginPrintname, "Setting backup to delete:", setting)
 			else: remove(setting)
 
-		print pluginPrintname, "Deleted %i setting backup(s)"  % len(self.deleteList)
+		print(pluginPrintname, "Deleted %i setting backup(s)"  % len(self.deleteList))
 						
 	def getBackupPath(self):	
 		try:
 			# try to import SoftwareManager module to check for its existence
 			from Plugins.SystemPlugins.SoftwareManager.plugin import UpdatePluginMenu
 			backuppath = config.plugins.configurationbackup.backuplocation.value
-		except ImportError, ie:
-			print pluginPrintname, "SoftwareManager not installed:", ie
+		except ImportError as ie:
+			print(pluginPrintname, "SoftwareManager not installed:", ie)
 			backuppath = '/media/hdd/'
 		if backuppath.endswith('/'): return (backuppath + 'backup')
 		else: return (backuppath + '/backup')		
@@ -337,29 +337,29 @@
 			# try to import EMC module to check for its existence
 			from Plugins.Extensions.EnhancedMovieCenter.EnhancedMovieCenter import EnhancedMovieCenterMenu 
 			self.EMC_timer_autocln = config.EMC.timer_autocln.value
-		except ImportError, ie:
-			print pluginPrintname, "EMC not installed:", ie
+		except ImportError as ie:
+			print(pluginPrintname, "EMC not installed:", ie)
 			self.EMC_timer_autocln = False
 			
 		if int(config.plugins.AutomaticCleanup.deleteTimersOlderThan.value) > -1:  # check only if feature is enabled
 			if self.EMC_timer_autocln:	# Duplicate cleanup?
-				print pluginPrintname, "Timerlist cleanup skipped because it is already enabled in EMC" # we skip check to avoid crash
+				print(pluginPrintname, "Timerlist cleanup skipped because it is already enabled in EMC") # we skip check to avoid crash
 			else:
 				expiration = time() - int(config.plugins.AutomaticCleanup.deleteTimersOlderThan.value) * 86400 # calculate end time for comparison with processed timers
-				print pluginPrintname, "Cleaning up timerlist-entries older than", strftime("%c", localtime(expiration))
+				print(pluginPrintname, "Cleaning up timerlist-entries older than", strftime("%c", localtime(expiration)))
 				if not DEBUG:
 					self.session.nav.RecordTimer.processed_timers = [timerentry for timerentry in self.session.nav.RecordTimer.processed_timers if timerentry.repeated or (timerentry.end and timerentry.end > expiration)] # cleanup timerlist
 		else:
-			print pluginPrintname, "Timerlist cleanup disabled"
+			print(pluginPrintname, "Timerlist cleanup disabled")
 		
 	def timerentryOnStateChange(self, timer):
 		if int(config.plugins.AutomaticCleanup.deleteTimersOlderThan.value) == 0 and timer.state == TimerEntry.StateEnded and timer.cancelled is not True: #if enabled, timerentry ended and it was not cancelled by user
-			print pluginPrintname, "Timerentry has been changed to StateEnd"
+			print(pluginPrintname, "Timerentry has been changed to StateEnd")
 			self.cleanupTimerlist() # and check if entries have to be cleaned up in the timerlist
 		
 	def cleanupMovies(self):
 		if config.plugins.AutomaticCleanup.deleteOrphanedMovieFiles.value: # check only if feature is enabled
-			print pluginPrintname, "Cleaning up orphaned movies"
+			print(pluginPrintname, "Cleaning up orphaned movies")
 			moviePath = []
 			excludePath = []
 			
@@ -376,37 +376,37 @@
 				moviePath.append(config.EMC.movie_homepath.value)
 				try: # with v3 name
 					if len(config.EMC.movie_trashcan_path.value) > 1:	# Trashpath specified?
-						if DEBUG: print pluginPrintname, "EMC v3 trashcan path is", config.EMC.movie_trashcan_path.value
+						if DEBUG: print(pluginPrintname, "EMC v3 trashcan path is", config.EMC.movie_trashcan_path.value)
 						if config.EMC.movie_trashcan_path.value.endswith('/'): excludePath.append(config.EMC.movie_trashcan_path.value)
 						else: excludePath.append(config.EMC.movie_trashcan_path.value + "/")
-				except KeyError, ke:
-					print pluginPrintname, "EMC v3 trashcan path not specified", ke
+				except KeyError as ke:
+					print(pluginPrintname, "EMC v3 trashcan path not specified", ke)
 					try: # else with v2 name
 						if len(config.EMC.movie_trashpath.value) > 1:	# Trashpath specified?
-							if DEBUG: print pluginPrintname, "EMC v2 trashcan path is", config.EMC.movie_trashpath.value
+							if DEBUG: print(pluginPrintname, "EMC v2 trashcan path is", config.EMC.movie_trashpath.value)
 							if config.EMC.movie_trashpath.value.endswith('/'): excludePath.append(config.EMC.movie_trashpath.value)
 							else: excludePath.append(config.EMC.movie_trashpath.value + "/")
-					except KeyError, ke:
-						print pluginPrintname, "EMC v2 trashcan path not specified", ke
-			except ImportError, ie:
-				print pluginPrintname, "EMC not installed:", ie
+					except KeyError as ke:
+						print(pluginPrintname, "EMC v2 trashcan path not specified", ke)
+			except ImportError as ie:
+				print(pluginPrintname, "EMC not installed:", ie)
 
 			if len(moviePath) == 0:
-				print pluginPrintname, "No movies found!"
+				print(pluginPrintname, "No movies found!")
 			else:
 				for f in range(len(excludePath)):
 					if excludePath[f].startswith("/hdd"): excludePath[f] = "/media" + excludePath[f]
-				print pluginPrintname, "Excluded movie path:", excludePath
+				print(pluginPrintname, "Excluded movie path:", excludePath)
 				for checkPath in moviePath:	
 					self.filterMovies(str(checkPath), excludePath)				
 		else:
-			print pluginPrintname, "Orphaned movies cleanup disabled"
+			print(pluginPrintname, "Orphaned movies cleanup disabled")
 
 	def filterMovies(self, scanPath, exclude = []):
 		if not scanPath.endswith("/"): scanPath += "/"
 		if scanPath.startswith("/hdd"): scanPath = "/media" + scanPath
 		if not path.exists(scanPath) or scanPath in exclude: return
-		if DEBUG: print pluginPrintname, "Checking moviepath:", scanPath
+		if DEBUG: print(pluginPrintname, "Checking moviepath:", scanPath)
 		extensions = [".ts.ap", ".ts.cuts", ".ts.cutsr", ".ts.gm", ".ts.meta", ".ts.sc", ".eit", ".png", ".ts_mp.jpg"]
 
 		for p in listdir(scanPath):
@@ -419,9 +419,9 @@
 						if not path.exists(scanPath + p.replace(ext, ".ts")):							
 							if not DEBUG:
 								remove(scanPath + p)
-								print pluginPrintname, "Orphaned movie file deleted:", scanPath + p
+								print(pluginPrintname, "Orphaned movie file deleted:", scanPath + p)
 							else:
-								print pluginPrintname, "Deletable orphaned movie file:", scanPath + p
+								print(pluginPrintname, "Deletable orphaned movie file:", scanPath + p)
 						break
 
 	def cleanupEnabled(self):
--- a/automatictimerlistcleanup/src/__init__.py
+++ b/automatictimerlistcleanup/src/__init__.py
@@ -10,7 +10,7 @@
 def _(txt):
 	t = gettext.dgettext("AutomaticTimerlistCleanup", txt)
 	if t == txt:
-		print "[AutomaticTimerlistCleanup] fallback to default translation for", txt
+		print("[AutomaticTimerlistCleanup] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/automatictimerlistcleanup/src/plugin.py
+++ b/automatictimerlistcleanup/src/plugin.py
@@ -75,7 +75,7 @@
 	TIMER_INTERVAL = 86400 # check timerlist every 24 hour
 	def __init__(self, session):
 		self.session = session
-		print "[AutomaticTimerlistCleanUp] Starting AutomaticTimerlistCleanUp..."
+		print("[AutomaticTimerlistCleanUp] Starting AutomaticTimerlistCleanUp...")
 		self.timer = eTimer() # check timer
 		self.timer.callback.append(self.cleanupTimerlist)
 		self.cleanupTimerlist() # always check immediately after starting plugin
@@ -85,27 +85,27 @@
 	def cleanupTimerlist(self):
 		if int(config.plugins.automatictimerlistcleanup.type.value) > -1: # check only if feature is enabled
 			value = time() - int(config.plugins.automatictimerlistcleanup.type.value) * 86400 # calculate end time for comparison with processed timers
-			print "[AutomaticTimerlistCleanUp] Cleaning up timerlist-entries older than ",strftime("%c", localtime(value))
+			print("[AutomaticTimerlistCleanUp] Cleaning up timerlist-entries older than ",strftime("%c", localtime(value)))
 			self.session.nav.RecordTimer.processed_timers = [ timerentry for timerentry in self.session.nav.RecordTimer.processed_timers if timerentry.disabled or (timerentry.end and timerentry.end > value) ] # cleanup timerlist
-			print "[AutomaticTimerlistCleanUp] Next automatic timerlist cleanup at ", strftime("%c", localtime(time()+self.TIMER_INTERVAL))
+			print("[AutomaticTimerlistCleanUp] Next automatic timerlist cleanup at ", strftime("%c", localtime(time()+self.TIMER_INTERVAL)))
 			self.timer.startLongTimer(self.TIMER_INTERVAL) # check again in x secs
 		else:
-			print "[AutomaticTimerlistCleanUp] disabled"
+			print("[AutomaticTimerlistCleanUp] disabled")
 		
 	def configChange(self, configElement = None):
 		# config was changed in setup
 		if self.timer.isActive(): # stop timer if running
 			self.timer.stop()
-		print "[AutomaticTimerlistCleanUp] Setup values have changed"
+		print("[AutomaticTimerlistCleanUp] Setup values have changed")
 		if int(config.plugins.automatictimerlistcleanup.type.value) > -1:
-			print "[AutomaticTimerlistCleanUp] Next automatic timerlist cleanup at ", strftime("%c", localtime(time()+120))
+			print("[AutomaticTimerlistCleanUp] Next automatic timerlist cleanup at ", strftime("%c", localtime(time()+120)))
 			self.timer.startLongTimer(120) # check timerlist in 2 minutes after changing 
 		else:
-			print "[AutomaticTimerlistCleanUp] disabled"
+			print("[AutomaticTimerlistCleanUp] disabled")
 		
 	def timerentryOnStateChange(self, timer):
 		if int(config.plugins.automatictimerlistcleanup.type.value) > -1 and timer.state == TimerEntry.StateEnded and timer.cancelled is not True: #if enabled, timerentry ended and it was not cancelled by user
-			print "[AutomaticTimerlistCleanUp] Timerentry has been changed to StateEnd"
+			print("[AutomaticTimerlistCleanUp] Timerentry has been changed to StateEnd")
 			if self.timer.isActive(): # stop timer if running
 				self.timer.stop()
 			self.cleanupTimerlist() # and check if entries have to be cleaned up in the timerlist
--- a/automaticvolumeadjustment/src/AutomaticVolumeAdjustment.py
+++ b/automaticvolumeadjustment/src/AutomaticVolumeAdjustment.py
@@ -28,14 +28,14 @@
 from enigma import iPlayableService, iServiceInformation, eDVBVolumecontrol, eServiceCenter, eServiceReference
 from ServiceReference import ServiceReference
 from Components.VolumeControl import VolumeControl
-from AutomaticVolumeAdjustmentConfig import AutomaticVolumeAdjustmentConfig, getVolumeDict
+from .AutomaticVolumeAdjustmentConfig import AutomaticVolumeAdjustmentConfig, getVolumeDict
 
 class AutomaticVolumeAdjustment(Screen):
 	instance = None
 	def __init__(self, session):
 		self.session = session
 		Screen.__init__(self, session)
-		print "[AutomaticVolumeAdjustment] Starting AutomaticVolumeAdjustment..."
+		print("[AutomaticVolumeAdjustment] Starting AutomaticVolumeAdjustment...")
 		self.__event_tracker = ServiceEventTracker(screen = self, eventmap =
 			{
 				iPlayableService.evUpdatedInfo: self.__evUpdatedInfo,
@@ -57,7 +57,7 @@
 		self.volctrl = eDVBVolumecontrol.getInstance()
 
 	def initializeConfigValues(self, configVA, fromOutside):
-		print "[AutomaticVolumeAdjustment] initialize config values..."
+		print("[AutomaticVolumeAdjustment] initialize config values...")
 		self.serviceList = { }
 		self.modus = configVA.config.modus.value # get modus
 		if self.modus == "0": # Automatic volume adjust mode
@@ -92,7 +92,7 @@
 
 	def __evUpdatedInfo(self):
 		if self.newService and self.session.nav.getCurrentlyPlayingServiceReference() and self.enabled:
-			print "[AutomaticVolumeAdjustment] service changed"
+			print("[AutomaticVolumeAdjustment] service changed")
 			self.newService = False
 			self.currentVolume = 0 # init
 			if self.modus == "0": # Automatic volume adjust mode
@@ -115,7 +115,7 @@
 							if ajvol == 0:
 								ajvol = vol - currentvol # correction for debug -print only
 							self.setVolume(vol+self.lastAdjustedValue)
-							print "[AutomaticVolumeAdjustment] Change volume for service: %s (+%d) to %d"%(ServiceReference(ref).getServiceName().replace('\xc2\x86', '').replace('\xc2\x87', ''), ajvol, self.volctrl.getVolume())
+							print("[AutomaticVolumeAdjustment] Change volume for service: %s (+%d) to %d"%(ServiceReference(ref).getServiceName().replace('\xc2\x86', '').replace('\xc2\x87', ''), ajvol, self.volctrl.getVolume()))
 						self.currentVolume = self.volctrl.getVolume() # ac3||dts service , save current volume
 					else:
 						# mpeg or whatever audio
@@ -126,7 +126,7 @@
 							if ajvol > self.maxMPEGVolume:
 									ajvol = self.maxMPEGVolume
 							self.setVolume(ajvol)
-							print "[AutomaticVolumeAdjustment] Change volume for service: %s (-%d) to %d"%(ServiceReference(self.session.nav.getCurrentlyPlayingServiceReference()).getServiceName().replace('\xc2\x86', '').replace('\xc2\x87', ''), vol-ajvol, self.volctrl.getVolume())
+							print("[AutomaticVolumeAdjustment] Change volume for service: %s (-%d) to %d"%(ServiceReference(self.session.nav.getCurrentlyPlayingServiceReference()).getServiceName().replace('\xc2\x86', '').replace('\xc2\x87', ''), vol-ajvol, self.volctrl.getVolume()))
 							self.lastAdjustedValue = 0 # mpeg audio, no delta here
 					return # get out of here, nothing to do anymore
 			else: # modus = Remember channel volume
@@ -138,7 +138,7 @@
 						if lastvol != -1 and lastvol != self.volctrl.getVolume():
 							# set volume value
 							self.setVolume(lastvol)
-							print "[AutomaticVolumeAdjustment] Set last used volume value for service %s to %d"%(ServiceReference(ref).getServiceName().replace('\xc2\x86', '').replace('\xc2\x87', ''), self.volctrl.getVolume())
+							print("[AutomaticVolumeAdjustment] Set last used volume value for service %s to %d"%(ServiceReference(ref).getServiceName().replace('\xc2\x86', '').replace('\xc2\x87', ''), self.volctrl.getVolume()))
 					return # get out of here, nothing to do anymore
 			if not self.pluginStarted:
 				if self.modus == "0": # Automatic volume adjust mode
@@ -198,7 +198,7 @@
 	global baseVolumeControl_setVolume
 	if baseVolumeControl_setVolume is None:
 		baseVolumeControl_setVolume = VolumeControl.setVolume
-	if enabled and maxVolume <> 100:
+	if enabled and maxVolume != 100:
 		VolumeControl.setVolume = AVA_setVolume
 		VolumeControl.maxVolume = maxVolume
 	else:
--- a/automaticvolumeadjustment/src/AutomaticVolumeAdjustmentConfig.py
+++ b/automaticvolumeadjustment/src/AutomaticVolumeAdjustmentConfig.py
@@ -51,18 +51,18 @@
 
 	# load config file and initialize 
 	def loadConfigFile(self):
-		print "[AutomaticVolumeAdjustmentConfig] Loading config file..."
+		print("[AutomaticVolumeAdjustmentConfig] Loading config file...")
 		self.config = Config()
 		if not os_path.exists(self.CONFIG_FILE):
 			try:
 				fd = os_open( self.CONFIG_FILE, os_O_RDWR|os_O_CREAT)
 				os_close( fd )
-			except Exception, e:
-				print "Error: ", e
+			except Exception as e:
+				print("Error: ", e)
 		try:
 			self.config.loadFromFile(self.CONFIG_FILE)
-		except Exception, e:
-			print "Error: ", e
+		except Exception as e:
+			print("Error: ", e)
 		self.config.entriescount =  ConfigInteger(0)
 		self.config.Entries = ConfigSubList()
 		self.config.enable = ConfigYesNo(default = False)
@@ -79,7 +79,7 @@
 			while i < count:
 				self.initEntryConfig()
 				i += 1
-		print "[AutomaticVolumeAdjustmentConfig] Loaded %s entries from config file..." % count
+		print("[AutomaticVolumeAdjustmentConfig] Loaded %s entries from config file..." % count)
 
 	def initEntryConfig(self):
 		self.config.Entries.append(ConfigSubsection())
@@ -97,5 +97,5 @@
 		self.save()
 	
 	def save(self):
-		print "[AutomaticVolumeAdjustmentConfig] saving config file..."
+		print("[AutomaticVolumeAdjustmentConfig] saving config file...")
 		self.config.saveToFile(self.CONFIG_FILE)
--- a/automaticvolumeadjustment/src/AutomaticVolumeAdjustmentSetup.py
+++ b/automaticvolumeadjustment/src/AutomaticVolumeAdjustmentSetup.py
@@ -30,8 +30,8 @@
 from Components.ConfigList import ConfigListScreen
 from Components.config import getConfigListEntry, config
 from ServiceReference import ServiceReference
-from AutomaticVolumeAdjustment import AutomaticVolumeAdjustment
-from AutomaticVolumeAdjustmentConfig import AutomaticVolumeAdjustmentConfig
+from .AutomaticVolumeAdjustment import AutomaticVolumeAdjustment
+from .AutomaticVolumeAdjustmentConfig import AutomaticVolumeAdjustmentConfig
 
 		
 class AutomaticVolumeAdjustmentConfigScreen(ConfigListScreen, Screen):
--- a/automaticvolumeadjustment/src/plugin.py
+++ b/automaticvolumeadjustment/src/plugin.py
@@ -21,9 +21,9 @@
 #  distributed other than under the conditions noted above.
 #
 from Plugins.Plugin import PluginDescriptor
-from AutomaticVolumeAdjustmentSetup import AutomaticVolumeAdjustmentConfigScreen
-from AutomaticVolumeAdjustment import AutomaticVolumeAdjustment
-from AutomaticVolumeAdjustmentConfig import saveVolumeDict
+from .AutomaticVolumeAdjustmentSetup import AutomaticVolumeAdjustmentConfigScreen
+from .AutomaticVolumeAdjustment import AutomaticVolumeAdjustment
+from .AutomaticVolumeAdjustmentConfig import saveVolumeDict
 
 def autostart(reason, **kwargs):
 	if "session" in kwargs:
--- a/autoresolution/src/plugin.py
+++ b/autoresolution/src/plugin.py
@@ -43,7 +43,7 @@
 		("8000", "8 " + _("seconds")), ("9000", "9 " + _("seconds")), ("10000", "10 " + _("seconds"))])
 
 def setDeinterlacer(mode):
-	print "[AutoRes] switch deinterlacer mode to %s" % mode
+	print("[AutoRes] switch deinterlacer mode to %s" % mode)
 	f = open('/proc/stb/vmpeg/deinterlace' , "w")
 	f.write("%s\n" % mode)
 	f.close()
@@ -99,7 +99,7 @@
 
 	def __evUpdatedInfo(self):
 		if self.newService:
-			print "[AutoRes] service changed"
+			print("[AutoRes] service changed")
 			self.after_switch_delay = False
 			if int(config.plugins.autoresolution.delay_switch_mode.value) > 0:
 				self.timer.start(int(config.plugins.autoresolution.delay_switch_mode.value))
@@ -114,7 +114,7 @@
 		global usable
 		port_changed = configEntry == config.av.videoport
 		if port_changed:
-			print "port changed to", configEntry.value
+			print("port changed to", configEntry.value)
 			if port:
 				config.av.videomode[port].removeNotifier(self.defaultModeChanged)
 			port = config.av.videoport.value
@@ -123,12 +123,12 @@
 			usable = config.plugins.autoresolution.enable.value and not port in ('DVI-PC', 'Scart')
 		else: # videomode changed in normal av setup
 			global videoresolution_dictionary
-			print "mode changed to", configEntry.value
+			print("mode changed to", configEntry.value)
 			default = (configEntry.value, _("default"))
 			preferedmodes = [mode[0] for mode in video_hw.getModeList(port) if mode[0] != default[0]]
 			preferedmodes.append(default)
-			print "default", default
-			print "preferedmodes", preferedmodes
+			print("default", default)
+			print("preferedmodes", preferedmodes)
 			videoresolution_dictionary = {}
 			config.plugins.autoresolution.videoresolution = ConfigSubDict()
 			for mode in resolutions:
@@ -150,22 +150,22 @@
 			self.changeVideomode()
 
 	def __evVideoFramerateChanged(self):
-		print "[AutoRes] got event evFramerateChanged"
+		print("[AutoRes] got event evFramerateChanged")
 		if not self.timer.isActive() or self.after_switch_delay:
 			self.timer.start(100) # give other pending events a chance..
 
 	def __evVideoSizeChanged(self):
-		print "[AutoRes] got event evVideoSizeChanged"
+		print("[AutoRes] got event evVideoSizeChanged")
 		if not self.timer.isActive() or self.after_switch_delay:
 			self.timer.start(100) # give other pending events a chance..
 
 	def __evVideoProgressiveChanged(self):
-		print "[AutoRes] got event evVideoProgressiveChanged"
+		print("[AutoRes] got event evVideoProgressiveChanged")
 		if not self.timer.isActive() or self.after_switch_delay:
 			self.timer.start(100) # give other pending events a chance..
 
 	def determineContent(self):
-		print "[AutoRes] determineContent"
+		print("[AutoRes] determineContent")
 		self.timer.stop()
 		self.after_switch_delay = True
 		if usable:
@@ -176,7 +176,7 @@
 			framerate = info and info.getInfo(iServiceInformation.sFrameRate)
 			if height != -1 and width != -1 and framerate != -1:
 				frate = str(framerate)[:2] #fallback?
-				if frqdic.has_key(framerate):
+				if framerate in frqdic:
 					frate = frqdic[framerate]
 				progressive = info and info.getInfo(iServiceInformation.sProgressive)
 
@@ -200,11 +200,11 @@
 				else:
 					setDeinterlacer(config.plugins.autoresolution.deinterlacer.value)
 
-				print "[AutoRes] new content is %sx%s%s%s" %(width, height, prog, frate)
-
-				if videoresolution_dictionary.has_key(new_mode):
+				print("[AutoRes] new content is %sx%s%s%s" %(width, height, prog, frate))
+
+				if new_mode in videoresolution_dictionary:
 					new_mode = videoresolution_dictionary[new_mode].value
-					print '[AutoRes] determined videomode', new_mode
+					print('[AutoRes] determined videomode', new_mode)
 					old = resolutionlabel["content"].getText()
 					resolutionlabel["content"].setText("Videocontent: %sx%s%s %sHZ" % (width, height, prog, frate))
 					if self.lastmode != new_mode:
@@ -217,7 +217,7 @@
 		if usable:
 			mode = self.lastmode
 			if mode.find("p24") != -1 or mode.find("p25") != -1 or mode.find("p30") != -1:
-				print "[AutoRes] switching to", mode
+				print("[AutoRes] switching to", mode)
 				v = open('/proc/stb/video/videomode' , "w")
 				v.write("%s\n" % mode)
 				v.close()
@@ -249,7 +249,7 @@
 		rate = config.av.videorate[mode].value
 		resolutionlabel["restxt"].setText("Videomode: %s %s %s" % (port, mode, rate))
 		if set:
-			print "[AutoRes] switching to %s %s %s" % (port, mode, rate)
+			print("[AutoRes] switching to %s %s %s" % (port, mode, rate))
 			if config.plugins.autoresolution.showinfo.value:
 				resolutionlabel.show()
 			video_hw.setMode(port, mode, rate)
--- a/autotimer/src/AutoPoller.py
+++ b/autotimer/src/AutoPoller.py
@@ -3,7 +3,7 @@
 
 # Config
 from Components.config import config
-from plugin import autotimer
+from .plugin import autotimer
 
 # Notifications
 from Tools.FuzzyDate import FuzzyTime
@@ -15,7 +15,7 @@
 
 	def __init__(self):
 		# Init Timer
-		print "[AutoTimer] Auto Poll Enabled"
+		print("[AutoTimer] Auto Poll Enabled")
 		self.timer = eTimer()
 
 	def start(self):
@@ -31,9 +31,9 @@
 	def query(self):
 		self.timer.stop()
 		from Screens.Standby import inStandby
-		print "[AutoTimer] Auto Poll"
+		print("[AutoTimer] Auto Poll")
 		if config.plugins.autotimer.onlyinstandby.value and inStandby:
-			print "[AutoTimer] Auto Poll Started"
+			print("[AutoTimer] Auto Poll Started")
 			# Ignore any program errors
 			try:
 				ret = autotimer.parseEPG(autoPoll = True)
@@ -42,7 +42,7 @@
 				import traceback, sys
 				traceback.print_exc(file=sys.stdout)
 		elif not config.plugins.autotimer.onlyinstandby.value:
-			print "[AutoTimer] Auto Poll Started"
+			print("[AutoTimer] Auto Poll Started")
 			# Ignore any program errors
 			try:
 				ret = autotimer.parseEPG(autoPoll = True)
--- a/autotimer/src/AutoTimer.py
+++ b/autotimer/src/AutoTimer.py
@@ -1,9 +1,9 @@
-from __future__ import print_function
+
 
 # Plugins Config
 from xml.etree.cElementTree import parse as cet_parse
 from os import path as os_path
-from AutoTimerConfiguration import parseConfig, buildConfig
+from .AutoTimerConfiguration import parseConfig, buildConfig
 
 # Tasks
 import Components.Task
@@ -34,7 +34,7 @@
 # import Queue
 
 # AutoTimer Component
-from AutoTimerComponent import preferredAutoTimerComponent
+from .AutoTimerComponent import preferredAutoTimerComponent
 
 from itertools import chain
 from collections import defaultdict
@@ -603,7 +603,7 @@
 						# We start our search right after our actual index
 						# Attention we have to use a copy of the list, because we have to append the previous older matches
 						lepgm = len(epgmatches)
-						for i in xrange(lepgm):
+						for i in range(lepgm):
 							servicerefS, eitS, nameS, beginS, durationS, shortdescS, extdescS = epgmatches[ (i+idx+1)%lepgm ]
 							if self.checkSimilarity(timer, name, nameS, shortdesc, shortdescS, extdesc, extdescS, force=True ):
 								# Check if the similar is already known
--- a/autotimer/src/AutoTimerConfiguration.py
+++ b/autotimer/src/AutoTimerConfiguration.py
@@ -1,10 +1,10 @@
 # -*- coding: UTF-8 -*-
-from __future__ import print_function
+
 
 # for localized messages
 from . import _
 
-from AutoTimerComponent import preferredAutoTimerComponent, getDefaultEncoding
+from .AutoTimerComponent import preferredAutoTimerComponent, getDefaultEncoding
 from RecordTimer import AFTEREVENT
 from Tools.XMLTools import stringToXML
 from ServiceReference import ServiceReference
--- a/autotimer/src/AutoTimerEditor.py
+++ b/autotimer/src/AutoTimerEditor.py
@@ -1355,9 +1355,9 @@
 		))
 
 def addAutotimerFromSearchString(session, match):
-	from AutoTimerComponent import preferredAutoTimerComponent
-	from AutoTimerImporter import AutoTimerImporter
-	from plugin import autotimer
+	from .AutoTimerComponent import preferredAutoTimerComponent
+	from .AutoTimerImporter import AutoTimerImporter
+	from .plugin import autotimer
 
 	autotimer.readXml()
 
@@ -1383,9 +1383,9 @@
 	)
 
 def addAutotimerFromEvent(session, evt = None, service = None):
-	from AutoTimerComponent import preferredAutoTimerComponent
-	from AutoTimerImporter import AutoTimerImporter
-	from plugin import autotimer
+	from .AutoTimerComponent import preferredAutoTimerComponent
+	from .AutoTimerImporter import AutoTimerImporter
+	from .plugin import autotimer
 
 	autotimer.readXml()
 
@@ -1435,9 +1435,9 @@
 	)
 
 def addAutotimerFromService(session, service = None):
-	from AutoTimerComponent import preferredAutoTimerComponent
-	from AutoTimerImporter import AutoTimerImporter
-	from plugin import autotimer
+	from .AutoTimerComponent import preferredAutoTimerComponent
+	from .AutoTimerImporter import AutoTimerImporter
+	from .plugin import autotimer
 
 	autotimer.readXml()
 
@@ -1504,7 +1504,7 @@
 		)
 
 def addAutotimerFromEventSilent(session, evt = None, service = None):
-	from plugin import autotimer
+	from .plugin import autotimer
 
 	autotimer.readXml()
 
@@ -1546,7 +1546,7 @@
 
 def editorCallback(ret):
 	if ret:
-		from plugin import autotimer
+		from .plugin import autotimer
 
 		autotimer.readXml()
 
--- a/autotimer/src/AutoTimerImporter.py
+++ b/autotimer/src/AutoTimerImporter.py
@@ -19,7 +19,7 @@
 
 # Needed to convert our timestamp back and forth
 from time import localtime
-from AutoTimerEditor import weekdays
+from .AutoTimerEditor import weekdays
 
 from enigma import eServiceReference
 
--- a/autotimer/src/AutoTimerOverview.py
+++ b/autotimer/src/AutoTimerOverview.py
@@ -6,14 +6,14 @@
 from Screens.HelpMenu import HelpableScreen
 from Screens.MessageBox import MessageBox
 from Screens.ChoiceBox import ChoiceBox
-from AutoTimerEditor import AutoTimerEditor, AutoTimerChannelSelection
-from AutoTimerImporter import AutoTimerImportSelector
-from AutoTimerPreview import AutoTimerPreview
-from AutoTimerSettings import AutoTimerSettings
-from AutoTimerWizard import AutoTimerWizard
+from .AutoTimerEditor import AutoTimerEditor, AutoTimerChannelSelection
+from .AutoTimerImporter import AutoTimerImportSelector
+from .AutoTimerPreview import AutoTimerPreview
+from .AutoTimerSettings import AutoTimerSettings
+from .AutoTimerWizard import AutoTimerWizard
 
 # GUI (Components)
-from AutoTimerList import AutoTimerList
+from .AutoTimerList import AutoTimerList
 from Components.ActionMap import HelpableActionMap
 from Components.Sources.StaticText import StaticText
 
@@ -106,7 +106,7 @@
 		self.onFirstExecBegin.append(self.firstExec)
 
 	def firstExec(self):
-		from plugin import autotimerHelp
+		from .plugin import autotimerHelp
 		if config.plugins.autotimer.show_help.value and autotimerHelp:
 			config.plugins.autotimer.show_help.value = False
 			config.plugins.autotimer.show_help.save()
@@ -223,7 +223,7 @@
 			(_("Edit new timer defaults"), "defaults"),
 		]
 
-		from plugin import autotimerHelp
+		from .plugin import autotimerHelp
 		if autotimerHelp:
 			list.insert(0, (_("Help"), "help"))
 			list.insert(1, (_("Frequently asked questions") , "faq"))
@@ -243,7 +243,7 @@
 		ret = ret and ret[1]
 		if ret:
 			if ret == "help":
-				from plugin import autotimerHelp
+				from .plugin import autotimerHelp
 				autotimerHelp.open(self.session)
 			elif ret == "faq":
 				from Plugins.SystemPlugins.MPHelp import PluginHelp, XMLHelpReader
--- a/autotimer/src/AutoTimerResource.py
+++ b/autotimer/src/AutoTimerResource.py
@@ -1,19 +1,19 @@
 # -*- coding: UTF-8 -*-
-from AutoTimer import AutoTimer
-from AutoTimerConfiguration import CURRENT_CONFIG_VERSION
+from .AutoTimer import AutoTimer
+from .AutoTimerConfiguration import CURRENT_CONFIG_VERSION
 from RecordTimer import AFTEREVENT
 from twisted.internet import reactor
 from twisted.web import http, resource, server
 import threading
 try:
-	from urllib import unquote
+	from urllib.parse import unquote
 except ImportError as ie:
 	from urllib.parse import unquote
 from ServiceReference import ServiceReference
 from Tools.XMLTools import stringToXML
 from enigma import eServiceReference
 from . import _, config, iteritems
-from plugin import autotimer
+from .plugin import autotimer
 
 API_VERSION = "1.3"
 
@@ -378,7 +378,7 @@
 
 		if config.plugins.autotimer.autopoll.value:
 			if plugin.autopoller is None:
-				from AutoPoller import AutoPoller
+				from .AutoPoller import AutoPoller
 				plugin.autopoller = AutoPoller()
 			plugin.autopoller.start(initial = False)
 		else:
--- a/autotimer/src/AutoTimerWizard.py
+++ b/autotimer/src/AutoTimerWizard.py
@@ -4,7 +4,7 @@
 # GUI (Screens)
 from Screens.WizardLanguage import WizardLanguage
 from Screens.Rc import Rc
-from AutoTimerEditor import AutoTimerEditorBase, AutoTimerServiceEditor, \
+from .AutoTimerEditor import AutoTimerEditorBase, AutoTimerServiceEditor, \
 		AutoTimerFilterEditor
 
 # GUI (Components)
--- a/autotimer/src/__init__.py
+++ b/autotimer/src/__init__.py
@@ -45,18 +45,18 @@
 	if gettext.dgettext(PluginLanguageDomain, txt):
 		return gettext.dgettext(PluginLanguageDomain, txt)
 	else:
-		print "[" + PluginLanguageDomain + "] fallback to default translation for " + txt
+		print("[" + PluginLanguageDomain + "] fallback to default translation for " + txt)
 		return gettext.gettext(txt)
 
 language.addCallback(localeInit())
 
 try:
 	xrange = xrange
-	iteritems = lambda d: d.iteritems()
-	itervalues = lambda d: d.itervalues()
+	iteritems = lambda d: iter(d.items())
+	itervalues = lambda d: iter(d.values())
 except NameError:
 	xrange = range
-	iteritems = lambda d: d.items()
-	itervalues = lambda d: d.values()
+	iteritems = lambda d: list(d.items())
+	itervalues = lambda d: list(d.values())
 
 __all__ = ['_', 'config', 'iteritems', 'itervalues', 'xrange']
--- a/autotimer/src/plugin.py
+++ b/autotimer/src/plugin.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from . import _, config
 
@@ -8,7 +8,7 @@
 from Components.PluginComponent import plugins
 from Plugins.Plugin import PluginDescriptor
 
-from AutoTimer import AutoTimer
+from .AutoTimer import AutoTimer
 autotimer = AutoTimer()
 autopoller = None
 
@@ -32,7 +32,7 @@
 	# Startup
 	if reason == 0 and config.plugins.autotimer.autopoll.value:
 		# Start Poller
-		from AutoPoller import AutoPoller
+		from .AutoPoller import AutoPoller
 		autopoller = AutoPoller()
 		autopoller.start()
 
@@ -63,9 +63,9 @@
 			from Plugins.Extensions.WebInterface.WebChilds.Screenpage import ScreenPage
 			from twisted.web import static
 			from twisted.python import util
-			from WebChilds.UploadResource import UploadResource
+			from .WebChilds.UploadResource import UploadResource
 
-			from AutoTimerResource import AutoTimerDoParseResource, \
+			from .AutoTimerResource import AutoTimerDoParseResource, \
 				AutoTimerListAutoTimerResource, AutoTimerAddOrEditAutoTimerResource, \
 				AutoTimerRemoveAutoTimerResource, AutoTimerChangeSettingsResource, \
 				AutoTimerSettingsResource, AutoTimerSimulateResource, API_VERSION
@@ -116,7 +116,7 @@
 	if autopoller is not None:
 		autopoller.stop()
 
-	from AutoTimerOverview import AutoTimerOverview
+	from .AutoTimerOverview import AutoTimerOverview
 	session.openWithCallback(
 		editCallback,
 		AutoTimerOverview,
@@ -138,7 +138,7 @@
 	# Start autopoller again if wanted
 	if config.plugins.autotimer.autopoll.value:
 		if autopoller is None:
-			from AutoPoller import AutoPoller
+			from .AutoPoller import AutoPoller
 			autopoller = AutoPoller()
 		autopoller.start()
 	# Remove instance if not running in background
@@ -147,12 +147,12 @@
 
 # Movielist
 def movielist(session, service, **kwargs):
-	from AutoTimerEditor import addAutotimerFromService
+	from .AutoTimerEditor import addAutotimerFromService
 	addAutotimerFromService(session, service)
 
 # Event Info
 def eventinfo(session, servicelist, **kwargs):
-	from AutoTimerEditor import AutoTimerEPGSelection
+	from .AutoTimerEditor import AutoTimerEPGSelection
 	ref = session.nav.getCurrentlyPlayingServiceReference()
 	session.open(AutoTimerEPGSelection, ref)
 
--- a/autotimer/src/WebChilds/UploadResource.py
+++ b/autotimer/src/WebChilds/UploadResource.py
@@ -26,7 +26,7 @@
 		if cnt <= 0:
 			try:
 				os_remove(FILENAME)
-			except OSError, oe:
+			except OSError as oe:
 				pass
 			result = """<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n
 				<e2simplexmlresult>\n
--- a/autotimer/src/WebComponents/Sources/AutoTimerEditor.py
+++ b/autotimer/src/WebComponents/Sources/AutoTimerEditor.py
@@ -18,7 +18,7 @@
 		self.result = ( False, "one two three four unknown command" )
 
 	def handleCommand(self, cmd):
-		print "[WebComponents.AutoTimerEditor] handleCommand with cmd = ", cmd
+		print("[WebComponents.AutoTimerEditor] handleCommand with cmd = ", cmd)
 		if self.func is self.BACKUP:
 			self.result = self.backupFiles(cmd)
 		elif self.func is self.RESTORE:
--- a/babelzapper/src/plugin.py
+++ b/babelzapper/src/plugin.py
@@ -44,9 +44,9 @@
 
 def autostart(reason, **kwargs):
 #	global session
-	if kwargs.has_key("session") and reason == 0:
+	if "session" in kwargs and reason == 0:
 		session = kwargs["session"]
-		print "[BABELZAPPER] autostart"
+		print("[BABELZAPPER] autostart")
 		session.open(BabelZapperStartup)
 
 def Plugins(**kwargs):
@@ -127,7 +127,7 @@
 	def __init__(self, session):
 		Screen.__init__(self, session)
 		self.skin = BabelZapperStartup.skin
-		print "[BABELZAPPER] starting"
+		print("[BABELZAPPER] starting")
 		global globalActionMap
 		# overwrite Mute  for the handicaped
 		globalActionMap.actions["babelzapperMute"]=self.setKey
@@ -148,12 +148,12 @@
 		self.delayedKeyTimer = eTimer()
 		self.delayedKeyTimer.callback.append(self.setKey)
 		self.delayedKeyTimer.stop()
-		print "[BABELZAPPER] received mute key"
+		print("[BABELZAPPER] received mute key")
 		if babelkey==-1:
-			print "[BABELZAPPER] now starts from beginning\n"
+			print("[BABELZAPPER] now starts from beginning\n")
 			self.nextKeyTimer.start(200, True)
  		elif babeldone==-1:
- 			print "[BABELZAPPER] now starts with last key\n"
+ 			print("[BABELZAPPER] now starts with last key\n")
 			babeldone=0
    			babelkey=babelkey-1
  			self.nextKeyTimer.start(config.plugins.babelzapper.changetime.value, True)
@@ -161,46 +161,46 @@
 		else:
 			self.babelDialog.hide()
 			cmdlen=len(babelmenu[babelkey])
-			print "[BABELZAPPER] %i commands" % cmdlen
+			print("[BABELZAPPER] %i commands" % cmdlen)
 			i=1+babeldone
 			babeldone=0
 			# here comes the command line interpreter
 			while i < cmdlen: 
 				cmd=babelmenu[babelkey][i]
 				cmdname=cmd.lstrip("	 ")
-				print "[BABELZAPPER] command: %s" % cmdname
+				print("[BABELZAPPER] command: %s" % cmdname)
 				if cmdname.startswith("$KEY_"):
 					self.babelDialog.executeKey(cmdname)
 				elif cmdname.startswith("END"):
 					self.babelDialog.hide()
-					print "[BABELZAPPER] ENDs\n" 
+					print("[BABELZAPPER] ENDs\n") 
 					babelkey=-1
 					return
 				elif cmdname.startswith("IFON"):
 					if babelon == 0:
-						print "[BABELZAPPER] ON is off\n" 
+						print("[BABELZAPPER] ON is off\n") 
 						# skip rest of commandline
 						i=cmdlen
 					else:
-						print "[BABELZAPPER] ON is on executing rest and setting it off\n" 
+						print("[BABELZAPPER] ON is on executing rest and setting it off\n") 
 						babelon=0;
 				elif cmdname.startswith("ON"):
-					print "[BABELZAPPER] ON\n" 
+					print("[BABELZAPPER] ON\n") 
 					babelon=1
 				elif cmdname.startswith("TOGGLE"):
 					if babelon == 0:
-						print "[BABELZAPPER] TOGGLE on\n" 
+						print("[BABELZAPPER] TOGGLE on\n") 
 						babelon=1
 					else:
-						print "[BABELZAPPER] TOGGLE off\n" 
+						print("[BABELZAPPER] TOGGLE off\n") 
 						babelon=0
 				elif cmdname.startswith("OFF"):
-					print "[BABELZAPPER] OFF\n" 
+					print("[BABELZAPPER] OFF\n") 
 					babelon=0
 				elif cmdname.startswith("GOTO"):
  					try:
 						babelkey=int(cmdname.replace("GOTO",""))
-						print "[BABELZAPPER] GOTO %i \n" % babelkey
+						print("[BABELZAPPER] GOTO %i \n" % babelkey)
  					except:
 						babelkey=0
 					# skip rest of commandline
@@ -214,14 +214,14 @@
 						babelstop=1000
 					elif babelstop > 60000:
 						babelstop=60000
-					print "[BABELZAPPER] STOP %i \n" % babelstop
+					print("[BABELZAPPER] STOP %i \n" % babelstop)
 					self.babelDialog.show()
 					babeldone=i
 					self.delayedKeyTimer.start(babelstop, True)
 					return
 				elif cmdname.startswith("PRINT"):
 					babeltext=cmd.replace("PRINT","")
-					print "[BABELZAPPER] PRINTs: %s \n" % babeltext
+					print("[BABELZAPPER] PRINTs: %s \n" % babeltext)
 					self.session.open(MessageBox, babeltext, MessageBox.TYPE_INFO)
 				elif cmdname.startswith("LOAD") or cmdname.startswith("RUN"):
 					babelkey=-1
@@ -231,7 +231,7 @@
  						i=i-1
  						babelmenu.pop(i)
 					babelfile="%s/%s.zbb" % (babelzapper_menus,cmdname.replace("LOAD","").replace("RUN","").replace(" ","").replace("	",""))
-					print "[BABELZAPPER] LOADs: %s\n" % babelfile
+					print("[BABELZAPPER] LOADs: %s\n" % babelfile)
 					if os.path.exists(babelfile):
 						f = open(babelfile, 'r')
 					else:
@@ -240,7 +240,7 @@
 					while (line):
 						bz=line.split(";")
 						if len(bz) < 2:
-							print "[BABELZAPPER] wrong line %s in babelzapper.zbb" % line
+							print("[BABELZAPPER] wrong line %s in babelzapper.zbb" % line)
  							babelmenu.append(("????", "PRINT ???? %s" % line))
 						else:
 							babelmenu.append((bz))
@@ -253,7 +253,7 @@
 					i=cmdlen
 				else:
 					if len(cmd) > 0:
-						print "[BABELZAPPER] unknown command %s\n" % cmd
+						print("[BABELZAPPER] unknown command %s\n" % cmd)
 						babeltext="???? %s\n" % cmd
 					else:
 						babeltext="???? empty command found\n"
@@ -268,7 +268,7 @@
 			
 				
 	def resetKey(self):
-		print "[BABELZAPPER] resets last key"
+		print("[BABELZAPPER] resets last key")
 		self.resetKeyTimer.stop()
 		self.babelDialog.hide()
 		global babelkey
@@ -298,7 +298,7 @@
 				babelkey=int(cmdname.replace("RETURN",""))-1
 			except:
 				babelkey=-1
-			print "[BABELZAPPER] RETURN %i \n" % babelkey
+			print("[BABELZAPPER] RETURN %i \n" % babelkey)
 			self.nextKeyTimer.start(0, True)
 			return
 		elif cmdname.startswith("REM"):
@@ -306,23 +306,23 @@
 			self.nextKeyTimer.start(0, True)
 			return
 		elif cmdname.startswith("ON"):
-			print "[BABELZAPPER] ON\n" 
+			print("[BABELZAPPER] ON\n") 
 			babelon=1
 			# skip this commandline
 			self.nextKeyTimer.start(0, True)
 			return
 		elif cmdname.startswith("OFF"):
-			print "[BABELZAPPER] OFF\n" 
+			print("[BABELZAPPER] OFF\n") 
 			babelon=0
 			# skip this commandline
 			self.nextKeyTimer.start(0, True)
 			return
 		elif cmdname.startswith("TOGGLE"):
 			if babelon == 0:
-				print "[BABELZAPPER] TOGGLE on\n" 
+				print("[BABELZAPPER] TOGGLE on\n") 
 				babelon=0
 			else:
-				print "[BABELZAPPER] TOGGLE off\n" 
+				print("[BABELZAPPER] TOGGLE off\n") 
 				babelon=1
 			# skip this commandline
 			self.nextKeyTimer.start(0, True)
@@ -336,7 +336,7 @@
 				babelstop=1000
 			elif babelstop > 60000:
 				babelstop=60000
-			print "[BABELZAPPER] STOP %i \n" % babelstop
+			print("[BABELZAPPER] STOP %i \n" % babelstop)
 			currentkey=babelmenu[babelkey][0]
 			split=currentkey.split(":")
 			currentkey=split[0]
@@ -356,7 +356,7 @@
  				i=i-1
  				babelmenu.pop(i)
 			babelfile="%s/%s.zbb" % (babelzapper_menus,cmdname.replace("RUN","").replace(" ","").replace("	",""))
-			print "[BABELZAPPER] RUNs: %s\n" % babelfile
+			print("[BABELZAPPER] RUNs: %s\n" % babelfile)
 			if os.path.exists(babelfile):
 				f = open(babelfile, 'r')
 			else:
@@ -365,7 +365,7 @@
 			while (line):
 				bz=line.split(";")
 				if len(bz) < 2:
-					print "[BABELZAPPER] wrong line %s in babelzapper.zbb" % line
+					print("[BABELZAPPER] wrong line %s in babelzapper.zbb" % line)
  					babelmenu.append(("????", "PRINT ???? %s" % line))
 				else:
 					babelmenu.append((bz))
@@ -401,7 +401,7 @@
 		Screen.__init__(self, session)
 		self.skin = BabelZapper.skin
 	        global babelmenu
-		print "[BABELZAPPER] loading %s/babelzapper.zbb" % babelzapper_menus
+		print("[BABELZAPPER] loading %s/babelzapper.zbb" % babelzapper_menus)
 		global babelkey
 		babelmenu= []
  		babelmenu.append(("NONE", "END"))
@@ -411,7 +411,7 @@
 			while (line):
 				bz=line.split(";")
 				if len(bz) < 2:
-					print "[BABELZAPPER] wrong line %s in babelzapper.zbb" % line
+					print("[BABELZAPPER] wrong line %s in babelzapper.zbb" % line)
  					babelmenu.append(("????", "PRINT ???? %s" % line))
 					
 				else:
@@ -439,18 +439,18 @@
 				keyname=keyname.replace("_LONG","")
 	        	try:		
 				keycode=KEYIDS[keyname]
-				print "[BABELZAPPER] found key %i" % keycode
+				print("[BABELZAPPER] found key %i" % keycode)
 			except:
-				print "[BABELZAPPER] found unknown key %s" % keyname
+				print("[BABELZAPPER] found unknown key %s" % keyname)
 				return
 		else:
-			print "[BABELZAPPER] found unknown key %s" % keyname
+			print("[BABELZAPPER] found unknown key %s" % keyname)
 			return
 		if HardwareInfo.device_name == "dm8000":
 			fp = open("/dev/input/event2", 'wb')
 		else:
 			fp = open("/dev/input/event1", 'wb')
-		if long:
+		if int:
 			dataon = pack('iiHHi', 0, 0, 1, keycode, 1)
 			fp.write(dataon)
 			dataon = pack('iiHHi', 0, 0, 1, keycode, 2)
@@ -462,7 +462,7 @@
 			dataon = pack('iiHHi', 0, 0, 1, keycode, 2)
 			fp.write(dataon)
 		else:
-			print "[BABELZAPPER] now writes out: %i\n" % (keycode)
+			print("[BABELZAPPER] now writes out: %i\n" % (keycode))
 			dataon = pack('iiHHi', 0, 0, 1, keycode, 1)
 			fp.write(dataon)
 		dataoff = pack('iiHHi', 0, 0, 1, keycode, 0)
--- a/bitrateviewer/src/plugin.py
+++ b/bitrateviewer/src/plugin.py
@@ -25,7 +25,7 @@
 from Components.Sources.StaticText import StaticText
 from Components.ActionMap import ActionMap
 from enigma import iServiceInformation, getDesktop
-from bitratecalc import eBitrateCalculator
+from .bitratecalc import eBitrateCalculator
 
 class BitrateCalculator(Screen):
 	sz_w = getDesktop(0).size().width()
--- a/bonjour/src/Bonjour.py
+++ b/bonjour/src/Bonjour.py
@@ -36,7 +36,7 @@
 		return lines
 	
 	def __writeService(self, service):
-		print "[Bonjour.__writeService] Creating service file '%s'" %(service['file'])	
+		print("[Bonjour.__writeService] Creating service file '%s'" %(service['file']))	
 		if 'type' in service and 'port' in service and 'file' in service:
 			filepath = "%s%s" %(self.AVAHI_SERVICES_DIR, service['file'])
 			try:
@@ -47,7 +47,7 @@
 			except IOError:
 				pass
 		
-		print "[Bonjour.__writeService] Cannot create service file '%s'" %(service['file'])		
+		print("[Bonjour.__writeService] Cannot create service file '%s'" %(service['file']))		
 		return False
 	
 	def __deleteService(self, protocol):		
@@ -60,7 +60,7 @@
 		return False
 				
 	def __parse(self, file):
-		print "[Bonjour.__parse] parsing %s%s" %(self.AVAHI_SERVICES_DIR, file) 
+		print("[Bonjour.__parse] parsing %s%s" %(self.AVAHI_SERVICES_DIR, file)) 
 		config = cet_parse(self.AVAHI_SERVICES_DIR + file).getroot()
 		
 		name = config.find('name').text
@@ -93,8 +93,8 @@
 		self.services = []
 		self.files = {}
 		if path.exists(self.AVAHI_SERVICES_DIR):
-			print "[Bonjour.reloadConfig] reloading config"
-			service_files = filter( lambda x: x.endswith('.service'), listdir(self.AVAHI_SERVICES_DIR) )
+			print("[Bonjour.reloadConfig] reloading config")
+			service_files = [x for x in listdir(self.AVAHI_SERVICES_DIR) if x.endswith('.service')]
 			for file in service_files:
 				self.__parse(file)
 		
@@ -102,7 +102,7 @@
 
 	
 	def registerService(self, service, replace = False):
-		print "[Bonjour.registerService] %s" %service
+		print("[Bonjour.registerService] %s" %service)
 		
 		if 'type' in service and 'port' in service and 'file' in service:					
 			if (service['file'] not in self.files) or replace:
@@ -120,7 +120,7 @@
 				return True
 				
 		else:
-			print "[Bonjour.registerService] Missing port or type definition in %s%s" %(self.AVAHI_SERVICES_DIR, service['file'])
+			print("[Bonjour.registerService] Missing port or type definition in %s%s" %(self.AVAHI_SERVICES_DIR, service['file']))
 			return False	
 	
 	
@@ -129,12 +129,12 @@
 			
 			filepath = "%s%s" %(self.AVAHI_SERVICES_DIR, service['file'])
 			if not path.exists(filepath):
-				print "[Bonjour.updateService] Cannot update non-existent service file '%s'" %(service['file'])
+				print("[Bonjour.updateService] Cannot update non-existent service file '%s'" %(service['file']))
 				return False
 			
 			else:
 				if not self.__writeService(service):
-					print "[Bonjour.updateService] Cannot write service file '%s'" %(service['file'])
+					print("[Bonjour.updateService] Cannot write service file '%s'" %(service['file']))
 					return False
 
 		return True
@@ -172,7 +172,7 @@
 				}
 	
 	def registerDefaultServices(self):
-		print "[Bonjour.registerDefaultServices] called"
+		print("[Bonjour.registerDefaultServices] called")
 		service = self.buildService('ftp', '21')
 		filepath = "%s%s" %(self.AVAHI_SERVICES_DIR, service['file'])
 		if not path.exists(filepath):
--- a/bonjour/src/plugin.py
+++ b/bonjour/src/plugin.py
@@ -3,7 +3,7 @@
 from enigma import eListboxPythonMultiContent, gFont
 
 from Plugins.Plugin import PluginDescriptor
-from Bonjour import bonjour
+from .Bonjour import bonjour
 
 from Screens.Screen import Screen
 from Components.MenuList import MenuList
@@ -37,11 +37,11 @@
 		self.onLayoutFinish.append(self.layoutFinished)
 								
 	def layoutFinished(self):
-		print "LAYOUT FINISHED!!"
+		print("LAYOUT FINISHED!!")
 		self.setTitle(_("Bonjour: Overview"))
 										
 	def _ok(self):
-		print "OK OK OK OK"
+		print("OK OK OK OK")
 		pass
 	
 	def _exit(self):
@@ -57,7 +57,7 @@
 		self["menuList"].setList(list)
 		
 	def __buildMenuEntry(self, service):
-		print "[Bonjour.__buildMenuEntry] service=%s" %service
+		print("[Bonjour.__buildMenuEntry] service=%s" %service)
 		
 		file = "%s" %(service['file'])
 		name = "Name: %s" %(service['name'])
@@ -79,7 +79,7 @@
 def opencontrol(session):
 	bonjour.reloadConfig()
 	session.open(BonjourScreen, bonjour.services, bonjour.files)
-	print "[Bonjour.opencontrol] %s" %(bonjour.files)
+	print("[Bonjour.opencontrol] %s" %(bonjour.files))
 	#TODO GUI-Stuff
 
 	
--- a/cdinfo/src/plugin.py
+++ b/cdinfo/src/plugin.py
@@ -118,20 +118,20 @@
 		try:
 			cdinfodom = xml.dom.minidom.parseString(data)
 		except:
-			print "[xml_parse_output] error, could not parse"
+			print("[xml_parse_output] error, could not parse")
 			return False
 		xmldata = cdinfodom.childNodes[0]
 		queries = xmldata.childNodes
 		self.xml_parse_query(queries)
-		print "[xml_parse_output] albuminfo: " + str(self.albuminfo)
-		print "[xml_parse_output] tracklisting: " + str(self.tracklisting)
+		print("[xml_parse_output] albuminfo: " + str(self.albuminfo))
+		print("[xml_parse_output] tracklisting: " + str(self.tracklisting))
 		return True
 
 	def xml_parse_query(self, queries_xml):
 		for queries in queries_xml:
 			if queries.nodeType == xml.dom.minidom.Element.nodeType:
 				if queries.tagName == 'query':
-					print "[xml_parse_query] cdinfo source is %s, hit %s of %s" % (queries.getAttribute("source"),queries.getAttribute("match"),queries.getAttribute("num_matches"))
+					print("[xml_parse_query] cdinfo source is %s, hit %s of %s" % (queries.getAttribute("source"),queries.getAttribute("match"),queries.getAttribute("num_matches")))
 					for query in queries.childNodes:
 						if query.nodeType == xml.dom.minidom.Element.nodeType:
 							if query.tagName == 'albuminfo':
@@ -205,7 +205,7 @@
 
 	def cdtext_scan(self):
 		cmd = "cdtextinfo -xalT"
-		print "[cdtext_scan] " + cmd
+		print("[cdtext_scan] " + cmd)
 		self.cdtext_container.appClosed.append(self.cdtext_finished)
 		self.cdtext_container.dataAvail.append(self.cdtext_avail)
 		self.cdtext_container.execute(cmd)
@@ -214,7 +214,7 @@
 		cmd = "cdtextinfo -xalD --cddb-port=%d --cddb-server=%s --cddb-timeout=%s" % (config.plugins.CDInfo.CDDB_port.value, config.plugins.CDInfo.CDDB_server.value, config.plugins.CDInfo.CDDB_timeout.value)
 		if not config.plugins.CDInfo.CDDB_cache.value:
 			cmd += " --no-cddb-cache"
-		print "[cddb_scan] " + cmd
+		print("[cddb_scan] " + cmd)
 		self.cddb_container.appClosed.append(self.cddb_finished)
 		self.cddb_container.dataAvail.append(self.cddb_avail)
 		self.cddb_container.execute(cmd)
--- a/curlytx/src/CurlyTx.py
+++ b/curlytx/src/CurlyTx.py
@@ -207,14 +207,14 @@
             self.showingHeaders = False
         elif self.httpGetterFactory.response_headers:
             headers = _("HTTP response headers for") + "\n" + self.currentUrl + "\n\n"
-            for (k, v) in self.httpGetterFactory.response_headers.items():
+            for (k, v) in list(self.httpGetterFactory.response_headers.items()):
                 headers += k + ": " + ("\n" + k + ": ").join(v) + "\n"
             self.pageContent = self["text"].getText()
             self["text"].setText(headers)
             self.showingHeaders = True
 
     def showSettings(self):
-        from CurlyTxSettings import CurlyTxSettings
+        from .CurlyTxSettings import CurlyTxSettings
         self.session.openWithCallback(self.onSettingsChanged, CurlyTxSettings)
 
     def onSettingsChanged(self):
--- a/curlytx/src/CurlyTxSettings.py
+++ b/curlytx/src/CurlyTxSettings.py
@@ -12,7 +12,7 @@
 from Screens.MessageBox import MessageBox
 
 from . import config
-from config import createPage, loadDefaultPageOptions
+from .config import createPage, loadDefaultPageOptions
 from Components.config import config, getConfigListEntry, ConfigSelection
 from Components.ConfigList import ConfigList, ConfigListScreen
 
@@ -122,7 +122,7 @@
         self["config"].setList(self.getConfigList())
 
     def newPage(self):
-        from CurlyTxSettings import CurlyTxSettings
+        from .CurlyTxSettings import CurlyTxSettings
         self.session.openWithCallback(self.pageEdited, CurlyTxPageEdit, createPage(), True)
 
     def editPage(self):
@@ -133,7 +133,7 @@
                 config.plugins.CurlyTx.pages[id], False
                 )
         elif config.plugins.CurlyTx.feedUrl.value:
-            from AtomFeed import AtomFeed
+            from .AtomFeed import AtomFeed
             AtomFeed(
                 config.plugins.CurlyTx.feedUrl.value,
                 self.feedPagesReceived, self.feedPagesFail
--- a/curlytx/src/config.py
+++ b/curlytx/src/config.py
@@ -32,6 +32,6 @@
 config.plugins.CurlyTx.menuTitle = ConfigText(default = "CurlyTx", fixed_size = False)
 config.plugins.CurlyTx.feedUrl = ConfigText(default = "", fixed_size = False)
 config.plugins.CurlyTx.pages = ConfigSubList()
-for id,value in config.plugins.CurlyTx.pages.stored_values.iteritems():
+for id,value in config.plugins.CurlyTx.pages.stored_values.items():
     config.plugins.CurlyTx.pages.append(createPage())
 loadDefaultPageOptions()
--- a/curlytx/src/plugin.py
+++ b/curlytx/src/plugin.py
@@ -5,7 +5,7 @@
 
 from Plugins.Plugin import PluginDescriptor
 
-import CurlyTx
+from . import CurlyTx
 from . import config
 from Components.config import config
 
--- a/dreamirc/src/dreamIRCSetup.py
+++ b/dreamirc/src/dreamIRCSetup.py
@@ -15,14 +15,14 @@
 
 from socket import gethostbyname_ex
 
-from dreamIRCTools import *
+from .dreamIRCTools import *
 
 class dreamIRCSetupScreen(ConfigListScreen, Screen):
 	from enigma import getDesktop
 	desk = getDesktop(0)
 	x= int(desk.size().width())
 	y= int(desk.size().height())
-	print "[dreamIRC] setup: current desktop size: %dx%d" % (x,y)
+	print("[dreamIRC] setup: current desktop size: %dx%d" % (x,y))
 
 	if (y>=720):
 		skin = """
@@ -82,7 +82,7 @@
 	def load(self):
 		self.reloadFile()
 		self.accounts=[ircsupport.IRCAccount(self.type, string.atoi(self.nr), str(self.nick), str(self.passwd), str(self.server1), string.atoi(self.port), str(self.channel))]
-		print self.accounts
+		print(self.accounts)
 		return self.accounts
 
 	def reloadFile(self):
@@ -99,7 +99,7 @@
 				self.channel = node.getAttribute("channel")
 				self.debug = node.getAttribute("debug")
 			if ((self.nick.lower() == "dreamircuser") or (self.nick == "") or (self.nick[0] == " ") or (self.nick.lower() == "dm8000-vip")) :
-				print "[dreamIRC] nickname error... restoring default..."
+				print("[dreamIRC] nickname error... restoring default...")
 				self.nick = self.device+"_"+self.mac_end
 		except IOError:
 			self.type = "IRC"
@@ -185,7 +185,7 @@
 				self.login = node.getAttribute("login")
 				self.nick = node.getAttribute("nick")
 				if ((self.nick.lower() == "dreamircuser") or (self.nick == "") or (self.nick[0] == " ") or (self.nick.lower() == "dm8000-vip")) :
-					print "[dreamIRC] nickname error... restoring default..."
+					print("[dreamIRC] nickname error... restoring default...")
 					self.nick = self.device+"_"+self.mac_end
 				self.passwd = node.getAttribute("passwd")
 				self.server1 = node.getAttribute("server1") # atm only ip.. cause of probs with theads and dns..
@@ -217,7 +217,7 @@
 						self.server=self.server3
 						self.status3=True
 			except:
-				print "unable to resolve hostname %s..." % self.server3
+				print("unable to resolve hostname %s..." % self.server3)
 		if self.server2:
 			try:
 				self.result2=gethostbyname_ex(self.server2)
@@ -227,7 +227,7 @@
 						self.server=self.server2
 						self.status2=True
 			except:
-				print "unable to resolve hostname %s..." % self.server2
+				print("unable to resolve hostname %s..." % self.server2)
 		if self.server1:
 			try:
 				self.result1=gethostbyname_ex(self.server1)
@@ -237,15 +237,15 @@
 						self.server=self.server1
 						self.status1=True
 			except:
-				print "unable to resolve hostname %s..." % self.server1
+				print("unable to resolve hostname %s..." % self.server1)
 				
 		if self.status1==False and self.status2==False and self.status3==False:
 			self.pipe.add("ERROR!!! no irc server was valid... please check settings...")
 			return False
 		else:
-			print " account = type: %s login:%s nick:%s passwd:%s server:%s ip:%s port:%s channel:%s debug:%s " % (self.type, self.login, self.nick, self.passwd, self.server, self.ip, self.port, self.channel, self.debug)
+			print(" account = type: %s login:%s nick:%s passwd:%s server:%s ip:%s port:%s channel:%s debug:%s " % (self.type, self.login, self.nick, self.passwd, self.server, self.ip, self.port, self.channel, self.debug))
 			self.accounts=[ircsupport.IRCAccount(self.type, string.atoi(self.login), str(self.nick), str(self.passwd), str(self.ip), string.atoi(self.port), str(self.channel))]
-			print self.accounts
+			print(self.accounts)
 			return self.accounts
 	
 	def channel(self):
--- a/dreamirc/src/dreamIRCTools.py
+++ b/dreamirc/src/dreamIRCTools.py
@@ -29,10 +29,10 @@
 import datetime
 import sys
 
-import plugin
-from plugin import *
-
-import ircsupport
+from . import plugin
+from .plugin import *
+
+from . import ircsupport
 import xml.dom.minidom
 from xml.dom.minidom import Node
 from Tools import XMLTools
@@ -144,7 +144,7 @@
 			timestamp = time.strftime("[%H:%M:%S]", time.localtime(time.time()))
 			self.debuglogger.log("%s %s" %(timestamp,text))
 		else:
-			print text
+			print(text)
 
 	def clear(self):
 		global ChatText
@@ -184,10 +184,10 @@
 class MessageLogger:
 	def __init__(self, file):
 		self.file = file
-		print '[dreamIRC] %s  MESSAGE LOGGER = %s \n'% (time.strftime("[%H:%M:%S]", time.localtime(time.time())),self.file)
+		print('[dreamIRC] %s  MESSAGE LOGGER = %s \n'% (time.strftime("[%H:%M:%S]", time.localtime(time.time())),self.file))
 
 	def log(self, message):
-		print '[dreamIRC] %s\n' % (message)
+		print('[dreamIRC] %s\n' % (message))
 		self.file.write('%s\n' % (message))
 		self.file.flush()
 
--- a/dreamirc/src/e2account.py
+++ b/dreamirc/src/e2account.py
@@ -5,8 +5,8 @@
 
 #
 import string
-import ircsupport
-import e2chat, dreamIRCTools, dreamIRCSetup
+from . import ircsupport
+from . import e2chat, dreamIRCTools, dreamIRCSetup
 
 
 class AccountManager:
--- a/dreamirc/src/e2chat.py
+++ b/dreamirc/src/e2chat.py
@@ -21,10 +21,10 @@
 from Tools.NumericalTextInput import *
 from Tools.Directories import *
 
-from locals import OFFLINE, ONLINE, AWAY
-import dreamIRCTools
+from .locals import OFFLINE, ONLINE, AWAY
+from . import dreamIRCTools
 from enigma import *
-from dreamIRCTools import *
+from .dreamIRCTools import *
 #from myScrollLabel import *
 #from dreamIRCMainMenu import *
 
@@ -45,12 +45,12 @@
 
         @type person: L{Person<interfaces.IPerson>}
         """
-        if not self.contacts.has_key(person.name):
+        if person.name not in self.contacts:
             self.contacts[person.name] = person
-        if not self.onlineContacts.has_key(person.name) and \
+        if person.name not in self.onlineContacts and \
             (person.status == ONLINE or person.status == AWAY):
             self.onlineContacts[person.name] = person
-        if self.onlineContacts.has_key(person.name) and \
+        if person.name in self.onlineContacts and \
            person.status == OFFLINE:
             del self.onlineContacts[person.name]
 
@@ -73,11 +73,11 @@
 
     def contactChangedNick(self, person, newnick):
         oldname = person.name
-        if self.contacts.has_key(oldname):
+        if oldname in self.contacts:
             del self.contacts[oldname]
             person.name = newnick
             self.contacts[newnick] = person
-            if self.onlineContacts.has_key(oldname):
+            if oldname in self.onlineContacts:
                 del self.onlineContacts[oldname]
                 self.onlineContacts[newnick] = person
 
@@ -263,7 +263,7 @@
         self.pipe.getCannelName(self.group.name)
         for member in self.members:
             self.pipe.buildBuddyList(str(member))
-        print "Buddylist of #%s : \n%s" % (self.group.name, self.pipe.showBuddyList())
+        print("Buddylist of #%s : \n%s" % (self.group.name, self.pipe.showBuddyList()))
         self.pipe.updateBuddyWindow()
         
 class ChatUI:
@@ -409,7 +409,7 @@
         @type oldnick: string
         @type newnick: string
         """
-        if self.persons.has_key((person.name, person.account)):
+        if (person.name, person.account) in self.persons:
             conv = self.conversations.get(person)
             if conv:
                 conv.contactChangedNick(person, newnick)
@@ -421,7 +421,7 @@
             self.persons[person.name, person.account] = person
 
     def sendOutPipe(self):
-        print "groupchat %s" % self.pipe.OutText
+        print("groupchat %s" % self.pipe.OutText)
         if len(self.pipe.OutText()) > 0:
             self.sendText(self.pipe.OutText())
             self.pipe.clearOutText()
--- a/dreamirc/src/e2support.py
+++ b/dreamirc/src/e2support.py
@@ -10,8 +10,8 @@
 
 # Abstract representation of chat "model" classes
 
-from locals import ONLINE, OFFLINE, OfflineError
-import interfaces
+from .locals import ONLINE, OFFLINE, OfflineError
+from . import interfaces
 
 from twisted.internet.protocol import Protocol
 
@@ -19,8 +19,8 @@
 from twisted.persisted import styles
 
 from twisted.internet import error
-import dreamIRCTools
-from dreamIRCTools import *
+from . import dreamIRCTools
+from .dreamIRCTools import *
 
 class AbstractGroup:
     def __init__(self, name, account):
@@ -102,7 +102,7 @@
                 break
         else:
             pass
-        from dreamIRCTools import MessagePipe 
+        from .dreamIRCTools import MessagePipe 
         self.pipe = MessagePipe()
         self.account = account
         self.chat = chatui
--- a/dreamirc/src/interfaces.py
+++ b/dreamirc/src/interfaces.py
@@ -5,7 +5,7 @@
 """
 from zope.interface import Interface
 
-import locals
+from . import locals
 #from locals import *
 #from twisted.words.im import locals
 
--- a/dreamirc/src/ircsupport.py
+++ b/dreamirc/src/ircsupport.py
@@ -6,10 +6,10 @@
 
 import string
 
-from protocols import irc
+from .protocols import irc
 from twisted.internet import defer, reactor, protocol
 from twisted.internet.defer import succeed
-import e2support, interfaces,dreamIRCTools
+from . import e2support, interfaces,dreamIRCTools
 from zope.interface import implements
 
 class IRCPerson(e2support.AbstractPerson):
@@ -43,7 +43,7 @@
 
     def bye(self):
         if self.account.client is None:
-            print "not connected"
+            print("not connected")
         else:
         	  self.account.client.quit("user logged off")    	  
 
@@ -53,7 +53,7 @@
     implements(interfaces.IGroup)
 
     def imgroup_testAction(self):
-        print 'action test!'
+        print('action test!')
 
     def imtarget_kick(self, target):
         if self.account.client is None:
@@ -88,7 +88,7 @@
         
     def bye(self):
         if self.account.client is None:
-            print "not connected"
+            print("not connected")
         else:
         	self.account.client.quit("user logged off")    	  
 
@@ -114,7 +114,7 @@
     def connectionMade(self):
         # XXX: Why do I duplicate code in IRCClient.register?
         try:
-            print 'connection made on irc service!?', self
+            print('connection made on irc service!?', self)
             self.pipe.debug("connection made on irc service!?")
             if self.account.password:
                 self.sendLine("PASS :%s" % self.account.password)
@@ -186,7 +186,7 @@
         for ui in range(len(users)):
             while users[ui][0] in ["@","+"]: # channel modes
                 users[ui]=users[ui][1:]
-        if not self._namreplies.has_key(group):
+        if group not in self._namreplies:
             self._namreplies[group]=[]
         self._namreplies[group].extend(users)
         for nickname in users:
@@ -236,7 +236,7 @@
 
     def irc_QUIT(self,prefix,params):
         nickname=string.split(prefix,"!")[0]
-        if self._ingroups.has_key(nickname):
+        if nickname in self._ingroups:
             for group in self._ingroups[nickname]:
                 self.getGroupConversation(group).memberLeft(nickname)
             self._ingroups[nickname]=[]
@@ -246,7 +246,7 @@
     def irc_NICK(self, prefix, params):
         fromNick = string.split(prefix, "!")[0]
         toNick = params[0]
-        if not self._ingroups.has_key(fromNick):
+        if fromNick not in self._ingroups:
             self.pipe.debug("%s changed nick to %s. But she's not in any groups!?" % (fromNick, toNick))
             return
         for group in self._ingroups[fromNick]:
@@ -271,7 +271,7 @@
 
     def __init__(self, accountName, autoLogin, username, password, host, port, channels=''):
         e2support.AbstractAccount.__init__(self, accountName, autoLogin, username, password, host, port)
-        self.channels = map(string.strip,string.split(channels,','))
+        self.channels = list(map(string.strip,string.split(channels,',')))
         if self.channels == ['']:
             self.channels = []
 
--- a/dreamirc/src/locals.py
+++ b/dreamirc/src/locals.py
@@ -23,5 +23,5 @@
 AWAY = Enum('Away')
 
 class OfflineError(Exception):
-    print "[dreamIRC] offline - %s" % Exception
+    print("[dreamIRC] offline - %s" % Exception)
     """The requested action can't happen while offline."""
--- a/dreamirc/src/plugin.py
+++ b/dreamirc/src/plugin.py
@@ -23,13 +23,13 @@
 from twisted.python import log
 from twisted.internet.defer import *
 
-from e2chat import *
-from e2account import *
-from e2support import *
-from dreamIRCTools import *
-from dreamIRCSetup import *
-from protocols import irc
-import ircsupport
+from .e2chat import *
+from .e2account import *
+from .e2support import *
+from .dreamIRCTools import *
+from .dreamIRCSetup import *
+from .protocols import irc
+from . import ircsupport
 
 import os 
 import string
@@ -46,7 +46,7 @@
 	global x,y
 	x= int(desk.size().width())
 	y= int(desk.size().height())
-	print "[dreamIRC] mainscreen: current desktop size: %dx%d" % (x,y)
+	print("[dreamIRC] mainscreen: current desktop size: %dx%d" % (x,y))
 
 	if (y>=720):
 		skin = """
@@ -182,7 +182,7 @@
 		self["input"].end()
 
 	def keyNumberGlobal(self, number):
-		print "You pressed number " + str(number)
+		print("You pressed number " + str(number))
 		self["input"].number(number)
 		
 	def keyDelete(self):
@@ -218,7 +218,7 @@
 				fp.close()
 				os.rename("/var/log/dreamIRC.log", "/var/log/dreamIRC_%s.log"%timestamp)
 			except IOError:
-				print "--- nothing to remove---"
+				print("--- nothing to remove---")
 			self.pipe.clear()
 			self.pipe.add(" -- not connected.. pls press green to connect!!\n")
 			self.pipe.clearBuddyList()
@@ -261,7 +261,7 @@
 			
 	def VirtualKeyBoardTextEntry(self, callback = None):
 		if callback is not None and len(callback):
-			print " TEXT = %s   - laenge = %d  !!!!" % (callback,len(callback))
+			print(" TEXT = %s   - laenge = %d  !!!!" % (callback,len(callback)))
 			self.pipe.addOutText(callback)
 
 def main(session, **kwargs):
--- a/dreamirc/src/protocols/irc.py
+++ b/dreamirc/src/protocols/irc.py
@@ -51,12 +51,13 @@
 import socket
 
 from os import path
+import collections
 
 NUL = chr(0)
-CR = chr(015)
-NL = chr(012)
+CR = chr(0o15)
+NL = chr(0o12)
 LF = NL
-SPC = chr(040)
+SPC = chr(0o40)
 
 CHANNEL_PREFIXES = '&#!+'
 
@@ -124,7 +125,7 @@
 
     def sendLine(self, line):
         if self.encoding is not None:
-            if isinstance(line, unicode):
+            if isinstance(line, str):
                 line = line.encode(self.encoding)
         self.transport.write("%s%s%s" % (line, CR, LF))
 
@@ -138,16 +139,16 @@
         """
 
         if not command:
-            raise ValueError, "IRC message requires a command."
+            raise ValueError("IRC message requires a command.")
 
         if ' ' in command or command[0] == ':':
             # Not the ONLY way to screw up, but provides a little
             # sanity checking to catch likely dumb mistakes.
-            raise ValueError, "Somebody screwed up, 'cuz this doesn't" \
-                  " look like a command to me: %s" % command
+            raise ValueError("Somebody screwed up, 'cuz this doesn't" \
+                  " look like a command to me: %s" % command)
 
         line = string.join([command] + list(parameter_list))
-        if prefix.has_key('prefix'):
+        if 'prefix' in prefix:
             line = ":%s %s" % (prefix['prefix'], line)
         self.sendLine(line)
 
@@ -884,8 +885,8 @@
                 raise ValueError("Maximum length must exceed %d for message "
                                  "to %s" % (minimumLength, user))
             lines = split(message, length - minimumLength)
-            map(lambda line, self=self, fmt=fmt: self.sendLine(fmt % line),
-                lines)
+            list(map(lambda line, self=self, fmt=fmt: self.sendLine(fmt % line),
+                lines))
 
     def notice(self, user, message):
         self.sendLine("NOTICE %s :%s" % (user, message))
@@ -935,14 +936,14 @@
 
         if len(self._pings) > self._MAX_PINGRING:
             # Remove some of the oldest entries.
-            byValue = [(v, k) for (k, v) in self._pings.items()]
+            byValue = [(v, k) for (k, v) in list(self._pings.items())]
             byValue.sort()
             excess = self._MAX_PINGRING - len(self._pings)
-            for i in xrange(excess):
+            for i in range(excess):
                 del self._pings[byValue[i][1]]
 
     def dccSend(self, user, file):
-        if type(file) == types.StringType:
+        if type(file) == bytes:
             file = open(file, 'r')
 
         size = fileSize(file)
@@ -952,7 +953,7 @@
         factory = DccSendFactory(file)
         port = reactor.listenTCP(0, factory, 1)
 
-        raise NotImplementedError,(
+        raise NotImplementedError(
             "XXX!!! Help!  I need to bind a socket, have it listen, and tell me its address.  "
             "(and stop accepting once we've made a single connection.)")
 
@@ -1179,7 +1180,7 @@
         if not self.fingerReply:
             return
 
-        if callable(self.fingerReply):
+        if isinstance(self.fingerReply, collections.Callable):
             reply = self.fingerReply()
         else:
             reply = str(self.fingerReply)
@@ -1291,7 +1292,7 @@
         # Use splitQuoted for those who send files with spaces in the names.
         data = text.splitQuoted(data)
         if len(data) < 3:
-            raise IRCBadMessage, "malformed DCC SEND request: %r" % (data,)
+            raise IRCBadMessage("malformed DCC SEND request: %r" % (data,))
 
         (filename, address, port) = data[:3]
 
@@ -1299,7 +1300,7 @@
         try:
             port = int(port)
         except ValueError:
-            raise IRCBadMessage, "Indecipherable port %r" % (port,)
+            raise IRCBadMessage("Indecipherable port %r" % (port,))
 
         size = -1
         if len(data) >= 4:
@@ -1314,7 +1315,7 @@
     def dcc_ACCEPT(self, user, channel, data):
         data = text.splitQuoted(data)
         if len(data) < 3:
-            raise IRCBadMessage, "malformed DCC SEND ACCEPT request: %r" % (data,)
+            raise IRCBadMessage("malformed DCC SEND ACCEPT request: %r" % (data,))
         (filename, port, resumePos) = data[:3]
         try:
             port = int(port)
@@ -1327,7 +1328,7 @@
     def dcc_RESUME(self, user, channel, data):
         data = text.splitQuoted(data)
         if len(data) < 3:
-            raise IRCBadMessage, "malformed DCC SEND RESUME request: %r" % (data,)
+            raise IRCBadMessage("malformed DCC SEND RESUME request: %r" % (data,))
         (filename, port, resumePos) = data[:3]
         try:
             port = int(port)
@@ -1339,7 +1340,7 @@
     def dcc_CHAT(self, user, channel, data):
         data = text.splitQuoted(data)
         if len(data) < 3:
-            raise IRCBadMessage, "malformed DCC CHAT request: %r" % (data,)
+            raise IRCBadMessage("malformed DCC CHAT request: %r" % (data,))
 
         (filename, address, port) = data[:3]
 
@@ -1347,7 +1348,7 @@
         try:
             port = int(port)
         except ValueError:
-            raise IRCBadMessage, "Indecipherable port %r" % (port,)
+            raise IRCBadMessage("Indecipherable port %r" % (port,))
 
         self.dccDoChat(user, channel, address, port, data)
 
@@ -1431,9 +1432,8 @@
 
     def ctcpReply_PING(self, user, channel, data):
         nick = user.split('!', 1)[0]
-        if (not self._pings) or (not self._pings.has_key((nick, data))):
-            raise IRCBadMessage,\
-                  "Bogus PING response from %s: %s" % (user, data)
+        if (not self._pings) or ((nick, data) not in self._pings):
+            raise IRCBadMessage("Bogus PING response from %s: %s" % (user, data))
 
         t0 = self._pings[(nick, data)]
         self.pong(user, time.time() - t0)
@@ -1479,7 +1479,7 @@
         line = lowDequote(line)
         try:
             prefix, command, params = parsemsg(line)
-            if numeric_to_symbolic.has_key(command):
+            if command in numeric_to_symbolic:
                 command = numeric_to_symbolic[command]
             self.handleCommand(command, prefix, params)
         except IRCBadMessage:
@@ -1512,10 +1512,9 @@
         pass
     else:
         try:
-            address = long(address)
+            address = int(address)
         except ValueError:
-            raise IRCBadMessage,\
-                  "Indecipherable address %r" % (address,)
+            raise IRCBadMessage("Indecipherable address %r" % (address,))
         else:
             address = (
                 (address >> 24) & 0xFF,
@@ -1562,7 +1561,7 @@
     connected = 0
 
     def __init__(self, file):
-        if type(file) is types.StringType:
+        if type(file) is bytes:
             self.file = open(file, 'r')
 
     def connectionMade(self):
@@ -1738,7 +1737,7 @@
         pass
     else:
         try:
-            address = long(address)
+            address = int(address)
         except ValueError:
             pass
         else:
@@ -1750,7 +1749,7 @@
                 )
             # The mapping to 'int' is to get rid of those accursed
             # "L"s which python 1.5.2 puts on the end of longs.
-            address = string.join(map(str,map(int,address)), ".")
+            address = string.join(list(map(str,list(map(int,address)))), ".")
 
     if dcctype == 'SEND':
         filename = arg
@@ -1906,7 +1905,7 @@
 
 # CTCP constants and helper functions
 
-X_DELIM = chr(001)
+X_DELIM = chr(0o01)
 
 def ctcpExtract(message):
     """Extract CTCP data from a string.
@@ -1933,11 +1932,11 @@
             normal_messages.append(messages.pop(0))
         odd = not odd
 
-    extended_messages[:] = filter(None, extended_messages)
-    normal_messages[:] = filter(None, normal_messages)
-
-    extended_messages[:] = map(ctcpDequote, extended_messages)
-    for i in xrange(len(extended_messages)):
+    extended_messages[:] = [_f for _f in extended_messages if _f]
+    normal_messages[:] = [_f for _f in normal_messages if _f]
+
+    extended_messages[:] = list(map(ctcpDequote, extended_messages))
+    for i in range(len(extended_messages)):
         m = string.split(extended_messages[i], SPC, 1)
         tag = m[0]
         if len(m) > 1:
@@ -1951,7 +1950,7 @@
 
 # CTCP escaping
 
-M_QUOTE= chr(020)
+M_QUOTE= chr(0o20)
 
 mQuoteTable = {
     NUL: M_QUOTE + '0',
@@ -1961,7 +1960,7 @@
     }
 
 mDequoteTable = {}
-for k, v in mQuoteTable.items():
+for k, v in list(mQuoteTable.items()):
     mDequoteTable[v[-1]] = k
 del k, v
 
@@ -1992,7 +1991,7 @@
 
 xDequoteTable = {}
 
-for k, v in xQuoteTable.items():
+for k, v in list(xQuoteTable.items()):
     xDequoteTable[v[-1]] = k
 
 xEscape_re = re.compile('%s.' % (re.escape(X_QUOTE),), re.DOTALL)
@@ -2024,7 +2023,7 @@
     coded_messages = []
     for (tag, data) in messages:
         if data:
-            if not isinstance(data, types.StringType):
+            if not isinstance(data, bytes):
                 try:
                     # data as list-of-strings
                     data = " ".join(map(str, data))
@@ -2325,5 +2324,5 @@
 }
 
 numeric_to_symbolic = {}
-for k, v in symbolic_to_numeric.items():
+for k, v in list(symbolic_to_numeric.items()):
     numeric_to_symbolic[v] = k
--- a/dreammediathek/src/MoviePlayer.py
+++ b/dreammediathek/src/MoviePlayer.py
@@ -23,7 +23,7 @@
 
 from Screens.InfoBarGenerics import InfoBarShowHide, InfoBarSeek, InfoBarNotifications, InfoBarServiceNotifications
 
-from ServiceXML import iWebTVStations
+from .ServiceXML import iWebTVStations
 
 config.plugins.dreamMediathek = ConfigSubsection()
 config.plugins.dreamMediathek.general = ConfigSubsection()
@@ -73,7 +73,7 @@
 		self.screen_timeout = 5000
 		self.nextservice = None
 
-		print "evEOF=%d" % iPlayableService.evEOF
+		print("evEOF=%d" % iPlayableService.evEOF)
 		self.__event_tracker = ServiceEventTracker(screen = self, eventmap =
 			{
 				iPlayableService.evSeekableStatusChanged: self.__seekableStatusChanged,
@@ -112,8 +112,8 @@
 		self.session.nav.stopService()
 
 	def __evEOF(self):
-		print "evEOF=%d" % iPlayableService.evEOF
-		print "Event EOF"
+		print("evEOF=%d" % iPlayableService.evEOF)
+		print("Event EOF")
 		self.handleLeave(config.plugins.dreamMediathek.general.on_movie_stop.value)
 
 	def __setHideTimer(self):
@@ -144,10 +144,10 @@
 
 
 	def playNextFile(self):
-		print "playNextFile"
+		print("playNextFile")
 		if self.nextCallback() is not None:
 			nextservice,error = self.nextCallback()
-			print "nextservice--->",nextservice
+			print("nextservice--->",nextservice)
 			if nextservice is None:
 				self.handleLeave(config.plugins.dreamMediathek.general.on_movie_stop.value, error)
 			else:
@@ -155,7 +155,7 @@
 				self.showInfobar()
 
 	def playPrevFile(self):
-		print "playPrevFile"
+		print("playPrevFile")
 		if self.prevCallback() is not None:
 			prevservice,error = self.prevCallback()
 			if prevservice is None:
@@ -165,7 +165,7 @@
 				self.showInfobar()
 
 	def playagain(self):
-		print "playagain"
+		print("playagain")
 		if self.state != self.STATE_IDLE:
 			self.stopCurrent()
 		self.play()
@@ -186,24 +186,24 @@
 			self.__setHideTimer()
 
 	def stopCurrent(self):
-		print "stopCurrent"
+		print("stopCurrent")
 		self.session.nav.stopService()
 		self.state = self.STATE_IDLE
 
 	def playpauseService(self):
-		print "playpauseService"
+		print("playpauseService")
 		if self.state == self.STATE_PLAYING:
 			self.pauseService()
 		elif self.state == self.STATE_PAUSED:
 			self.unPauseService()
 
 	def pauseService(self):
-		print "pauseService"
+		print("pauseService")
 		if self.state == self.STATE_PLAYING:
 			self.setSeekState(self.STATE_PAUSED)
 		
 	def unPauseService(self):
-		print "unPauseService"
+		print("unPauseService")
 		if self.state == self.STATE_PAUSED:
 			self.setSeekState(self.STATE_PLAYING)
 
@@ -226,42 +226,42 @@
 		return True
 
 	def __seekableStatusChanged(self):
-		print "seekable status changed!"
+		print("seekable status changed!")
 		if not self.isSeekable():
 			self.setSeekState(self.STATE_PLAYING)
 		else:
-			print "seekable"
+			print("seekable")
 
 	def __serviceStarted(self):
 		self.state = self.STATE_PLAYING
 		self.__seekableStatusChanged()
 
 	def setSeekState(self, wantstate):
-		print "setSeekState"
+		print("setSeekState")
 		if wantstate == self.STATE_PAUSED:
-			print "trying to switch to Pause- state:",self.STATE_PAUSED
+			print("trying to switch to Pause- state:",self.STATE_PAUSED)
 		elif wantstate == self.STATE_PLAYING:
-			print "trying to switch to playing- state:",self.STATE_PLAYING
+			print("trying to switch to playing- state:",self.STATE_PLAYING)
 		service = self.session.nav.getCurrentService()
 		if service is None:
-			print "No Service found"
+			print("No Service found")
 			return False
 		pauseable = service.pause()
 		if pauseable is None:
-			print "not pauseable."
+			print("not pauseable.")
 			self.state = self.STATE_PLAYING
 
 		if pauseable is not None:
-			print "service is pausable"
+			print("service is pausable")
 			if wantstate == self.STATE_PAUSED:
-				print "WANT TO PAUSE"
+				print("WANT TO PAUSE")
 				pauseable.pause()
 				self.state = self.STATE_PAUSED
 				if not self.shown:
 					self.hidetimer.stop()
 					self.show()
 			elif wantstate == self.STATE_PLAYING:
-				print "WANT TO PLAY"
+				print("WANT TO PLAY")
 				pauseable.unpause()
 				self.state = self.STATE_PLAYING
 				if self.shown:
--- a/dreammediathek/src/ServiceXML.py
+++ b/dreammediathek/src/ServiceXML.py
@@ -10,7 +10,7 @@
 class WebTVStations():
 	"""Manages WebTVStations declared in a XML-Document."""
 	def __init__(self):
-		print "[WebTVStations] INIT"
+		print("[WebTVStations] INIT")
 		self.webtv_stations = {}
 
 	def getWebTVStations(self, callback = None):
@@ -33,13 +33,13 @@
 				data['title'] = getValue(tvstation.findall("title"), False).encode("UTF-8")
 				data['streamurl'] = getValue(tvstation.findall("streamurl"), False).encode("UTF-8")
 
-				print "TVSTATION--->",data
+				print("TVSTATION--->",data)
 				self.webtv_stations[data['title']] = data
-			except Exception, e:
-				print "[WebTVStations] Error reading Stations:", e
+			except Exception as e:
+				print("[WebTVStations] Error reading Stations:", e)
 
 	def getWebTVStationsList(self):
-		return sorted(self.webtv_stations.iterkeys())
+		return sorted(self.webtv_stations.keys())
 
 iWebTVStations = WebTVStations()
 
--- a/dreammediathek/src/plugin.py
+++ b/dreammediathek/src/plugin.py
@@ -22,8 +22,8 @@
 
 from Screens.InfoBarGenerics import InfoBarShowHide, InfoBarSeek, InfoBarNotifications, InfoBarServiceNotifications
 
-from ServiceXML import iWebTVStations
-from MoviePlayer import dreamMediathekPlayer
+from .ServiceXML import iWebTVStations
+from .MoviePlayer import dreamMediathekPlayer
 
 config.plugins.dreamMediathek = ConfigSubsection()
 config.plugins.dreamMediathek.general = ConfigSubsection()
@@ -119,7 +119,7 @@
 			self.leavePlayerConfirmed([True, how])
 
 	def leavePlayer(self):
-		print "leavePlayer"
+		print("leavePlayer")
 		self.handleLeave(config.plugins.dreamMediathek.general.on_exit.value)
 
 	def leavePlayerConfirmed(self, answer):
@@ -135,11 +135,11 @@
 		self.close()
 			
 	def keyOK(self):
-		print "self.currentList im KeyOK",self.currentList
+		print("self.currentList im KeyOK",self.currentList)
 		if self.currentList == "streamlist":
 			current = self["streamlist"].getCurrent()
 			if current:
-				print current
+				print(current)
 				url = current[2]
 				title = current[1]
 				myreference = eServiceReference(4097,0,url)
@@ -148,7 +148,7 @@
 				self.session.open(dreamMediathekPlayer, myreference, self.lastservice)
 
 	def getStationsList(self):
-		print "getStationsList"
+		print("getStationsList")
 		iWebTVStations.getWebTVStations()
 		self.buildStationsList()
 
@@ -156,11 +156,11 @@
 		provider = None
 		title = None
 		streamurl = None
-		if iWebTVStations.webtv_stations[station].has_key("provider"):
+		if "provider" in iWebTVStations.webtv_stations[station]:
 			provider = iWebTVStations.webtv_stations[station]["provider"]
-		if iWebTVStations.webtv_stations[station].has_key("title"):
+		if "title" in iWebTVStations.webtv_stations[station]:
 			title = iWebTVStations.webtv_stations[station]["title"]
-		if iWebTVStations.webtv_stations[station].has_key("streamurl"):
+		if "streamurl" in iWebTVStations.webtv_stations[station]:
 			streamurl = iWebTVStations.webtv_stations[station]["streamurl"]			
 		return((provider, title, streamurl ))	
 
@@ -170,7 +170,7 @@
 		if self.tvstations and len(self.tvstations):
 			self.streamlist = []
 			for station in self.tvstations:
-				print "GOT station:",station
+				print("GOT station:",station)
 				self.streamlist.append(self.buildStationsComponent(station))
 			if len(self.streamlist):
 				self["streamlist"].setList(self.streamlist)
--- a/dyndns/src/plugin.py
+++ b/dyndns/src/plugin.py
@@ -5,7 +5,7 @@
 from enigma import eTimer
 from Components.ConfigList import ConfigListScreen
 from Components.config import config, getConfigListEntry, ConfigText, ConfigSelection, ConfigSubsection, ConfigYesNo
-from urllib2 import Request, urlopen
+from urllib.request import Request, urlopen
 from base64 import encodestring
 global sessions
 from twisted.internet import reactor
@@ -48,7 +48,7 @@
         }, -2)
 
     def save(self):
-        print "[DynDNS] saving config"
+        print("[DynDNS] saving config")
         for x in self["config"].list:
             x[1].save()
         self.close(True)
@@ -80,7 +80,7 @@
 		self.sessions.append(session)
 
 	def checkCurrentIP(self):
-		print "[DynDNS] checking IP"
+		print("[DynDNS] checking IP")
 		try:
 			html = self.getURL("http://checkip.dyndns.org")
 			str = html.split("<body>")[1]
@@ -92,18 +92,18 @@
 				self.lastip=str
 				reactor.callLater(1, self.onIPchanged)
 			self.timer.start(int(config.plugins.DynDNS.interval.value)*60000)
-		except Exception,e:
-			print "[DynDNS]",e
+		except Exception as e:
+			print("[DynDNS]",e)
 			str = "coundnotgetip"
 
 	def onIPchanged(self):
-		print "[DynDNS] IP change, setting new one",self.lastip
+		print("[DynDNS] IP change, setting new one",self.lastip)
 		try:
 			url = "http://members.dyndns.org/nic/update?system=dyndns&hostname=%s&myip=%s&wildcard=ON&offline=NO"%(config.plugins.DynDNS.hostname.value,self.lastip)
 			if self.getURL(url).find("good") is not -1:
-				print "[DynDNS] ip changed"
-		except Exception,e:
-			print "[DynDNS] ip was not changed",e
+				print("[DynDNS] ip changed")
+		except Exception as e:
+			print("[DynDNS] ip was not changed",e)
 
 	def getURL(self,url):
 		request =  Request(url)
@@ -118,7 +118,7 @@
 	session.openWithCallback(onPluginStartCB,DynDNSScreenMain)
 
 def onPluginStartCB(changed):
-	print "[DynDNS] config changed=",changed
+	print("[DynDNS] config changed=",changed)
 	global dyndnsservice
 	if changed:
 		dyndnsservice.disable()
--- a/easymedia/src/plugin.py
+++ b/easymedia/src/plugin.py
@@ -19,7 +19,7 @@
 
 
 
-from __init__ import _
+from .__init__ import _
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
 from Screens.InfoBarGenerics import InfoBarPlugins
--- a/ecasa/src/EcasaGui.py
+++ b/ecasa/src/EcasaGui.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 #pragma mark - GUI
 
@@ -9,8 +9,8 @@
 from Screens.InfoBarGenerics import InfoBarNotifications
 from Screens.LocationBox import LocationBox
 from Screens.MessageBox import MessageBox
-from NTIVirtualKeyBoard import NTIVirtualKeyBoard
-from EcasaSetup import EcasaSetup
+from .NTIVirtualKeyBoard import NTIVirtualKeyBoard
+from .EcasaSetup import EcasaSetup
 
 #pragma mark Components
 from Components.ActionMap import HelpableActionMap
@@ -106,7 +106,7 @@
 		self["key_green"] = StaticText(_("Albums"))
 		self["key_yellow"] = StaticText()
 		self["key_blue"] = StaticText(_("Search"))
-		for i in xrange(self.PICS_PER_PAGE):
+		for i in range(self.PICS_PER_PAGE):
 			self['image%d' % i] = Pixmap()
 			self['title%d' % i] = StaticText()
 		self["highlight"] = MovingPixmap()
@@ -205,7 +205,7 @@
 		self["highlight"].show()
 		self.queue.clear()
 		pictures = self.pictures
-		for i in xrange(self.PICS_PER_PAGE):
+		for i in range(self.PICS_PER_PAGE):
 			try:
 				our_print("trying to initiate download of idx", i+self.offset)
 				picture = pictures[i+self.offset]
@@ -444,7 +444,7 @@
 		if api != self.api:
 			self.pictures = ()
 			self["highlight"].hide()
-			for i in xrange(self.PICS_PER_PAGE):
+			for i in range(self.PICS_PER_PAGE):
 				self['image%d' % i].instance.setPixmap(None)
 			self["waitingtext"].show()
 
@@ -632,7 +632,7 @@
 		if prevFunc and nextFunc:
 			self["directionActions"] = HelpableActionMap(self, "DirectionActions", {
 				"left": self.previous,
-				"right": self.next,
+				"right": self.__next__,
 				}, -2)
 
 		self.picload = ePicLoad()
@@ -794,7 +794,7 @@
 	def previous(self):
 		if self.prevFunc: self.reloadData(self.prevFunc())
 		self['pixmap'].instance.setPixmap(None)
-	def next(self):
+	def __next__(self):
 		if self.nextFunc: self.reloadData(self.nextFunc())
 		self['pixmap'].instance.setPixmap(None)
 
--- a/ecasa/src/FlickrApi.py
+++ b/ecasa/src/FlickrApi.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 #pragma mark - Flickr API
 
@@ -86,7 +86,7 @@
 		self.idx = 0
 		self.len = len(self)-1
 		return self
-	def next(self):
+	def __next__(self):
 		idx = self.idx
 		if idx > self.len:
 			raise StopIteration
@@ -98,7 +98,7 @@
 	def index(self, obj):
 		return self.__list.index(obj.obj)
 
-from PictureApi import PictureApi
+from .PictureApi import PictureApi
 class FlickrApi(PictureApi):
 	"""Wrapper around flickr API to make our life a little easier."""
 	def __init__(self, api_key=None, cache='/tmp/ecasa'):
@@ -128,7 +128,7 @@
 
 	def getAlbum(self, album):
 		# workaround to allow displaying the photostream without changes to the gui. we use it as a virtual album (or 'set' in flickr) and use the nsid as album object
-		if isinstance(album, types.StringType):
+		if isinstance(album, bytes):
 			photos = self.flickr_api.people_getPublicPhotos(user_id=album, per_page='500', total='500', extras='url_l,url_o,url_m,url_s,url_t,description')
 			pset = photos.find('photos')
 		else:
--- a/ecasa/src/PicasaApi.py
+++ b/ecasa/src/PicasaApi.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 #pragma mark - Picasa API
 
@@ -15,7 +15,7 @@
 #_PicasaApi__returnPhotos = lambda photos: [(photo.title.text, photo) for photo in photos.entry]
 _PicasaApi__returnPhotos = lambda photos: photos.entry
 
-from PictureApi import PictureApi
+from .PictureApi import PictureApi
 class PicasaApi(PictureApi):
 	"""Wrapper around gdata/picasa API to make our life a little easier."""
 	def __init__(self, email=None, password=None, cache='/tmp/ecasa'):
--- a/ecasa/src/PictureApi.py
+++ b/ecasa/src/PictureApi.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 import os
 import shutil
@@ -87,7 +87,7 @@
 		maxSize *= 1048576 # input size is assumed to be in mb, but we work with bytes internally
 
 		files = [(f, stat(f)) for f in list_recursive(self.cache)]
-		curSize = sum(map(lambda x: x[1].st_size, files))
+		curSize = sum([x[1].st_size for x in files])
 		if curSize > maxSize:
 			files.sort(key=lambda x: x[1].st_mtime)
 			while curSize > maxSize:
--- a/ecasa/src/TagStrip.py
+++ b/ecasa/src/TagStrip.py
@@ -2,12 +2,12 @@
 from re import sub, finditer
 
 try:
-	import htmlentitydefs
-	iteritems = lambda d: d.iteritems()
+	import html.entities
+	iteritems = lambda d: iter(d.items())
 except ImportError as ie:
 	from html import entities as htmlentitydefs
-	iteritems = lambda d: d.items()
-	unichr = chr
+	iteritems = lambda d: list(d.items())
+	chr = chr
 
 def strip_readable(html):
 	# Newlines are rendered as whitespace in html
@@ -43,7 +43,7 @@
 	for x in entities:
 		key = x.group(0)
 		if key not in entitydict:
-			entitydict[key] = htmlentitydefs.name2codepoint[x.group(1)]
+			entitydict[key] = html.entities.name2codepoint[x.group(1)]
 
 	entities = finditer('&#x([0-9A-Fa-f]{2,2}?);', html)
 	for x in entities:
@@ -58,7 +58,7 @@
 			entitydict[key] = x.group(1)
 
 	for key, codepoint in iteritems(entitydict):
-		html = html.replace(key, unichr(int(codepoint)))
+		html = html.replace(key, chr(int(codepoint)))
 
 	# Return result with leading/trailing whitespaces removed
 	return html.strip()
--- a/ecasa/src/plugin.py
+++ b/ecasa/src/plugin.py
@@ -1,9 +1,9 @@
-from __future__ import print_function
+
 
 #pragma mark - Plugin
 
 def main(session, *args, **kwargs):
-	import EcasaGui
+	from . import EcasaGui
 	session.open(EcasaGui.EcasaOverview)
 
 def Plugins(**kwargs):
@@ -20,7 +20,7 @@
 
 if __name__ == '__main__':
 	import sys
-	import PicasaApi
+	from . import PicasaApi
 	if len(sys.argv) > 2:
 		un = sys.argv[1]
 		pw = sys.argv[2]
--- a/eibox/src/plugin.py
+++ b/eibox/src/plugin.py
@@ -103,7 +103,7 @@
 		elif self.object_type == EIB_TEXT:
 			self.config_element = ConfigEIBText()
 		else:
-			print "[createConfigElement] couldn't create config_element for", self.getInfo()
+			print("[createConfigElement] couldn't create config_element for", self.getInfo())
 
 	def getValue(self):
 		if self.config_element:
@@ -146,12 +146,12 @@
 					else:
 						self.config_element.setValue(int(val))
 				except ValueError:
-					print "[setValue] Error setting", val, self.getInfo()
+					print("[setValue] Error setting", val, self.getInfo())
 					return
 			if config.eib.debug.value:
-				print "[setValue]", self.object_id, ":=", val, "before:", self.config_element.getValue()
+				print("[setValue]", self.object_id, ":=", val, "before:", self.config_element.getValue())
 		else:
-			print "[setValue] error: no config_element", self.getInfo()
+			print("[setValue] error: no config_element", self.getInfo())
 
 	def getInfo(self):
 		return "[EIBOject] order=%d, id=%s, type=%s, label=%s, position=(%d,%d), img=%s, custom_img=%s, custom_values=%s, textformat=%s, readonly=%s, config_element=%s, value=%s" % (self.order, self.object_id, str(self.object_type), self.label, self.position[0], self.position[1], str(self.img), str(self.custom_img), str(self.custom_values), str(self.textformat), str(self.readonly), str(self.config_element), self.value)
@@ -195,7 +195,7 @@
 
 	def EIBreadAll(self):
 		persist_request_cmd = '<read><objects>'
-		for EIBObject in self.ids.itervalues():
+		for EIBObject in self.ids.values():
 			if EIBObject.object_type != EIB_GOTO:
 				persist_request_cmd += '<object id="%s"/>' % EIBObject.object_id
 		persist_request_cmd += '</objects></read>\n\x04'
@@ -210,7 +210,7 @@
 			knx.settimeout(2)
 			ret = knx.send(query)
 			if config.eib.debug.value:
-				print "[sendKNX]", query, ret
+				print("[sendKNX]", query, ret)
 			
 			knxdata = knx.recv(1024)
 			while not knxdata.endswith('\n\x04'):
@@ -220,14 +220,14 @@
 				callback(knxdata[:-1], user_args)
 			return True
 		except timeout:
-			print ("[sendKNX] socket timeout with linknx server %s:%d") % (host, port)
+			print(("[sendKNX] socket timeout with linknx server %s:%d") % (host, port))
 		except error:
-			print ("[sendKNX] can't connect to linknx server %s:%d") % (host, port)
+			print(("[sendKNX] can't connect to linknx server %s:%d") % (host, port))
 		return False
 
 	def parseSingleRead(self, knxdata, EIBObject):
 		if config.eib.debug.value:
-			print "[parseSingleRead]", knxdata
+			print("[parseSingleRead]", knxdata)
 		try:
 			dom = xml.dom.minidom.parseString(knxdata)
 			if dom.childNodes[0].getAttribute("status") == "success":
@@ -235,19 +235,19 @@
 				if subnode.nodeType == xml.dom.minidom.Text.nodeType:
 					value = subnode.nodeValue
 					if config.eib.debug.value:
-						print "[parseSingleRead] value=", value
+						print("[parseSingleRead] value=", value)
 					try:
 						EIBObject.value = str(value)
 					except KeyError:
-						print "[parseSingleRead] KeyError exception"
+						print("[parseSingleRead] KeyError exception")
 					return
 			print ("[parseSingleRead] XML parser error parseSingleRead failed")
-		except xml.parsers.expat.ExpatError, ValueError:
+		except xml.parsers.expat.ExpatError as ValueError:
 			print ("[parseSingleRead] XML parser error parseSingleRead DOM error")
 
 	def parseMultiRead(self, knxdata, user_args):
 		if config.eib.debug.value:
-			print "[parseMultiRead]", knxdata
+			print("[parseMultiRead]", knxdata)
 		try:
 			dom = xml.dom.minidom.parseString(knxdata)
 			for node in dom.childNodes[0].childNodes:
@@ -267,18 +267,18 @@
 						      elif key == "value":
 							value = item.nodeValue
 						      i += 1
-						    if object_id and value != None and self.ids.has_key(object_id):
+						    if object_id and value != None and object_id in self.ids:
 							  EIBObject = self.ids[object_id]
 							  EIBObject.value = value
 							  if config.eib.debug.value:
-								print "[parseMultiRead]", EIBObject.object_id, " := ", EIBObject.value
+								print("[parseMultiRead]", EIBObject.object_id, " := ", EIBObject.value)
 					            elif config.eib.debug.value:
-							  print "[parseMultiRead] couldn't parse persistence object", object_id, value
+							  print("[parseMultiRead] couldn't parse persistence object", object_id, value)
 		except xml.parsers.expat.ExpatError:
 			print ("[parseMultiRead] XML parser error") 
 
 	def __iter__ (self):
-		list = self.ids.itervalues()
+		list = iter(self.ids.values())
 		return iter(sorted(list, key=lambda EIBObject: EIBObject.order))
 		
 class EIBoxZoneScreen(Screen, ConfigListScreen):
@@ -332,7 +332,7 @@
 		skin += """
 		</screen>"""
 		if config.eib.debug.value:
-			print skin
+			print(skin)
 
 		self.skin = skin
 		Screen.__init__(self, session)
@@ -464,12 +464,12 @@
 
 	def updateLabel(self, EIB_object):
 		if config.eib.debug.value:
-			print "[refreshObjects]", EIB_object.getInfo(), EIB_object.getText()
+			print("[refreshObjects]", EIB_object.getInfo(), EIB_object.getText())
 		self[EIB_object.object_id].setText(EIB_object.getText())
 
 	def updateIcon(self, EIB_object):
 		if config.eib.debug.value:
-			print "[updateIcon]", EIB_object.getInfo()
+			print("[updateIcon]", EIB_object.getInfo())
 		if EIB_object.object_type == EIB_MULTISWITCH:
 		        if EIB_object.value in EIB_object.custom_values:
 				idx = int(EIB_object.custom_values.index(EIB_object.value))
@@ -577,11 +577,11 @@
 				    zone_name = str(subnode.getAttribute("name"))
 				    filename = img_prefix + zone_img
 				    if not zone_img or not fileExists(filename):
-					print "[loadXML] ", filename, " not found! using default image"
+					print("[loadXML] ", filename, " not found! using default image")
 					zone_img = "default_bg.png"
     				    self.EIB_zones[zone_id] = EIBObjects(zone_id, zone_name, zone_img)
 				    if config.eib.debug.value:
-					print "[loadXML] new EIB_zone", zone_id, zone_name, zone_img, self.EIB_zones[zone_id]
+					print("[loadXML] new EIB_zone", zone_id, zone_name, zone_img, self.EIB_zones[zone_id])
 				    self.xmlGetZoneNode(subnode, zone_id)
 				    if self.gotoZone == None:
 					self.gotoZone = zone_id
@@ -595,7 +595,7 @@
 					debug = True
 				config.eib.debug.setValue(debug)
 				if config.eib.debug.value:
-					print "[loadXML] parsed settings! host:", config.eib.host.value, "port:", config.eib.port.value, "refresh:", config.eib.refresh.value, "debug:", config.eib.debug.value
+					print("[loadXML] parsed settings! host:", config.eib.host.value, "port:", config.eib.port.value, "refresh:", config.eib.refresh.value, "debug:", config.eib.debug.value)
 		except:
 			self.errorOut("[loadXML] " + str(filename) + ' ' + _("parser error"))
 
@@ -603,7 +603,7 @@
 		values = []
 		images = []
 		for subnode in node.childNodes:
-			print "[xmlGetMultiNodes] subnode", subnode
+			print("[xmlGetMultiNodes] subnode", subnode)
 			if subnode.nodeType == xml.dom.minidom.Element.nodeType:
 				i = 0
 				value = 0
@@ -677,21 +677,21 @@
 					obj = EIBObject(order, object_id, object_type, label, (x,y), img, custom_img, custom_values, textformat, readonly)
 					self.EIB_zones[zone].append(obj)
 					if config.eib.debug.value:
-						print "[xmlGetZoneNode] new", obj.getInfo()
+						print("[xmlGetZoneNode] new", obj.getInfo())
 					order += 1
 				elif temp_id and setpoint_id and label and x and y:
 					obj = EIBObject(order, temp_id, EIB_THERMO, label+' '+_("(actual)"), (x,y), readonly=True)
 					self.EIB_zones[zone].append(obj)
 					if config.eib.debug.value:
-						print "[xmlGetZoneNode] new", obj.getInfo()
+						print("[xmlGetZoneNode] new", obj.getInfo())
 					order += 1
 					obj = EIBObject(order, setpoint_id, EIB_THERMO, label+' '+_("(set point)"), (x,y+16), readonly=readonly)
 					self.EIB_zones[zone].append(obj)
 					if config.eib.debug.value:
-						print "[xmlGetZoneNode] new", obj.getInfo()
+						print("[xmlGetZoneNode] new", obj.getInfo())
 					order += 1
 				else:
-					print "[xmlGetZoneNode] couldn't parse object", object_id, object_type, label, (x,y), img, custom_img, custom_values, textformat, readonly, temp_id, setpoint_id
+					print("[xmlGetZoneNode] couldn't parse object", object_id, object_type, label, (x,y), img, custom_img, custom_values, textformat, readonly, temp_id, setpoint_id)
 
 def main(session, **kwargs):
 	session.open(EIBox)
--- a/elektro/src/plugin.py
+++ b/elektro/src/plugin.py
@@ -11,7 +11,7 @@
 
 
 #from enigma import *
-from __init__ import _
+from .__init__ import _
 
 from Screens.InfoBarGenerics import *
 # from RecordTimer import *
@@ -48,7 +48,7 @@
 # Startup/shutdown notification
 from Tools import Notifications
 
-import ping
+from . import ping
 import os
 # Timer, etc
 
@@ -80,7 +80,7 @@
 
 #Configuration
 if debug:
-	print pluginPrintname, "Setting config defaults"
+	print(pluginPrintname, "Setting config defaults")
 config.plugins.elektro = ConfigSubsection()
 config.plugins.elektro.nextday = ConfigClock(default = ((6 * 60 + 0) * 60) )
 config.plugins.elektro.nextday2 = ConfigClock(default = ((6 * 60 + 0) * 60) )
@@ -180,7 +180,7 @@
 
 def autostart(reason, **kwargs):
 	global session  
-	if reason == 0 and kwargs.has_key("session"):
+	if reason == 0 and "session" in kwargs:
 		session = kwargs["session"]
 		session.open(DoElektro)
 
@@ -192,19 +192,19 @@
 		return ElektroWakeUpTime;
 	
 	nextTimer = session.nav.RecordTimer.getNextRecordingTime()
-	print pluginPrintname, "Now:", strftime("%a:%H:%M:%S",  gmtime(time()))
+	print(pluginPrintname, "Now:", strftime("%a:%H:%M:%S",  gmtime(time())))
 	if (nextTimer < 1) or (nextTimer > ElektroWakeUpTime):
-		print pluginPrintname, "Will wake up", strftime("%a:%H:%M:%S",  gmtime(ElektroWakeUpTime))
+		print(pluginPrintname, "Will wake up", strftime("%a:%H:%M:%S",  gmtime(ElektroWakeUpTime)))
 		return ElektroWakeUpTime
 	
 	#We have to make sure, that the Box will wake up because of us
 	# and not because of the timer
-	print pluginPrintname, "Will wake up due to the next timer", strftime("%a:%H:%M:%S",  gmtime(nextTimer))
+	print(pluginPrintname, "Will wake up due to the next timer", strftime("%a:%H:%M:%S",  gmtime(nextTimer)))
 	return nextTimer - 1
 	
 def Plugins(**kwargs):
 	if debug:
-		print pluginPrintname, "Setting entry points"
+		print(pluginPrintname, "Setting entry points")
 	list = [
 		PluginDescriptor(
 			name = config.plugins.elektro.name.value, 
@@ -239,7 +239,7 @@
 	try:	
 	 	session.open(Elektro)
 	except:
-		print pluginPrintname, "Pluginexecution failed"
+		print(pluginPrintname, "Pluginexecution failed")
 
 class ElektroProfile(ConfigListScreen,Screen):
 	skin = """
@@ -453,7 +453,7 @@
 		self.session = session
 		Screen.__init__(self, session)
 		if debug:
-			print pluginPrintname, "Displays config screen"			
+			print(pluginPrintname, "Displays config screen")			
 
 		self.onChangedEntry = []
 		
@@ -566,7 +566,7 @@
 	def __init__(self,session):
 		Screen.__init__(self,session)
 		
-		print pluginPrintname, "Starting up Version", elektro_pluginversion
+		print(pluginPrintname, "Starting up Version", elektro_pluginversion)
 		
 		self.session = session
 		
@@ -614,14 +614,14 @@
 			self.TimerStandby = eTimer()
 			self.TimerStandby.callback.append(self.CheckStandby)
 			self.TimerStandby.startLongTimer(elektrosleeptime)
-			print pluginPrintname, "Set up standby timer"
+			print(pluginPrintname, "Set up standby timer")
 
 		self.TimerSleep = eTimer()
 		self.TimerSleep.callback.append(self.CheckElektro)
 		self.TimerSleep.startLongTimer(elektrostarttime)
-		print pluginPrintname, "Set up sleep timer"		
+		print(pluginPrintname, "Set up sleep timer")		
 		if debug:
-			print pluginPrintname, "Translation test:", _("Standby on boot")
+			print(pluginPrintname, "Translation test:", _("Standby on boot"))
 		
 	def clkToTime(self, clock):
 		return ( (clock.value[0]) * 60 + (int)(clock.value[1]) )  * 60
@@ -645,13 +645,13 @@
 		
 	
 	def CheckStandby(self):
-		print pluginPrintname, "Showing Standby Sceen"
+		print(pluginPrintname, "Showing Standby Sceen")
 		try:
 			self.session.openWithCallback(self.DoElektroStandby,MessageBox,_("Go to Standby now?"),type = MessageBox.TYPE_YESNO,
 					timeout = config.plugins.elektro.standbyOnBootTimeout.value)
 		except:
 			# Couldn't be shown. Restart timer.
-			print pluginPrintname, "Failed Showing Standby Sceen "
+			print(pluginPrintname, "Failed Showing Standby Sceen ")
 			self.TimerStandby.startLongTimer(elektrostarttime)
 
 
@@ -701,7 +701,7 @@
 		if wakeuptime < time_s:
 			#yes we did -> Next wakeup is tomorrow
 			if debug:			
-				print pluginPrintname, "Wakeup tomorrow"
+				print(pluginPrintname, "Wakeup tomorrow")
 			day = (day + 1) % 7
 			wakeuptime = self.getReltime(self.clkToTime(config_wakeup[day]))
 		
@@ -737,23 +737,23 @@
 		
 		#Which day is it? The next day starts at nextday
 		if debug:
-			print pluginPrintname, "wday 1:", str(ltime.tm_wday)
+			print(pluginPrintname, "wday 1:", str(ltime.tm_wday))
 		if time_s < self.clkToTime(config_nextday):
 			day = (ltime.tm_wday - 1) % 7
 		else:
 			day = ltime.tm_wday
 		if debug:	
-			print pluginPrintname, "wday 2:", str(day)
+			print(pluginPrintname, "wday 2:", str(day))
 		
 		#Let's get the day
 		wakeuptime = self.clkToTime(config_wakeup[day])
 		sleeptime = self.clkToTime(config_sleep[day])
 
-		print pluginPrintname, "Profile:", config.plugins.elektro.profile.value
-		print pluginPrintname, "Nextday:", self.getPrintTime(self.clkToTime(config.plugins.elektro.nextday))
-		print pluginPrintname, "Current time:", self.getPrintTime(time_s)
-		print pluginPrintname, "Wakeup time:", self.getPrintTime(wakeuptime)
-		print pluginPrintname, "Sleep time:", self.getPrintTime(sleeptime)
+		print(pluginPrintname, "Profile:", config.plugins.elektro.profile.value)
+		print(pluginPrintname, "Nextday:", self.getPrintTime(self.clkToTime(config.plugins.elektro.nextday)))
+		print(pluginPrintname, "Current time:", self.getPrintTime(time_s))
+		print(pluginPrintname, "Wakeup time:", self.getPrintTime(wakeuptime))
+		print(pluginPrintname, "Sleep time:", self.getPrintTime(sleeptime))
 		
 		#convert into relative Times
 		time_s = self.getReltime(time_s)
@@ -761,19 +761,19 @@
 		sleeptime = self.getReltime(sleeptime)
 		
 		if debug:
-			print pluginPrintname, "Current Rel-time:", self.getPrintTime(time_s)
-			print pluginPrintname, "Wakeup Rel-time:", self.getPrintTime(wakeuptime)
-			print pluginPrintname, "Sleep Rel-time:", self.getPrintTime(sleeptime)
+			print(pluginPrintname, "Current Rel-time:", self.getPrintTime(time_s))
+			print(pluginPrintname, "Wakeup Rel-time:", self.getPrintTime(wakeuptime))
+			print(pluginPrintname, "Sleep Rel-time:", self.getPrintTime(sleeptime))
 		
 		
 		#let's see if we should be sleeping
 		trysleep = False
 		if time_s < (wakeuptime - elektroShutdownThreshold): # Wakeup is in the future -> sleep!
 			trysleep = True
-			print pluginPrintname, "Wakeup!", str(time_s), " <", str(wakeuptime)
+			print(pluginPrintname, "Wakeup!", str(time_s), " <", str(wakeuptime))
 		if sleeptime < time_s : #Sleep is in the past -> sleep!
 			trysleep = True
-			print pluginPrintname, "Sleep:", str(sleeptime), " <", str(time_s)
+			print(pluginPrintname, "Sleep:", str(sleeptime), " <", str(time_s))
 		
 		#We are not tying to go to sleep anymore -> maybe go to sleep again the next time
 		if trysleep == False:
@@ -806,7 +806,7 @@
 				ip = "%d.%d.%d.%d" % tuple(config.plugins.elektro.ip[i].value)
 				if ip != "0.0.0.0":
 					if ping.doOne(ip,0.1) != None:
-						print pluginPrintname, ip, "online"
+						print(pluginPrintname, ip, "online")
 						trysleep = False
 						break
 
--- a/emailclient/src/TagStrip.py
+++ b/emailclient/src/TagStrip.py
@@ -4,38 +4,38 @@
 # Entities to be converted
 entities = (
 	# ISO-8895-1 (most common)
-	("&#228;", u"ä"),
-	("&auml;", u"ä"),
-	("&#252;", u"ü"),
-	("&uuml;", u"ü"),
-	("&#246;", u"ö"),
-	("&ouml;", u"ö"),
-	("&#196;", u"Ä"),
-	("&Auml;", u"Ä"),
-	("&#220;", u"Ü"),
-	("&Uuml;", u"Ü"),
-	("&#214;", u"Ö"),
-	("&Ouml;", u"Ö"),
-	("&#223;", u"ß"),
-	("&szlig;", u"ß"),
+	("&#228;", "ä"),
+	("&auml;", "ä"),
+	("&#252;", "ü"),
+	("&uuml;", "ü"),
+	("&#246;", "ö"),
+	("&ouml;", "ö"),
+	("&#196;", "Ä"),
+	("&Auml;", "Ä"),
+	("&#220;", "Ü"),
+	("&Uuml;", "Ü"),
+	("&#214;", "Ö"),
+	("&Ouml;", "Ö"),
+	("&#223;", "ß"),
+	("&szlig;", "ß"),
 
 	# Rarely used entities
-	("&#8230;", u"..."),
-	("&#8211;", u"-"),
-	("&#160;", u" "),
-	("&#34;", u"\""),
-	("&#38;", u"&"),
-	("&#39;", u"'"),
-	("&#60;", u"<"),
-	("&#62;", u">"),
+	("&#8230;", "..."),
+	("&#8211;", "-"),
+	("&#160;", " "),
+	("&#34;", "\""),
+	("&#38;", "&"),
+	("&#39;", "'"),
+	("&#60;", "<"),
+	("&#62;", ">"),
 
 	# Common entities
-	("&lt;", u"<"),
-	("&gt;", u">"),
-	("&nbsp;", u" "),
-	("&amp;", u"&"),
-	("&quot;", u"\""),
-	("&apos;", u"'"),
+	("&lt;", "<"),
+	("&gt;", ">"),
+	("&nbsp;", " "),
+	("&amp;", "&"),
+	("&quot;", "\""),
+	("&apos;", "'"),
 )
 
 def strip_readable(html):
--- a/emailclient/src/__init__.py
+++ b/emailclient/src/__init__.py
@@ -31,7 +31,7 @@
 			deb = open("/tmp/EmailClient.log", "aw")
 			deb.write(time.ctime() + ': ' + message + "\n")
 			deb.close()
-		except Exception, e:
+		except Exception as e:
 			debug("%s (retried debug: %s)" %(repr(message), str(e)))
 
 from enigma import getDesktop
--- a/emailclient/src/plugin.py
+++ b/emailclient/src/plugin.py
@@ -23,12 +23,12 @@
 import email, re, os
 from email.header import decode_header
 import time
-from TagStrip import strip_readable
-from protocol import createFactory
+from .TagStrip import strip_readable
+from .protocol import createFactory
 
 from . import _, initLog, debug, scaleH, scaleV, DESKTOP_WIDTH, DESKTOP_HEIGHT #@UnresolvedImport # pylint: disable-msg=F0401
 mailAccounts = [] # contains all EmailAccount objects
-from EmailConfig import EmailConfigOptions, EmailConfigAccount
+from .EmailConfig import EmailConfigOptions, EmailConfigAccount
 
 config.plugins.emailimap = ConfigSubsection()
 config.plugins.emailimap.showDeleted = ConfigEnableDisable(default=False)
@@ -480,7 +480,7 @@
 			fp = open(folder+"/"+self.getFilename(),"wb")
 			fp.write(self.data)
 			fp.close()
-		except Exception, e:
+		except Exception as e:
 			debug("[EmailAttachment] save %s" %str(e))
 			return False
 		return True
@@ -560,7 +560,7 @@
 			debug('[CheckMail] %s: _filterNewUnseen: init' %(self._name))
 			# Notifications.AddNotification(MessageBox, str(len(newUnseenList)) + ' ' + _("unread messages in mailbox %s") %self._name, type=MessageBox.TYPE_INFO, timeout=config.plugins.emailimap.timeout.value)
 		else:
-			newMessages = filter(lambda x: x not in self._unseenList, newUnseenList)
+			newMessages = [x for x in newUnseenList if x not in self._unseenList]
 			if newMessages:
 				debug("[CheckMail] %s: _filterNewUnseen: new message(s): %s" %(self._name, repr(newMessages)))
 				# construct MessageSet from list of message numbers
@@ -769,7 +769,7 @@
 				self._proto.fetchFlags('%i:%i'%(rangeToFetch[0], rangeToFetch[1])	#'1:*'
 						   ).addCallback(self._onFlagsList, callback, rangeToFetch)
 
-			except imap4.IllegalServerResponse, e:
+			except imap4.IllegalServerResponse as e:
 				debug("[EmailAccount] _onExamine exception: " + str(e))
 				callback([], [])
 
@@ -887,9 +887,9 @@
 		try:
 			failure.trap(imap4.NoSupportedAuthentication)
 			self._doLoginInsecure()
-		except Exception, e:
+		except Exception as e:
 			debug("[EmailAccount] %s: _onAuthenticationFailed: %s" %(self._name, e.message))
-			print e, e.message
+			print(e, e.message)
 
 	def _doLoginInsecure(self):
 		debug("[EmailAccount] %s: _doLoginInsecure" %(self._name))
--- a/emailclient/src/uu.py
+++ b/emailclient/src/uu.py
@@ -46,7 +46,7 @@
     #
     if in_file == '-':
         in_file = sys.stdin
-    elif isinstance(in_file, basestring):
+    elif isinstance(in_file, str):
         if name is None:
             name = os.path.basename(in_file)
         if mode is None:
@@ -60,7 +60,7 @@
     #
     if out_file == '-':
         out_file = sys.stdout
-    elif isinstance(out_file, basestring):
+    elif isinstance(out_file, str):
         out_file = open(out_file, 'w')
     #
     # Set defaults for name and mode
@@ -68,11 +68,11 @@
     if name is None:
         name = '-'
     if mode is None:
-        mode = 0666
+        mode = 0o666
     #
     # Write the data
     #
-    out_file.write('begin %o %s\n' % ((mode&0777),name))
+    out_file.write('begin %o %s\n' % ((mode&0o777),name))
     data = in_file.read(45)
     while len(data) > 0:
         out_file.write(binascii.b2a_uu(data))
@@ -87,7 +87,7 @@
     #
     if in_file == '-':
         in_file = sys.stdin
-    elif isinstance(in_file, basestring):
+    elif isinstance(in_file, str):
         in_file = open(in_file)
     #
     # Read until a begin is encountered or we've exhausted the file
@@ -117,7 +117,7 @@
     opened = False
     if out_file == '-':
         out_file = sys.stdout
-    elif isinstance(out_file, basestring):
+    elif isinstance(out_file, str):
         fp = open(out_file, 'wb')
         try:
             os.path.chmod(out_file, mode) #@UndefinedVariable
@@ -132,7 +132,7 @@
     while s and s.strip() != 'end':
         try:
             data = binascii.a2b_uu(s)
-        except binascii.Error, v:
+        except binascii.Error as v:
             # Workaround for broken uuencoders by /Fredrik Lundh
             nbytes = (((ord(s[0])-32) & 63) * 4 + 5) // 3
             data = binascii.a2b_uu(s[:nbytes])
@@ -167,18 +167,18 @@
 
     if options.decode:
         if options.text:
-            if isinstance(output, basestring):
+            if isinstance(output, str):
                 output = open(output, 'w')
             else:
-                print sys.argv[0], ': cannot do -t to stdout'
+                print(sys.argv[0], ': cannot do -t to stdout')
                 sys.exit(1)
         decode(input, output)
     else:
         if options.text:
-            if isinstance(input, basestring):
+            if isinstance(input, str):
                 input = open(input, 'r')
             else:
-                print sys.argv[0], ': cannot do -t from stdin'
+                print(sys.argv[0], ': cannot do -t from stdin')
                 sys.exit(1)
         encode(input, output)
 
--- a/emission/src/EmissionDetailview.py
+++ b/emission/src/EmissionDetailview.py
@@ -261,7 +261,7 @@
 
 			l = []
 			files = torrent.files()
-			for id, x in files.items():
+			for id, x in list(files.items()):
 				completed = x['completed']
 				size = x['size'] or 1 # to avoid division by zero ;-)
 				l.append((id, x['priority'], str(completed/1048576) + " MB", \
@@ -290,7 +290,7 @@
 				if cur[3]:
 					files[cur[0]]['selected'] = False
 					atLeastOneSelected = False
-					for file in files.values():
+					for file in list(files.values()):
 						if file['selected']:
 							atLeastOneSelected = True
 							break
--- a/emission/src/EmissionOverview.py
+++ b/emission/src/EmissionOverview.py
@@ -243,7 +243,7 @@
 			return
 
 		try:
-			self.transmission.stop([x.id for x in self.transmission.list().values()])
+			self.transmission.stop([x.id for x in list(self.transmission.list().values())])
 		except TransmissionError as te:
 			self.session.open(
 				MessageBox,
@@ -257,7 +257,7 @@
 			return
 
 		try:
-			self.transmission.start([x.id for x in self.transmission.list().values()])
+			self.transmission.start([x.id for x in list(self.transmission.list().values())])
 		except TransmissionError as te:
 			self.session.open(
 				MessageBox,
--- a/emission/src/plugin.py
+++ b/emission/src/plugin.py
@@ -5,7 +5,7 @@
 	ConfigNumber, ConfigYesNo, ConfigSelection
 
 from . import EmissionOverview
-from EmissionOverview import LIST_TYPE_ALL, SORT_TYPE_ADDED
+from .EmissionOverview import LIST_TYPE_ALL, SORT_TYPE_ADDED
 
 config.plugins.emission = ConfigSubsection()
 config.plugins.emission.hostname = ConfigText(default = "localhost", fixed_size = False)
--- a/epgrefresh/src/EPGRefresh.py
+++ b/epgrefresh/src/EPGRefresh.py
@@ -1,5 +1,5 @@
 # -*- coding: UTF-8 -*-
-from __future__ import print_function
+
 
 # To check if in Standby
 import Screens.Standby
@@ -11,7 +11,7 @@
 from ServiceReference import ServiceReference
 
 # Timer
-from EPGRefreshTimer import epgrefreshtimer, EPGRefreshTimerEntry, checkTimespan
+from .EPGRefreshTimer import epgrefreshtimer, EPGRefreshTimerEntry, checkTimespan
 
 # To calculate next timer execution
 from time import time
@@ -22,9 +22,9 @@
 from os import path as path
 
 # We want a list of unique services
-from EPGRefreshService import EPGRefreshService
-
-from OrderedSet import OrderedSet
+from .EPGRefreshService import EPGRefreshService
+
+from .OrderedSet import OrderedSet
 
 # Configuration
 from Components.config import config
@@ -34,9 +34,9 @@
 from Tools import Notifications
 
 # ... II
-from MainPictureAdapter import MainPictureAdapter
-from PipAdapter import PipAdapter
-from RecordAdapter import RecordAdapter
+from .MainPictureAdapter import MainPictureAdapter
+from .PipAdapter import PipAdapter
+from .RecordAdapter import RecordAdapter
 
 # Path to configuration
 CONFIG = "/etc/enigma2/epgrefresh.xml"
--- a/epgrefresh/src/EPGRefreshChannelEditor.py
+++ b/epgrefresh/src/EPGRefreshChannelEditor.py
@@ -18,7 +18,7 @@
 from Components.config import getConfigListEntry, ConfigSelection, \
 	NoSave
 
-from EPGRefreshService import EPGRefreshService
+from .EPGRefreshService import EPGRefreshService
 
 # Show ServiceName instead of ServiceReference
 from ServiceReference import ServiceReference
--- a/epgrefresh/src/EPGRefreshConfiguration.py
+++ b/epgrefresh/src/EPGRefreshConfiguration.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # for localized messages
 from . import _
@@ -6,7 +6,7 @@
 # GUI (Screens)
 from Screens.Screen import Screen
 from Components.ConfigList import ConfigListScreen
-from EPGRefreshChannelEditor import EPGRefreshServiceEditor
+from .EPGRefreshChannelEditor import EPGRefreshServiceEditor
 
 # GUI (Summary)
 from Screens.Setup import SetupSummary
@@ -18,7 +18,7 @@
 # Configuration
 from Components.config import config, getConfigListEntry
 
-from EPGRefresh import epgrefresh
+from .EPGRefresh import epgrefresh
 from Components.SystemInfo import SystemInfo
 
 VERSION = "1.1.0"
@@ -121,7 +121,7 @@
 		self.onFirstExecBegin.append(self.firstExec)
 
 	def firstExec(self):
-		from plugin import epgrefreshHelp
+		from .plugin import epgrefreshHelp
 		if config.plugins.epgrefresh.show_help.value and epgrefreshHelp:
 			config.plugins.epgrefresh.show_help.value = False
 			config.plugins.epgrefresh.show_help.save()
@@ -131,7 +131,7 @@
 		self.setTitle(' '.join((_("EPGRefresh Configuration"), _("Version"), VERSION)))
 
 	def showHelp(self):
-		from plugin import epgrefreshHelp
+		from .plugin import epgrefreshHelp
 		if epgrefreshHelp:
 			epgrefreshHelp.open(self.session)
 
--- a/epgrefresh/src/EPGRefreshResource.py
+++ b/epgrefresh/src/EPGRefreshResource.py
@@ -1,16 +1,16 @@
 from twisted.web import http, resource
-from EPGRefresh import epgrefresh
-from EPGRefreshService import EPGRefreshService
+from .EPGRefresh import epgrefresh
+from .EPGRefreshService import EPGRefreshService
 from enigma import eServiceReference
 from Components.config import config
 from Components.SystemInfo import SystemInfo
 from time import localtime
 try:
-	from urllib import unquote
-	iteritems = lambda d: d.iteritems()
+	from urllib.parse import unquote
+	iteritems = lambda d: iter(d.items())
 except ImportError as ie:
 	from urllib.parse import unquote
-	iteritems = lambda d: d.items()
+	iteritems = lambda d: list(d.items())
 
 API_VERSION = "1.0"
 
--- a/epgrefresh/src/EPGRefreshTimer.py
+++ b/epgrefresh/src/EPGRefreshTimer.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # To check if in Standby
 import Screens.Standby
--- a/epgrefresh/src/MainPictureAdapter.py
+++ b/epgrefresh/src/MainPictureAdapter.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 import Screens.Standby
 
--- a/epgrefresh/src/OrderedSet.py
+++ b/epgrefresh/src/OrderedSet.py
@@ -1,9 +1,9 @@
 # Python OrderedSet implementation
 # taken from http://code.activestate.com/recipes/576694-orderedset/
-from __future__ import print_function
+
 import collections
 
-KEY, PREV, NEXT = range(3)
+KEY, PREV, NEXT = list(range(3))
 
 class OrderedSet(collections.MutableSet):
 
--- a/epgrefresh/src/PipAdapter.py
+++ b/epgrefresh/src/PipAdapter.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from Screens.PictureInPicture import PictureInPicture
 from Components.SystemInfo import SystemInfo
--- a/epgrefresh/src/RecordAdapter.py
+++ b/epgrefresh/src/RecordAdapter.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from Components.SystemInfo import SystemInfo
 
--- a/epgrefresh/src/plugin.py
+++ b/epgrefresh/src/plugin.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # for localized messages
 from . import _
@@ -15,7 +15,7 @@
 	0, now.tm_wday, now.tm_yday, now.tm_isdst)
 )
 end = mktime((
-	now.tm_year, now.tm_mon, now.tm_mday, 06, 30, \
+	now.tm_year, now.tm_mon, now.tm_mday, 0o6, 30, \
 	0, now.tm_wday, now.tm_yday, now.tm_isdst)
 )
 
@@ -106,9 +106,9 @@
 #pragma mark -
 
 # Plugin
-from EPGRefresh import epgrefresh
-from EPGRefreshConfiguration import EPGRefreshConfiguration
-from EPGRefreshService import EPGRefreshService
+from .EPGRefresh import epgrefresh
+from .EPGRefreshConfiguration import EPGRefreshConfiguration
+from .EPGRefreshService import EPGRefreshService
 
 # Plugins
 from Components.PluginComponent import plugins
--- a/epgsearch/src/EPGSearch.py
+++ b/epgsearch/src/EPGSearch.py
@@ -9,13 +9,13 @@
 from Tools.Directories import fileExists, resolveFilename, SCOPE_PLUGINS
 from ServiceReference import ServiceReference
 
-from EPGSearchSetup import EPGSearchSetup
+from .EPGSearchSetup import EPGSearchSetup
 from Screens.ChannelSelection import SimpleChannelSelection
 from Screens.ChoiceBox import ChoiceBox
 from Screens.EpgSelection import EPGSelection
 from Screens.MessageBox import MessageBox
 from Screens.Screen import Screen
-from NTIVirtualKeyBoard import NTIVirtualKeyBoard
+from .NTIVirtualKeyBoard import NTIVirtualKeyBoard
 
 from Components.ActionMap import ActionMap
 from Components.Button import Button
--- a/epgsearch/src/plugin.py
+++ b/epgsearch/src/plugin.py
@@ -4,7 +4,7 @@
 from enigma import eServiceCenter
 
 # Plugin
-from EPGSearch import EPGSearch, EPGSearchEPGSelection, EPGSelectionInit
+from .EPGSearch import EPGSearch, EPGSearchEPGSelection, EPGSelectionInit
 
 # Plugin definition
 from Plugins.Plugin import PluginDescriptor
--- a/eurotictv/src/__init__.py
+++ b/eurotictv/src/__init__.py
@@ -14,7 +14,7 @@
 def __(txt):
 	t = gettext.dgettext(PluginLanguageDomain, txt)
 	if t == txt:
-		print "[%s] fallback to default translation for %s" %(PluginLanguageDomain, txt)
+		print("[%s] fallback to default translation for %s" %(PluginLanguageDomain, txt))
 		t = _(txt)
 		#t = gettext.gettext(txt)
 	return t
--- a/eurotictv/src/plugin.py
+++ b/eurotictv/src/plugin.py
@@ -16,10 +16,10 @@
 from enigma import eListboxPythonMultiContent, eServiceReference, getDesktop, iPlayableService, eSize, ePicLoad
 from ServiceReference import ServiceReference
 from Tools.Directories import SCOPE_PLUGINS, resolveFilename
-from __init__ import __
+from .__init__ import __
 
 class EuroticTVPlayer(Screen, InfoBarBase, InfoBarSeek, HelpableScreen):
-	STATE_DISCONNECTED, STATE_CONNECTING, STATE_PLAYING, STATE_PAUSED, STATE_FAILURE = range(5)
+	STATE_DISCONNECTED, STATE_CONNECTING, STATE_PLAYING, STATE_PAUSED, STATE_FAILURE = list(range(5))
 	STATE_NAMES = [__("disconnected"), __("connecting..."), __("LIVE"), __("pause"), __("No Connection")]
 	STREAM_DIM = (768, 576)
 	PIP_DIM = (432, 324)
@@ -128,24 +128,24 @@
 			self["poster"].show()
 
 	def __streamStarted(self):
-		print "__streamStarted"
+		print("__streamStarted")
 		if self.state != self.STATE_PAUSED:
 			self.setState(self.STATE_PLAYING)
 
 	def __serviceStarted(self):
-		print "__streamStarted"
+		print("__streamStarted")
 		self.setState(self.STATE_CONNECTING)
 
 	def __streamFailed(self):
-		print "__streamFailed"
+		print("__streamFailed")
 		self.setState(self.STATE_FAILURE)
 
 	def __evEOF(self):
-		print "__evEOF"
+		print("__evEOF")
 		self.setState(self.STATE_DISCONNECTED)
 
 	def keyPass(self):
-		print "keyPass"
+		print("keyPass")
 
 	def keyOK(self):
 		if self.state in (self.STATE_DISCONNECTED, self.STATE_FAILURE):
--- a/filebrowser/src/plugin.py
+++ b/filebrowser/src/plugin.py
@@ -62,13 +62,13 @@
         self.setTitle(pname+" "+_("Settings"))
 
     def save(self):
-        print "saving"
+        print("saving")
         for x in self["config"].list:
             x[1].save()
         self.close(True)
 
     def cancel(self):
-        print "cancel"
+        print("cancel")
         for x in self["config"].list:
             x[1].cancel()
         self.close(False)
@@ -257,8 +257,8 @@
     def onFileAction(self):
         try:
             x = openFile(self.session,guess_type(self.SOURCELIST.getFilename())[0],self.SOURCELIST.getCurrentDirectory()+self.SOURCELIST.getFilename())
-            print "RESULT OPEN FILE",x
-        except TypeError,e:
+            print("RESULT OPEN FILE",x)
+        except TypeError as e:
             # catching error
             #  File "/home/tmbinc/opendreambox/1.5/dm8000/experimental/build/tmp/work/enigma2-2.6git20090627-r1/image/usr/lib/enigma2/python/Components/Scanner.py", line 43, in handleFile
             #  TypeError: 'in <string>' requires string as left operand
--- a/fritzcall/src/FritzLDIF.py
+++ b/fritzcall/src/FritzLDIF.py
@@ -17,7 +17,7 @@
 		return string
 	
 	def debug(text):
-		print text
+		print(text)
 	
 	def normalizePhoneNumber(intNo):
 		found = re.match('^\+49(.*)', intNo)
@@ -37,7 +37,7 @@
 			return '0'
 
 def out(number, name):
-	print number + '#' + name
+	print(number + '#' + name)
 
 class FindNumber(ldif.LDIFParser):
 	def __init__(self, number, inp, outFun):
@@ -60,23 +60,23 @@
 	
 		address = ""
 		addressB = ""
-		if entry.has_key('telephoneNumber') or (entry.has_key('homePhone') and self.number == normalizePhoneNumber(entry['homePhone'][0])) or (entry.has_key('mobile') and self.number == normalizePhoneNumber(entry['mobile'][0])):
+		if 'telephoneNumber' in entry or ('homePhone' in entry and self.number == normalizePhoneNumber(entry['homePhone'][0])) or ('mobile' in entry and self.number == normalizePhoneNumber(entry['mobile'][0])):
 			# debug("[FritzCallPhonebook] LDIF get address")
-			if entry.has_key('telephoneNumber'):
+			if 'telephoneNumber' in entry:
 				no = normalizePhoneNumber(entry['telephoneNumber'][0])
 			else:
 				no = 0
-			if self.number == no or (entry.has_key('homePhone') and self.number == normalizePhoneNumber(entry['homePhone'][0])) or (entry.has_key('mobile') and self.number == normalizePhoneNumber(entry['mobile'][0])):
+			if self.number == no or ('homePhone' in entry and self.number == normalizePhoneNumber(entry['homePhone'][0])) or ('mobile' in entry and self.number == normalizePhoneNumber(entry['mobile'][0])):
 				nameB = (name + ' (' + _('business') + ')') if name else ""
-				if entry.has_key('company'):
+				if 'company' in entry:
 					nameB = (nameB + ', ' + entry['company'][0]) if nameB else entry['company'][0]
-				if entry.has_key('l'):
+				if 'l' in entry:
 					addressB = entry['l'][0]
-					if entry.has_key('postalCode'):
+					if 'postalCode' in entry:
 						addressB = entry['postalCode'][0] + ' ' + addressB
-					if entry.has_key('c'):
+					if 'c' in entry:
 						addressB = addressB + ', ' + entry['c'][0]
-					if entry.has_key('street'):
+					if 'street' in entry:
 						addressB = entry['street'][0] + ', ' + addressB
 					# debug("[FritzCallPhonebook] LDIF address: " + addressB)
 					if self.number == no:
@@ -93,18 +93,18 @@
 						self._input_file.close()
 						return
 		for i in ['homePhone', 'mobile']:
-			if entry.has_key(i):
+			if i in entry:
 				no = normalizePhoneNumber(entry[i][0])
 				if self.number == no:
 					if i == 'mobile':
 						name = name + ' (' + _('mobile') + ')'
 					else:
 						name = name + ' (' + _('home') + ')'
-					if entry.has_key('mozillaHomeLocalityName'):
+					if 'mozillaHomeLocalityName' in entry:
 						address = entry['mozillaHomeLocalityName'][0]
-						if entry.has_key('mozillaHomePostalCode'):
+						if 'mozillaHomePostalCode' in entry:
 							address = entry['mozillaHomePostalCode'][0] + ' ' + address
-						if entry.has_key('mozillaHomeCountryName'):
+						if 'mozillaHomeCountryName' in entry:
 							address = address + ', ' + entry['mozillaHomeCountryName'][0]
 							debug("[FritzCallPhonebook] LDIF home address: " + addressB)
 						result = name + ', ' + address.replace('\n', ', ').replace('\r', '').replace('#', '')
@@ -143,41 +143,41 @@
 	
 		address = ""
 		addressB = ""
-		if entry.has_key('telephoneNumber') or entry.has_key('homePhone') or entry.has_key('mobile'):
+		if 'telephoneNumber' in entry or 'homePhone' in entry or 'mobile' in entry:
 			# debug("[FritzCallPhonebook] LDIF get address")
 			nameB = (name + ' (' + _('business') + ')') if name else ""
-			if entry.has_key('company'):
+			if 'company' in entry:
 				nameB = (nameB + ', ' + entry['company'][0]) if nameB else entry['company'][0]
-			if entry.has_key('l'):
+			if 'l' in entry:
 				addressB = entry['l'][0]
-				if entry.has_key('postalCode'):
+				if 'postalCode' in entry:
 					addressB = entry['postalCode'][0] + ' ' + addressB
-				if entry.has_key('c'):
+				if 'c' in entry:
 					addressB = addressB + ', ' + entry['c'][0]
-				if entry.has_key('street'):
+				if 'street' in entry:
 					addressB = entry['street'][0] + ', ' + addressB
 				# debug("[FritzCallPhonebook] LDIF address: " + addressB)
-				if entry.has_key('telephoneNumber'):
+				if 'telephoneNumber' in entry:
 					no = normalizePhoneNumber(entry['telephoneNumber'][0])
 					result = nameB + ', ' + addressB.replace('\n', ', ').replace('\r', '').replace('#', '')
 					self.outFun(no, result)
 			else:
-				if entry.has_key('telephoneNumber'):
+				if 'telephoneNumber' in entry:
 					no = normalizePhoneNumber(entry['telephoneNumber'][0])
 					result = nameB.replace('\n', ', ').replace('\r', '').replace('#', '')
 					self.outFun(no, result)
 		for i in ['homePhone', 'mobile']:
-			if entry.has_key(i):
+			if i in entry:
 				no = normalizePhoneNumber(entry[i][0])
 				if i == 'mobile':
 					nameHM = name + ' (' + _('mobile') + ')'
 				else:
 					nameHM = name + ' (' + _('home') + ')'
-				if entry.has_key('mozillaHomeLocalityName'):
+				if 'mozillaHomeLocalityName' in entry:
 					address = entry['mozillaHomeLocalityName'][0]
-					if entry.has_key('mozillaHomePostalCode'):
+					if 'mozillaHomePostalCode' in entry:
 						address = entry['mozillaHomePostalCode'][0] + ' ' + address
-					if entry.has_key('mozillaHomeCountryName'):
+					if 'mozillaHomeCountryName' in entry:
 						address = address + ', ' + entry['mozillaHomeCountryName'][0]
 					result = nameHM + ', ' + address.replace('\n', ', ').replace('\r', '').replace('#', '')
 					self.outFun(no, result)
@@ -187,7 +187,7 @@
 					self.outFun(no, nameHM)
 
 def lookedUp(number, name):
-	print number + ' ' + name
+	print(number + ' ' + name)
 
 if __name__ == '__main__':
 	import os, sys
--- a/fritzcall/src/FritzOutlookCSV.py
+++ b/fritzcall/src/FritzOutlookCSV.py
@@ -15,7 +15,7 @@
 		return string
 	
 	def debug(text):
-		print text
+		print(text)
 	
 	import re
 	def normalizePhoneNumber(intNo):
@@ -36,7 +36,7 @@
 			return '0'
 
 def out(number, name):
-	print number + '#' + name
+	print(number + '#' + name)
 
 import csv
 #
@@ -61,13 +61,13 @@
 	if not fileD:
 		return
 	addrs = csv.reader(fileD, delimiter=',', quotechar='"')
-	addrs.next() # skip header
+	next(addrs) # skip header
 	for row in addrs:
-		row = map(lambda w: w.decode('cp1252').encode('utf-8'), row)
-		name = u""
-		nameB = u""
-		address = u""
-		addressB = u""
+		row = [w.decode('cp1252').encode('utf-8') for w in row]
+		name = ""
+		nameB = ""
+		address = ""
+		addressB = ""
 		try: # this is just to catch wrong lines
 			if row[31] or (row[37] and number == normalizePhoneNumber(row[37])) or (row[40] and number == normalizePhoneNumber(row[40])): # Telefon geschäftlich
 				no = normalizePhoneNumber(row[31])
@@ -147,13 +147,13 @@
 	if not fileD:
 		return
 	addrs = csv.reader(fileD, delimiter=',', quotechar='"')
-	addrs.next() # skip header
+	next(addrs) # skip header
 	for row in addrs:
-		row = map(lambda w: w.decode('cp1252'), row)
-		name = u""
-		nameB = u""
-		address = u""
-		addressB = u""
+		row = [w.decode('cp1252') for w in row]
+		name = ""
+		nameB = ""
+		address = ""
+		addressB = ""
 		try:
 			if row[31] or row[37] or row[40]:
 				if row[3]:
--- a/fritzcall/src/__init__.py
+++ b/fritzcall/src/__init__.py
@@ -37,7 +37,7 @@
 			# deb.write(headerstr + message.decode('utf-8') + u"\n")
 			deb.write(message + "\n")
 			deb.close()
-		except Exception, e:
+		except Exception as e:
 			debug("%s (retried debug: %s)" % (repr(message), str(e)))
 		
 
--- a/fritzcall/src/ldif.py
+++ b/fritzcall/src/ldif.py
@@ -26,12 +26,12 @@
   'LDIFCopy',
 ]
 
-import urlparse,urllib,base64,re,types
+import urllib.parse,urllib.request,urllib.parse,urllib.error,base64,re,types
 
 try:
-  from cStringIO import StringIO
+  from io import StringIO
 except ImportError:
-  from StringIO import StringIO
+  from io import StringIO
 
 attrtype_pattern = r'[\w;.]+(;[\w_-]+)*'
 attrvalue_pattern = r'(([^,]|\\,)+|".*?")'
@@ -137,7 +137,7 @@
     attr_value
           attribute value
     """
-    if self._base64_attrs.has_key(attr_type.lower()) or \
+    if attr_type.lower() in self._base64_attrs or \
        needs_base64(attr_value):
       # Encode with base64
       self._unfoldLDIFLine(':: '.join([attr_type,base64.encodestring(attr_value).replace('\n','')]))
@@ -150,7 +150,7 @@
     entry
         dictionary holding an entry
     """
-    attr_types = entry.keys()[:]
+    attr_types = list(entry.keys())[:]
     attr_types.sort()
     for attr_type in attr_types:
       for attr_value in entry[attr_type]:
@@ -167,7 +167,7 @@
     elif mod_len==3:
       changetype = 'modify'
     else:
-      raise ValueError,"modlist item of wrong length"
+      raise ValueError("modlist item of wrong length")
     self._unparseAttrTypeandValue('changetype',changetype)
     for mod in modlist:
       if mod_len==2:
@@ -176,7 +176,7 @@
         mod_op,mod_type,mod_vals = mod
         self._unparseAttrTypeandValue(MOD_OP_STR[mod_op],mod_type)
       else:
-        raise ValueError,"Subsequent modlist item of wrong length"
+        raise ValueError("Subsequent modlist item of wrong length")
       if mod_vals:
         for mod_val in mod_vals:
           self._unparseAttrTypeandValue(mod_type,mod_val)
@@ -197,12 +197,12 @@
     # Start with line containing the distinguished name
     self._unparseAttrTypeandValue('dn',dn)
     # Dispatch to record type specific writers
-    if isinstance(record,types.DictType):
+    if isinstance(record,dict):
       self._unparseEntryRecord(record)
-    elif isinstance(record,types.ListType):
+    elif isinstance(record,list):
       self._unparseChangeRecord(record)
     else:
-      raise ValueError, "Argument record must be dictionary or list"
+      raise ValueError("Argument record must be dictionary or list")
     # Write empty line separating the records
     self._output_file.write(self._line_sep)
     # Count records written
@@ -331,9 +331,9 @@
       url = unfolded_line[colon_pos+2:].strip()
       attr_value = None
       if self._process_url_schemes:
-        u = urlparse.urlparse(url)
-        if self._process_url_schemes.has_key(u[0]):
-          attr_value = urllib.urlopen(url).read()
+        u = urllib.parse.urlparse(url)
+        if u[0] in self._process_url_schemes:
+          attr_value = urllib.request.urlopen(url).read()
     elif value_spec==':\r\n' or value_spec=='\n':
       attr_value = ''
     else:
@@ -358,25 +358,25 @@
         if attr_type=='dn':
           # attr type and value pair was DN of LDIF record
           if dn!=None:
-	    raise ValueError, 'Two lines starting with dn: in one record.'
+	    raise ValueError('Two lines starting with dn: in one record.')
           if not is_dn(attr_value):
-	    raise ValueError, 'No valid string-representation of distinguished name %s.' % (repr(attr_value))
+	    raise ValueError('No valid string-representation of distinguished name %s.' % (repr(attr_value)))
           dn = attr_value
         elif attr_type=='version' and dn is None:
           version = 1
         elif attr_type=='changetype':
           # attr type and value pair was DN of LDIF record
           if dn is None:
-	    raise ValueError, 'Read changetype: before getting valid dn: line.'
+	    raise ValueError('Read changetype: before getting valid dn: line.')
           if changetype!=None:
-	    raise ValueError, 'Two lines starting with changetype: in one record.'
-          if not valid_changetype_dict.has_key(attr_value):
-	    raise ValueError, 'changetype value %s is invalid.' % (repr(attr_value))
+	    raise ValueError('Two lines starting with changetype: in one record.')
+          if attr_value not in valid_changetype_dict:
+	    raise ValueError('changetype value %s is invalid.' % (repr(attr_value)))
           changetype = attr_value
         elif attr_value!=None and \
-             not self._ignored_attr_types.has_key(attr_type.lower()):
+             attr_type.lower() not in self._ignored_attr_types:
           # Add the attribute to the entry if not ignored attribute
-          if entry.has_key(attr_type):
+          if attr_type in entry:
             entry[attr_type].append(attr_value)
           else:
             entry[attr_type]=[attr_value]
--- a/fritzcall/src/nrzuname.py
+++ b/fritzcall/src/nrzuname.py
@@ -23,9 +23,9 @@
 		debugVal = what
 	def debug(message):
 		if debugVal:
-			print message
-
-import htmlentitydefs
+			print(message)
+
+import html.entities
 def html2unicode(in_html):
 #===============================================================================
 #	# sanity checks
@@ -55,9 +55,9 @@
 	for x in entities:
 		# debug("[Callhtml2utf8] mask: found %s" %repr(x.group(2)))
 		entitydict[x.group(1)] = x.group(2)
-	for key, name in entitydict.items():
+	for key, name in list(entitydict.items()):
 		try:
-			entitydict[key] = htmlentitydefs.name2codepoint[str(name)]
+			entitydict[key] = html.entities.name2codepoint[str(name)]
 		except KeyError:
 			debug("[Callhtml2utf8] KeyError " + key + "/" + name)
 
@@ -66,12 +66,12 @@
 	for x in entities:
 		# debug("[Callhtml2utf8] number: found %s" %x.group(1))
 		entitydict[x.group(1)] = x.group(2)
-	for key, codepoint in entitydict.items():
+	for key, codepoint in list(entitydict.items()):
 		try:
-			uml = unichr(int(codepoint))
+			uml = chr(int(codepoint))
 			debug("[nrzuname] html2utf8: replace %s with %s in %s" %(repr(key), repr(uml), repr(in_html[0:20]+'...')))
 			in_html = in_html.replace(key, uml)
-		except ValueError, e:
+		except ValueError as e:
 			debug("[nrzuname] html2utf8: ValueError " + repr(key) + ":" + repr(codepoint) + " (" + str(e) + ")")
 	return in_html
 
@@ -118,7 +118,7 @@
 	print(name)
 
 def simpleout(number, caller): #@UnusedVariable # pylint: disable-msg=W0613
-	print caller
+	print(caller)
 
 try:
 	from Tools.Directories import resolveFilename, SCOPE_PLUGINS
@@ -170,11 +170,11 @@
 			return
 
 		if self.number[:2] == "00":
-			if countries.has_key(self.number[:3]):	 #	e.g. USA
+			if self.number[:3] in countries:	 #	e.g. USA
 				self.countrycode = self.number[:3]
-			elif countries.has_key(self.number[:4]):
+			elif self.number[:4] in countries:
 				self.countrycode = self.number[:4]
-			elif countries.has_key(self.number[:5]):
+			elif self.number[:5] in countries:
 				self.countrycode = self.number[:5]
 			else:
 				debug("[ReverseLookupAndNotifier] Country cannot be reverse handled")
@@ -182,7 +182,7 @@
 				self.notifyAndReset()
 				return
 
-		if countries.has_key(self.countrycode):
+		if self.countrycode in countries:
 			debug("[ReverseLookupAndNotifier] Found website for reverse lookup")
 			self.websites = countries[self.countrycode]
 			self.nextWebsiteNo = 1
--- a/fritzcall/src/plugin.py
+++ b/fritzcall/src/plugin.py
@@ -43,11 +43,11 @@
 from twisted.protocols.basic import LineReceiver #@UnresolvedImport
 from twisted.web.client import getPage #@UnresolvedImport
 
-from urllib import urlencode 
+from urllib.parse import urlencode 
 import re, time, os, hashlib, traceback
 
-from nrzuname import ReverseLookupAndNotifier, html2unicode
-import FritzOutlookCSV, FritzLDIF
+from .nrzuname import ReverseLookupAndNotifier, html2unicode
+from . import FritzOutlookCSV, FritzLDIF
 from . import _, initDebug, debug #@UnresolvedImport # pylint: disable=E0611,F0401
 
 from enigma import getDesktop
@@ -131,18 +131,18 @@
 	mountedDevs = [(resolveFilename(SCOPE_CONFIG), _("Flash")),
 				   (resolveFilename(SCOPE_MEDIA, "cf"), _("Compact Flash")),
 				   (resolveFilename(SCOPE_MEDIA, "usb"), _("USB Device"))]
-	mountedDevs += map(lambda p: (p.mountpoint, (_(p.description) if p.description else "")), harddiskmanager.getMountedPartitions(True))
+	mountedDevs += [(p.mountpoint, (_(p.description) if p.description else "")) for p in harddiskmanager.getMountedPartitions(True)]
 	mediaDir = resolveFilename(SCOPE_MEDIA)
 	for p in os.listdir(mediaDir):
 		if os.path.join(mediaDir, p) not in [path[0] for path in mountedDevs]:
 			mountedDevs.append((os.path.join(mediaDir, p), _("Media directory")))
 	debug("[FritzCall] getMountedDevs1: %s" %repr(mountedDevs))
-	mountedDevs = filter(lambda path: os.path.isdir(path[0]) and os.access(path[0], os.W_OK|os.X_OK), mountedDevs)
+	mountedDevs = [path for path in mountedDevs if os.path.isdir(path[0]) and os.access(path[0], os.W_OK|os.X_OK)]
 	# put this after the write/executable check, that is far too slow...
 	netDir = resolveFilename(SCOPE_MEDIA, "net")
 	if os.path.isdir(netDir):
-		mountedDevs += map(lambda p: (os.path.join(netDir, p), _("Network mount")), os.listdir(netDir))
-	mountedDevs = map(handleMountpoint, mountedDevs)
+		mountedDevs += [(os.path.join(netDir, p), _("Network mount")) for p in os.listdir(netDir)]
+	mountedDevs = list(map(handleMountpoint, mountedDevs))
 	return mountedDevs
 config.plugins.FritzCall.phonebookLocation = ConfigSelection(choices=getMountedDevs())
 
@@ -200,8 +200,8 @@
 		return ""
 	
 	# debug('normNumer: ' + normNumber)
-	for i in reversed(range(min(10, len(number)))):
-		if avon.has_key(normNumber[:i]):
+	for i in reversed(list(range(min(10, len(number))))):
+		if normNumber[:i] in avon:
 			return '[' + avon[normNumber[:i]].strip() + ']'
 	return ""
 
@@ -247,7 +247,7 @@
 		debug("[FritzCall] initCbC: callbycallFileName does not exist?!?!")
 
 def stripCbCPrefix(number, countrycode):
-	if number and number[:2] != "00" and cbcInfos.has_key(countrycode):
+	if number and number[:2] != "00" and countrycode in cbcInfos:
 		for cbc in cbcInfos[countrycode]:
 			if len(cbc.getElementsByTagName("length"))<1 or len(cbc.getElementsByTagName("prefix"))<1:
 				debug("[FritzCall] stripCbCPrefix: entries for " + countrycode + " %s invalid")
@@ -757,13 +757,13 @@
 			
 		callListL = []
 		if config.plugins.FritzCall.filter.value and config.plugins.FritzCall.filterCallList.value:
-			filtermsns = map(lambda x: x.strip(), config.plugins.FritzCall.filtermsn.value.split(","))
+			filtermsns = [x.strip() for x in config.plugins.FritzCall.filtermsn.value.split(",")]
 			debug("[FritzCallFBF] _gotPageCalls: filtermsns %s" % (repr(filtermsns)))
 
 		# Typ;Datum;Name;Rufnummer;Nebenstelle;Eigene Rufnummer;Dauer
 		# 0  ;1	;2   ;3		;4		  ;5			   ;6
-		lines = map(lambda line: line.split(';'), lines)
-		lines = filter(lambda line: (len(line)==7 and (line[0]=="Typ" or self._callType == '.' or line[0] == self._callType)), lines)
+		lines = [line.split(';') for line in lines]
+		lines = [line for line in lines if (len(line)==7 and (line[0]=="Typ" or self._callType == '.' or line[0] == self._callType))]
 
 		for line in lines:
 			# debug("[FritzCallFBF] _gotPageCalls: line %s" % (line))
@@ -1637,7 +1637,7 @@
 		self._wlanActive = (wlanState[0] == '1')
 		self._mailboxActive = False
 		try:
-			if not self.has_key("FBFInfo"): # screen is closed already
+			if "FBFInfo" not in self: # screen is closed already
 				return
 
 			if boxInfo:
@@ -1716,7 +1716,7 @@
 					else:
 						self["FBFMailbox"].setText(str(tamActive[0]) + ' ' + _('mailboxes active') + ' ' + message)
 	
-			if fritzbox.info[FBF_dectActive] and dectActive and self.has_key("dect_inactive"):
+			if fritzbox.info[FBF_dectActive] and dectActive and "dect_inactive" in self:
 				self["dect_inactive"].hide()
 				self["dect_active"].show()
 				if dectActive == 0:
@@ -1930,7 +1930,7 @@
 			self["entries"].setIndex(1)
 
 	def updateStatus(self, text):
-		if self.has_key("statusbar"):
+		if "statusbar" in self:
 			self["statusbar"].setText(_("Getting calls from FRITZ!Box...") + ' ' + text)
 
 	def showEntry(self):
@@ -2198,7 +2198,7 @@
 					os.rename(phonebookFilename, phonebookFilename + ".bck")
 					fNew = open(phonebookFilename, 'w')
 					# Beware: strings in phonebook.phonebook are utf-8!
-					for (number, name) in self.phonebook.iteritems():
+					for (number, name) in self.phonebook.items():
 						# Beware: strings in PhoneBook.txt have to be in utf-8!
 						fNew.write(number + "#" + name.encode("utf-8"))
 					fNew.close()
@@ -2251,14 +2251,14 @@
 			if number[0] != '0':
 				number = prefix + number
 				# debug("[FritzCallPhonebook] search: added prefix: %s" %number)
-			elif number[:len(prefix)] == prefix and self.phonebook.has_key(number[len(prefix):]):
+			elif number[:len(prefix)] == prefix and number[len(prefix):] in self.phonebook:
 				# debug("[FritzCallPhonebook] search: same prefix")
 				name = self.phonebook[number[len(prefix):]]
 				# debug("[FritzCallPhonebook] search: result: %s" %name)
 		else:
 			prefix = ""
 				
-		if not name and self.phonebook.has_key(number):
+		if not name and number in self.phonebook:
 			name = self.phonebook[number]
 				
 		return name.replace(", ", "\n").strip()
@@ -2423,7 +2423,7 @@
 			debug("[FritzCallPhonebook] displayPhonebook/display")
 			self.sortlist = []
 			# Beware: strings in phonebook.phonebook are utf-8!
-			sortlistHelp = sorted((name.lower(), name, number) for (number, name) in phonebook.phonebook.iteritems())
+			sortlistHelp = sorted((name.lower(), name, number) for (number, name) in phonebook.phonebook.items())
 			for (low, name, number) in sortlistHelp:
 				if number == "01234567890":
 					continue
@@ -3413,7 +3413,7 @@
 	global fritz_call
 
 	# ouch, this is a hack
-	if kwargs.has_key("session"):
+	if "session" in kwargs:
 		global my_global_session
 		my_global_session = kwargs["session"]
 		return
--- a/fstabeditor/src/dirSelect.py
+++ b/fstabeditor/src/dirSelect.py
@@ -68,7 +68,7 @@
 		self.setPathName()
 
 	def updatePathName(self):
-		print self["filelist"].getFilename()
+		print(self["filelist"].getFilename())
 		try:
 			len(self["filelist"].getFilename())
 		except TypeError:
@@ -88,7 +88,7 @@
 			self.epath = self.CurrentDirectory + self["filelist"].getFilename()
 		else:
 			self.epath = self["filelist"].getFilename()
-		print self.epath
+		print(self.epath)
 		if len(self.epath) > 1 and self.epath.endswith('/'):
 			self.epath = self.epath[:-1]
 		self["ButtonGreentext"].setText(_("select:") + " " + self.epath)
--- a/fstabeditor/src/plugin.py
+++ b/fstabeditor/src/plugin.py
@@ -35,7 +35,7 @@
 from Screens.MessageBox import MessageBox
 from Screens.Screen import Screen
 from Tools.Directories import fileExists
-from dirSelect import dirSelectDlg
+from .dirSelect import dirSelectDlg
 from enigma import RT_HALIGN_LEFT, RT_HALIGN_RIGHT, eListboxPythonMultiContent, gFont
 import os
 
@@ -277,7 +277,7 @@
 	
 	def dirSelectDlgClosed(self, mountpoint):
 		#use print to see in crashlog what's been selected
-		print "mountpoint: ", mountpoint
+		print("mountpoint: ", mountpoint)
 		if mountpoint != False:
 			if self.selectedEntry == 1:
 				self.mountpoint.value = mountpoint
--- a/ftpbrowser/src/FTPBrowser.py
+++ b/ftpbrowser/src/FTPBrowser.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # for localized messages
 from . import _
@@ -17,15 +17,15 @@
 from Screens.MessageBox import MessageBox
 from Screens.ChoiceBox import ChoiceBox
 from Screens.InfoBarGenerics import InfoBarNotifications
-from FTPServerManager import FTPServerManager
-from FTPQueueManager import FTPQueueManager
-from NTIVirtualKeyBoard import NTIVirtualKeyBoard
+from .FTPServerManager import FTPServerManager
+from .FTPQueueManager import FTPQueueManager
+from .NTIVirtualKeyBoard import NTIVirtualKeyBoard
 
 # GUI (Components)
 from Components.ActionMap import ActionMap, HelpableActionMap
 from Components.FileList import FileList, FileEntryComponent, EXTENSIONS
 from Components.Sources.StaticText import StaticText
-from VariableProgressSource import VariableProgressSource
+from .VariableProgressSource import VariableProgressSource
 
 # FTP Client
 from twisted.internet import reactor, defer
--- a/ftpbrowser/src/FTPServerManager.py
+++ b/ftpbrowser/src/FTPServerManager.py
@@ -5,7 +5,7 @@
 from Components.ConfigList import ConfigListScreen
 from Screens.MessageBox import MessageBox
 from Screens.Screen import Screen
-from NTIVirtualKeyBoard import NTIVirtualKeyBoard
+from .NTIVirtualKeyBoard import NTIVirtualKeyBoard
 
 # GUI (Summary)
 from Screens.Setup import SetupSummary
@@ -21,7 +21,7 @@
 
 # For new and improved _parse
 try:
-	from urlparse import urlparse, urlunparse
+	from urllib.parse import urlparse, urlunparse
 except ImportError as ie:
 	from urllib.parse import urlparse, urlunparse
 
--- a/ftpbrowser/src/plugin.py
+++ b/ftpbrowser/src/plugin.py
@@ -28,8 +28,8 @@
 
 del append, i
 
-from FTPBrowser import FTPBrowser
-from FTPServerManager import ftpserverFromURI
+from .FTPBrowser import FTPBrowser
+from .FTPServerManager import ftpserverFromURI
 
 ftpbrowser = None
 
--- a/genmetaindex.py
+++ b/genmetaindex.py
@@ -9,7 +9,7 @@
 	try:
 		p.parse(file)
 	except Exception as e:
-		print >> sys.stderr, "Error while parsing", file
+		print("Error while parsing", file, file=sys.stderr)
 		raise(e)
 	
 	package = Element("package")
--- a/googlemaps/src/KMLlib.py
+++ b/googlemaps/src/KMLlib.py
@@ -1,4 +1,4 @@
-from globalmaptiles import GlobalMercator
+from .globalmaptiles import GlobalMercator
 from xml.dom.minidom import parse
 from os import listdir
 
@@ -50,8 +50,8 @@
             try: # test if we can handle this coords
                 point.getTile(15)# 15 is just a zoomlevel in the middle :)
                 list.append(point)
-            except ValueError,e:
-                print "Import Error: ",point.name,e
+            except ValueError as e:
+                print("Import Error: ",point.name,e)
         return list
 
 class RootFolder:
@@ -63,7 +63,7 @@
         return KmlFolder(self.parseFile(filepath))
 
     def parseFile(self,filepath):
-        print "parsing ",filepath
+        print("parsing ",filepath)
         return parse(filepath)
 
     def getFiles(self,path):
--- a/googlemaps/src/WebPixmap.py
+++ b/googlemaps/src/WebPixmap.py
@@ -1,7 +1,7 @@
 from enigma import ePicLoad, ePixmap, getDesktop
 from Components.Pixmap import Pixmap
 from twisted.web.client import downloadPage
-from urllib import quote_plus
+from urllib.parse import quote_plus
 from os import remove as os_remove, mkdir as os_mkdir
 from os.path import isdir as os_path_isdir, isfile as os_isfile
 
@@ -36,7 +36,7 @@
 	def load(self, url = None):
 		tmpfile = ''.join((self.cachedir, quote_plus(url), '.jpg'))
 		if os_path_isdir(self.cachedir) is False:
-			print "cachedir not existing, creating it"
+			print("cachedir not existing, creating it")
 			os_mkdir(self.cachedir)
 		if os_isfile(tmpfile):
 			self.tmpfile = tmpfile
@@ -62,9 +62,9 @@
 		self.picload.startDecode(self.tmpfile)
 
 	def onLoadFailed(self,error):
-		print "WebPixmap:onLoadFAILED", error
+		print("WebPixmap:onLoadFAILED", error)
 		if self.default and self.instance:
-			print "showing 404", self.default
+			print("showing 404", self.default)
 			self.picload.startDecode(self.default)
 		if os_isfile(self.tmpfile):
 			os_remove(self.tmpfile)
--- a/googlemaps/src/plugin.py
+++ b/googlemaps/src/plugin.py
@@ -1,4 +1,4 @@
-import urllib
+import urllib.request, urllib.parse, urllib.error
 from twisted.web.client import getPage
 from xml.dom.minidom import parseString
 
@@ -38,11 +38,11 @@
 not_found_pic_overlay = "404_transparent.png"
 
 def applySkinVars(skin,dict):
-    for key in dict.keys():
+    for key in list(dict.keys()):
         try:
             skin = skin.replace('{'+key+'}',dict[key])
-        except Exception,e:
-            print e,"@key=",key
+        except Exception as e:
+            print(e,"@key=",key)
     return skin
 
 def getURL(x,y,z):
@@ -95,13 +95,13 @@
         }, -2)
 
     def save(self):
-        print "saving"
+        print("saving")
         for x in self["config"].list:
             x[1].save()
         self.close(True)
 
     def cancel(self):
-        print "cancel"
+        print("cancel")
         for x in self["config"].list:
             x[1].cancel()
         self.close(False)
@@ -293,7 +293,7 @@
         self["placeslist"].setList(list)
 
     def openFolderRoot(self,name,filepath):
-        print "openFolderRoot",name,filepath
+        print("openFolderRoot",name,filepath)
         root = RootFolder()
         folderx = root.getFolderFromFile(filepath)
         list = []
@@ -310,7 +310,7 @@
         self["placeslist"].setList(list)
 
     def openFolder(self,name,foldery):
-        print  "open Folder",name,foldery
+        print("open Folder",name,foldery)
         list = []
         if foldery.parent is None:
             l = lambda name,folder: self.buildMenuRoot()
@@ -408,7 +408,7 @@
 
     #################
     def setNewXYZ(self,x,y,z):
-        print x,y,z
+        print(x,y,z)
         if z<0 or z>=30:
             return
         self.x = x
@@ -587,7 +587,7 @@
         self.do_search_timer.stop()
         config.plugins.GoogleMaps.last_searchkey.value = searchkey
         self["infotext"].setText("searching with '%s' ..."%(searchkey))
-        s = urllib.quote(searchkey)
+        s = urllib.parse.quote(searchkey)
         url = "http://maps.google.com/maps/geo?q=%s&output=xml&key=abcdefg&oe=utf8"%s
         cb = lambda result: self.onLoadFinished(searchkey,result)
         getPage(url).addCallback(cb).addErrback(self.onLoadFailed)
@@ -608,7 +608,7 @@
             self["infotext"].setText("nothing found with '%s'"%(searchkey))
 
     def onLoadFailed(self,reason):
-        print reason
+        print(reason)
         self["infotext"].setText(str(reason))
 
 ##################################
--- a/growlee/src/GNTP.py
+++ b/growlee/src/GNTP.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from twisted.internet.protocol import Protocol, ReconnectingClientFactory, ServerFactory
 from twisted.internet.defer import Deferred
@@ -15,7 +15,7 @@
 	from Screens.MessageBox import MessageBox
 	from Tools import Notifications
 
-	from GrowleeConnection import emergencyDisable
+	from .GrowleeConnection import emergencyDisable
 	from . import NOTIFICATIONID
 except ImportError:
 	def emergencyDisable():
@@ -26,9 +26,9 @@
 
 try:
 	dict.iteritems
-	iteritems = lambda d: d.iteritems()
+	iteritems = lambda d: iter(d.items())
 except AttributeError:
-	iteritems = lambda d: d.items()
+	iteritems = lambda d: list(d.items())
 
 class GNTPPacket:
 	version = '1.0'
@@ -37,17 +37,17 @@
 	encryptionAlgorithm = None
 	def encode(self):
 		# TODO: add encryption support
-		message = u'GNTP/%s %s ' % (self.version, self.messageType)
+		message = 'GNTP/%s %s ' % (self.version, self.messageType)
 
 		if self.encryptionAlgorithm is None:
-			message += u'NONE'
+			message += 'NONE'
 		else:
-			message += u'%s:%s' % (self.encryptionAlgorithm, self.ivValue)
+			message += '%s:%s' % (self.encryptionAlgorithm, self.ivValue)
 
 		if self.hashAlgorithm is not None:
-			message += u' %s:%s.%s' % (self.hashAlgorithm, self.keyHash, self.salt)
-
-		message += u'\r\n'
+			message += ' %s:%s.%s' % (self.hashAlgorithm, self.keyHash, self.salt)
+
+		message += '\r\n'
 		return message
 
 	def set_password(self, password, hashAlgorithm='MD5', encryptionAlgorithm=None):
@@ -102,14 +102,14 @@
 	def encode(self):
 		assert self.notifications, "At least one notification needs to be registered"
 		base = GNTPPacket.encode(self)
-		base += u"Application-Name: %s\r\n" % self.applicationName
-		base += u"Notifications-Count: %d\r\n" % len(self.notifications)
+		base += "Application-Name: %s\r\n" % self.applicationName
+		base += "Notifications-Count: %d\r\n" % len(self.notifications)
 
 		for note in self.notifications:
-			base += u'\r\n'
+			base += '\r\n'
 			for key, value in iteritems(note):
-				base += u'%s: %s\r\n' % (key, value)
-		base += u'\r\n'
+				base += '%s: %s\r\n' % (key, value)
+		base += '\r\n'
 		return base.encode('utf8', 'replace')
 
 class GNTPNotice(GNTPPacket):
@@ -126,14 +126,14 @@
 
 	def encode(self):
 		base = GNTPPacket.encode(self)
-		base += u"Application-Name: %s\r\n" % self.applicationName
-		base += u"Notification-Name: %s\r\n" % self.name
-		base += u"Notification-Text: %s\r\n" % self.text.replace('\r\n', '\n') # NOTE: just in case replace CRLF by LF so we don't break protocol
-		base += u"Notification-Title: %s\r\n" % self.title
-		base += u"Notification-Sticky: %s\r\n" % self.sticky
-		base += u"Notification-Priority: %s\r\n" % self.priority
-		base += u"Notifications-Count: 1\r\n"
-		base += u'\r\n'
+		base += "Application-Name: %s\r\n" % self.applicationName
+		base += "Notification-Name: %s\r\n" % self.name
+		base += "Notification-Text: %s\r\n" % self.text.replace('\r\n', '\n') # NOTE: just in case replace CRLF by LF so we don't break protocol
+		base += "Notification-Title: %s\r\n" % self.title
+		base += "Notification-Sticky: %s\r\n" % self.sticky
+		base += "Notification-Priority: %s\r\n" % self.priority
+		base += "Notifications-Count: 1\r\n"
+		base += '\r\n'
 		return base.encode('utf8', 'replace')
 
 class GNTP(Protocol):
--- a/growlee/src/GrowlTalk.py
+++ b/growlee/src/GrowlTalk.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from twisted.internet.protocol import DatagramProtocol
 from twisted.internet import reactor
@@ -8,7 +8,7 @@
 from Screens.MessageBox import MessageBox
 from Tools import Notifications
 
-from GrowleeConnection import emergencyDisable
+from .GrowleeConnection import emergencyDisable
 from . import NOTIFICATIONID
 
 GROWL_UDP_PORT = 9887
--- a/growlee/src/GrowleeConnection.py
+++ b/growlee/src/GrowleeConnection.py
@@ -66,19 +66,19 @@
 
 			proto = host.protocol.value
 			if proto == "prowl":
-				from Prowl import ProwlAPI
+				from .Prowl import ProwlAPI
 				connection = ProwlAPI(host)
 			elif proto == "growl":
-				from GrowlTalk import GrowlTalkAbstraction
+				from .GrowlTalk import GrowlTalkAbstraction
 				connection = GrowlTalkAbstraction(host)
 			elif proto == "gntp":
-				from GNTP import GNTPAbstraction
+				from .GNTP import GNTPAbstraction
 				connection = GNTPAbstraction(host)
 			elif proto == "snarl":
-				from SNP import SnarlNetworkProtocolAbstraction
+				from .SNP import SnarlNetworkProtocolAbstraction
 				connection = SnarlNetworkProtocolAbstraction(host)
 			else: # proto == "syslog":
-				from Syslog import SyslogAbstraction
+				from .Syslog import SyslogAbstraction
 				connection = SyslogAbstraction(host)
 
 			self.connections.append((connection, host))
--- a/growlee/src/Prowl.py
+++ b/growlee/src/Prowl.py
@@ -2,11 +2,11 @@
 from twisted.internet.defer import Deferred
 from twisted.internet import reactor
 try:
-	from urllib import urlencode
+	from urllib.parse import urlencode
 except ImportError as ie:
 	from urllib.parse import urlencode
 
-from GrowleeConnection import emergencyDisable
+from .GrowleeConnection import emergencyDisable
 from . import NOTIFICATIONID
 
 class ProwlAPI:
--- a/growlee/src/SNP.py
+++ b/growlee/src/SNP.py
@@ -6,7 +6,7 @@
 from Screens.MessageBox import MessageBox
 from Tools import Notifications
 
-from GrowleeConnection import emergencyDisable
+from .GrowleeConnection import emergencyDisable
 from . import NOTIFICATIONID
 
 SNP_TCP_PORT = 9887
--- a/growlee/src/Syslog.py
+++ b/growlee/src/Syslog.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from twisted.internet.protocol import DatagramProtocol
 from twisted.internet import reactor
@@ -9,7 +9,7 @@
 from Screens.MessageBox import MessageBox
 from Tools import Notifications
 
-from GrowleeConnection import emergencyDisable
+from .GrowleeConnection import emergencyDisable
 from . import NOTIFICATIONID
 
 SYSLOG_UDP_PORT = 514
@@ -29,9 +29,9 @@
 
 try:
 	dict.iteritems
-	reverse = lambda map: dict((v,k) for k,v in map.iteritems())
+	reverse = lambda map: dict((v,k) for k,v in map.items())
 except AttributeError:
-	reverse = lambda map: dict((v,k) for k,v in map.items())
+	reverse = lambda map: dict((v,k) for k,v in list(map.items()))
 
 SEVERITYMAP = {
 	MessageBox.TYPE_YESNO: SEVERITY['debug'],
--- a/growlee/src/plugin.py
+++ b/growlee/src/plugin.py
@@ -11,7 +11,7 @@
 from Components.ConfigList import ConfigListScreen
 from Components.Sources.StaticText import StaticText
 
-from GrowleeConnection import gotNotification, emergencyDisable, growleeConnection
+from .GrowleeConnection import gotNotification, emergencyDisable, growleeConnection
 
 from . import NOTIFICATIONID
 
--- a/hddmanager/src/plugin.py
+++ b/hddmanager/src/plugin.py
@@ -37,8 +37,8 @@
 					des = str(size / 1024) + "MB"
 				device.append(parts[3] + "  " + des)
 		f.close()
-	except IOError, ex:
-		print "[HddManager] Failed to open /proc/partitions", ex
+	except IOError as ex:
+		print("[HddManager] Failed to open /proc/partitions", ex)
 	return device
 
 def ReadMounts():
@@ -47,8 +47,8 @@
 		f = open("/proc/mounts", "r")
 		result = [line.strip().split(' ') for line in f]
 		f.close()
-	except IOError, ex:
-		print "[HddManager] Failed to open /proc/mounts", ex
+	except IOError as ex:
+		print("[HddManager] Failed to open /proc/mounts", ex)
 	for item in result:
 		item[1] = item[1].replace('\\040', ' ')
 	return result
@@ -79,9 +79,9 @@
 			if not os.path.exists(dir):
 				try:
 					os.mkdir(dir)
-					print "[HddManager] mkdir", dir
+					print("[HddManager] mkdir", dir)
 				except:
-					print "[HddManager] Failed to mkdir", dir
+					print("[HddManager] Failed to mkdir", dir)
 		if os.path.exists("/bin/ntfs-3g"):
 			self.Console.ePopen("sfdisk -l /dev/sd? | grep NTFS", self.CheckNtfs, [device, dirpath])
 		else:
@@ -102,7 +102,7 @@
 
 	def StartMount(self, cmd):
 		self.Console.ePopen(cmd)
-		print "[HddManager]", cmd
+		print("[HddManager]", cmd)
 
 MountDeviceInstance = None
 
@@ -162,8 +162,8 @@
 						if device.startswith(line[5:9]):
 							self.swap = device
 			f.close()
-		except IOError, ex:
-			print "[HddManager] Failed to open /proc/swaps", ex
+		except IOError as ex:
+			print("[HddManager] Failed to open /proc/swaps", ex)
 		self.CreateList()
 
 	def CreateList(self):
--- a/httpproxy/src/plugin.py
+++ b/httpproxy/src/plugin.py
@@ -59,13 +59,13 @@
         }, -2)
 
     def save(self):
-        print "saving"
+        print("saving")
         for x in self["config"].list:
             x[1].save()
         self.close(True,self.session)
 
     def cancel(self):
-        print "cancel"
+        print("cancel")
         for x in self["config"].list:
             x[1].cancel()
         self.close(False,self.session)
@@ -115,7 +115,7 @@
         global LOG_TO_STDOUT
         if LOG_TO_STDOUT:
             try:
-                print "[PROXY]",self.client.host,self.uri,status
+                print("[PROXY]",self.client.host,self.uri,status)
             except Exception:
                 ''' now i am quite careful with logging webstuff with E2 '''
                 pass
@@ -139,11 +139,11 @@
                 extip = iNetwork.ifaces[adaptername]['ip']
                 if iNetwork.ifaces[adaptername]['up'] is True:
                     extip = "%i.%i.%i.%i" % (extip[0], extip[1], extip[2], extip[3])
-                    print "starting proxy on ",extip,":", config.plugins.httpproxy.port.value
+                    print("starting proxy on ",extip,":", config.plugins.httpproxy.port.value)
                     reactor.listenTCP(int(config.plugins.httpproxy.port.value), ProxyFactory(),interface=extip)
-        except Exception,e:
-            print "starting the http proxy failed!"
-            print e
+        except Exception as e:
+            print("starting the http proxy failed!")
+            print(e)
 
 
 def Plugins(**kwargs):
--- a/imdb/src/plugin.py
+++ b/imdb/src/plugin.py
@@ -1,5 +1,5 @@
 # -*- coding: UTF-8 -*-
-from __future__ import print_function
+
 from Plugins.Plugin import PluginDescriptor
 from Tools.Downloader import downloadWithProgress
 from enigma import ePicLoad, eServiceReference
@@ -20,17 +20,17 @@
 from Components.config import config, ConfigSubsection, ConfigYesNo
 from Tools.Directories import fileExists, resolveFilename, SCOPE_PLUGINS, SCOPE_SKIN_IMAGE
 from os import environ as os_environ
-from NTIVirtualKeyBoard import NTIVirtualKeyBoard
+from .NTIVirtualKeyBoard import NTIVirtualKeyBoard
 import re
 try:
-	import htmlentitydefs
-	from urllib import quote_plus
-	iteritems = lambda d: d.iteritems()
+	import html.entities
+	from urllib.parse import quote_plus
+	iteritems = lambda d: iter(d.items())
 except ImportError as ie:
 	from html import entities as htmlentitydefs
 	from urllib.parse import quote_plus
-	iteritems = lambda d: d.items()
-	unichr = chr
+	iteritems = lambda d: list(d.items())
+	chr = chr
 import gettext
 
 config.plugins.imdb = ConfigSubsection()
@@ -422,7 +422,7 @@
 		for x in entities:
 			key = x.group(0)
 			if key not in entitydict:
-				entitydict[key] = htmlentitydefs.name2codepoint[x.group(1)]
+				entitydict[key] = html.entities.name2codepoint[x.group(1)]
 
 		entities = re.finditer('&#x([0-9A-Fa-f]{2,2}?);', in_html)
 		for x in entities:
@@ -438,12 +438,12 @@
 
 		if re.search("charset=utf-8", in_html):
 			for key, codepoint in iteritems(entitydict):
-				in_html = in_html.replace(key, unichr(int(codepoint)))
+				in_html = in_html.replace(key, chr(int(codepoint)))
 			self.inhtml = in_html.encode('utf8')
 			return
 
 		for key, codepoint in iteritems(entitydict):
-			in_html = in_html.replace(key, unichr(int(codepoint)).encode('latin-1', 'ignore'))
+			in_html = in_html.replace(key, chr(int(codepoint)).encode('latin-1', 'ignore'))
 
 		self.inhtml = in_html.decode('latin-1').encode('utf8')
 
--- a/infobartunerstate/src/IBTSConfiguration.py
+++ b/infobartunerstate/src/IBTSConfiguration.py
@@ -30,7 +30,7 @@
 from Screens.Setup import SetupSummary
 
 # Plugin internal
-from InfoBarTunerState import InfoBarTunerState, addExtension, removeExtension, overwriteInfoBar, recoverInfoBar
+from .InfoBarTunerState import InfoBarTunerState, addExtension, removeExtension, overwriteInfoBar, recoverInfoBar
 
 
 #######################################################
@@ -97,7 +97,7 @@
 			(  separator                                              , config.infobartunerstate.about ),
 		]
 		
-		for i, configinfobartunerstatefield in enumerate( config.infobartunerstate.fields.dict().itervalues() ):
+		for i, configinfobartunerstatefield in enumerate( config.infobartunerstate.fields.dict().values() ):
 			self.config.append(
 			(  _("Field %d content") % (i)                            , configinfobartunerstatefield )
 			)
@@ -140,7 +140,7 @@
 		fieldicon = []
 		fieldprogress = []
 		text = ""
-		for i, c in enumerate( config.infobartunerstate.fields.dict().itervalues() ):
+		for i, c in enumerate( config.infobartunerstate.fields.dict().values() ):
 			if c.value == "TypeIcon":
 				fieldicon.append( i )
 			if c.value == "TimerProgressGraphical":
--- a/infobartunerstate/src/InfoBarTunerState.py
+++ b/infobartunerstate/src/InfoBarTunerState.py
@@ -27,7 +27,7 @@
 
 from collections import defaultdict
 from operator import attrgetter, itemgetter
-from itertools import izip_longest as zip_longest # py3k
+from itertools import zip_longest as zip_longest # py3k
 
 # Plugin
 from Plugins.Plugin import PluginDescriptor
@@ -57,7 +57,7 @@
 from skin import parseColor, parseFont
 
 # Plugin internal
-from netstat import netstat
+from .netstat import netstat
 
 
 # Extenal plugins: WebInterface
@@ -73,11 +73,11 @@
 
 
 # Type Enum
-Record, Stream, Finished, INFO = range( 4 )
+Record, Stream, Finished, INFO = list(range( 4))
 
 
 # Constants
-INFINITY =  u"\u221E".encode("utf-8")
+INFINITY =  "\u221E".encode("utf-8")
 
 
 #######################################################
@@ -376,7 +376,7 @@
 				try:
 					host = ip and socket.gethostbyaddr( ip )
 					client = host and host[0].split('.')[0]
-				except socket.herror, x:
+				except socket.herror as x:
 					pass
 				
 				number = service_ref and getNumber(service_ref.ref)
@@ -465,7 +465,7 @@
 			#  if entry reached timeout
 			#  if number of entries is reached
 			numberfinished = 0
-			for id, win in sorted( self.entries.items(), key=lambda x: (x[1].end), reverse=True ):
+			for id, win in sorted( list(self.entries.items()), key=lambda x: (x[1].end), reverse=True ):
 				if win.type == Finished:
 					numberfinished += 1
 				if win.toberemoved == True \
@@ -477,7 +477,7 @@
 			# Update windows
 			# Dynamic column resizing and repositioning
 			widths = []
-			for id, win in self.entries.items():
+			for id, win in list(self.entries.items()):
 				if win.type == Record:
 					#TODO Avolid blocking - avoid using getTimer to update the timer times use timer.time_changed if possible
 					timer = getTimer( id )
@@ -557,7 +557,7 @@
 					win.update()
 				
 				# Calculate field width
-				widths = map( lambda (w1, w2): max( w1, w2 ), zip_longest( widths, win.widths ) )
+				widths = [max( w1_w2[0], w1_w2[1] ) for w1_w2 in zip_longest( widths, win.widths )]
 			
 			# Calculate field spacing
 			spacing = self.spacing + int(config.infobartunerstate.offset_spacing.value)
@@ -569,7 +569,7 @@
 			height = self.height
 			
 			# Resize, move and show windows
-			for win in sorted( self.entries.itervalues(), key=lambda x: (x.type, x.timeleft) ):
+			for win in sorted( iter(self.entries.values()), key=lambda x: (x.type, x.timeleft) ):
 			#for pos, win in enumerate( sorted( self.entries.itervalues(), key=lambda x: (x.type, x.timeleft) ) ):
 				win.reorder( widths )
 				win.move( posx, posy )
@@ -583,7 +583,7 @@
 		self.hideTimer.start( 10, True )
 
 	def tunerHide(self):
-		for win in self.entries.itervalues():
+		for win in self.entries.values():
 			win.hide()
 
 	def close(self):
@@ -592,7 +592,7 @@
 		self.unbindInfoBar()
 		self.removeEvents()
 		self.hide()
-		for id, win in self.entries.items():
+		for id, win in list(self.entries.items()):
 			self.session.deleteDialog(win)
 			del self.entries[id]
 		from Plugins.Extensions.InfoBarTunerState.plugin import gInfoBarTunerState
@@ -615,7 +615,7 @@
 		self["Type"] = MultiPixmap()
 		self["Progress"] = ProgressBar()
 		
-		for i in xrange( len( config.infobartunerstate.fields.dict() ) ):
+		for i in range( len( config.infobartunerstate.fields.dict() ) ):
 			self[ "Field" + str(i) ] = Label()
 		
 		self.padding = 0
@@ -695,7 +695,7 @@
 		self["Progress"].hide()
 		
 		height = self.instance.size().height()
-		for i, c in enumerate( config.infobartunerstate.fields.dict().itervalues() ):
+		for i, c in enumerate( config.infobartunerstate.fields.dict().values() ):
 			field = "Field"+str(i)
 			
 			if field == "Field0":
@@ -852,7 +852,7 @@
 		self["Type"].hide()
 		self["Progress"].hide()
 		
-		for i, c in enumerate( config.infobartunerstate.fields.dict().itervalues() ):
+		for i, c in enumerate( config.infobartunerstate.fields.dict().values() ):
 			field = "Field"+str(i)
 			content = c.value
 			text = ""
--- a/infobartunerstate/src/netstat.py
+++ b/infobartunerstate/src/netstat.py
@@ -54,7 +54,7 @@
 	To get pid of all network process running on system, you must run this script
 	as superuser
 	'''
-	getstate = [key for key, value in STATE.iteritems() if value == getstate]
+	getstate = [key for key, value in STATE.items() if value == getstate]
 	if getstate: getstate = getstate[0]
 	
 	content = _load()
--- a/infobartunerstate/src/plugin.py
+++ b/infobartunerstate/src/plugin.py
@@ -29,8 +29,8 @@
 from Screens.MessageBox import MessageBox
 
 # Plugin internal
-from IBTSConfiguration import InfoBarTunerStateConfiguration
-from InfoBarTunerState import InfoBarTunerState, TunerStateInfo
+from .IBTSConfiguration import InfoBarTunerStateConfiguration
+from .InfoBarTunerState import InfoBarTunerState, TunerStateInfo
 
 
 # Contants
@@ -160,8 +160,8 @@
 	# Display next x timers also if deactivated
 	try:
 		session.open(InfoBarTunerStateConfiguration)
-	except Exception, e:
-		print "InfoBarTunerStateMenu exception " + str(e)
+	except Exception as e:
+		print("InfoBarTunerStateMenu exception " + str(e))
 
 
 #######################################################
@@ -171,7 +171,7 @@
 	#print str(reason)
 	#print str(kwargs)
 	if reason == 0: # start
-		if kwargs.has_key("session"):
+		if "session" in kwargs:
 			if config.infobartunerstate.enabled.value:
 				global gInfoBarTunerState
 				session = kwargs["session"]
--- a/kiddytimer/src/HelpableNumberActionMap.py
+++ b/kiddytimer/src/HelpableNumberActionMap.py
@@ -5,7 +5,7 @@
     It does not have any code, just inherits the init-method from HelpableActionMap and the action from the NumberActionMap"""
     def action(self, contexts, action):
         numbers = ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9")
-        if (action in numbers and self.actions.has_key(action)):
+        if (action in numbers and action in self.actions):
             res = self.actions[action](int(action))
             if res is not None:
                 return res
--- a/kiddytimer/src/KTglob.py
+++ b/kiddytimer/src/KTglob.py
@@ -1,4 +1,4 @@
-from __init__ import _
+from .__init__ import _
 from Components.config import config
 import time
 
--- a/kiddytimer/src/KTmain.py
+++ b/kiddytimer/src/KTmain.py
@@ -1,6 +1,6 @@
 from Components.Label import Label
 from Components.ProgressBar import ProgressBar
-from KTMultiPixmap import KTmultiPixmap
+from .KTMultiPixmap import KTmultiPixmap
 from Components.config import config, configfile
 from Screens.ChoiceBox import ChoiceBox
 from Screens.InputBox import PinInput
@@ -13,8 +13,8 @@
 from Tools.Directories import resolveFilename, SCOPE_CONFIG
 from enigma import ePoint, eTimer, eDVBLocalTimeHandler
 
-from __init__ import _
-import KTglob
+from .__init__ import _
+from . import KTglob
 import NavigationInstance
 import time
 
@@ -166,7 +166,7 @@
         self.dialog = None
                 
     def resetTimer(self,**kwargs):
-        if "setTime" in kwargs.keys():
+        if "setTime" in list(kwargs.keys()):
             self.setCurrentDayTime(kwargs["setTime"])
         else:            
             self.setCurrentDayTime()
@@ -198,14 +198,14 @@
             iMonitorStart += 86400
 
         iObserveTimerStep = (iMonitorStart - iPluginStart)*1000 + 1000
-        print "[KiddyTimer] setting plugin idle for ms=", iObserveTimerStep
+        print("[KiddyTimer] setting plugin idle for ms=", iObserveTimerStep)
         self.observeTimer.start(iObserveTimerStep, False)
         
     def stopObserve(self):
         self.observeTimer.stop()
     
     def observeTime(self):
-        print "[KiddyTimer] Observer checking if plugin has to run"
+        print("[KiddyTimer] Observer checking if plugin has to run")
         if (self.timerHasToRun()):
             self.stopObserve()
             self.startTimer()
--- a/kiddytimer/src/KTpositioner.py
+++ b/kiddytimer/src/KTpositioner.py
@@ -2,11 +2,11 @@
 from Components.config import config
 from Components.Label import Label
 from Components.ProgressBar import ProgressBar
-from KTMultiPixmap import KTmultiPixmap
-from MovableScreen import MovableScreen
+from .KTMultiPixmap import KTmultiPixmap
+from .MovableScreen import MovableScreen
 from Screens.Screen import Screen
-from __init__ import _
-import KTglob
+from .__init__ import _
+from . import KTglob
 
 class KiddyTimerPositioner(Screen, MovableScreen):
     def __init__(self, session):
--- a/kiddytimer/src/KTsetup.py
+++ b/kiddytimer/src/KTsetup.py
@@ -4,16 +4,16 @@
 from Components.Label import Label
 from Components.ProgressBar import ProgressBar
 from Components.config import config, configfile, getConfigListEntry
-from KTmain import kiddyTimer
-from KTMultiPixmap import KTmultiPixmap
-from MovableScreen import MovableScreen
+from .KTmain import kiddyTimer
+from .KTMultiPixmap import KTmultiPixmap
+from .MovableScreen import MovableScreen
 from Screens.InputBox import PinInput
 from Screens.MessageBox import MessageBox
 from Screens.ParentalControlSetup import ProtectedScreen
 from Screens.Screen import Screen
 from Tools import Notifications
-from __init__ import _
-import KTglob
+from .__init__ import _
+from . import KTglob
 import time
 
 class KiddyTimerSetup(ConfigListScreen, Screen, ProtectedScreen):
--- a/kiddytimer/src/MovableScreen.py
+++ b/kiddytimer/src/MovableScreen.py
@@ -1,6 +1,6 @@
-from HelpableNumberActionMap import HelpableNumberActionMap
+from .HelpableNumberActionMap import HelpableNumberActionMap
 from Components.config import config
-from __init__ import _
+from .__init__ import _
 from enigma import ePoint, eTimer, getDesktop
 
 class MovableScreen():
--- a/kiddytimer/src/__init__.py
+++ b/kiddytimer/src/__init__.py
@@ -11,7 +11,7 @@
 def _(txt):
     t = gettext.dgettext(PluginLanguageDomain, txt)
     if t == txt:
-        print "[" + PluginLanguageDomain + "] fallback to default translation for ", txt
+        print("[" + PluginLanguageDomain + "] fallback to default translation for ", txt)
         t = gettext.gettext(txt)
     return t
 
--- a/kiddytimer/src/plugin.py
+++ b/kiddytimer/src/plugin.py
@@ -1,12 +1,12 @@
 from Components.ActionMap import ActionMap, NumberActionMap
 from Components.config import config, ConfigInteger, ConfigSubsection, ConfigSelection, \
     ConfigSubList, ConfigText, ConfigYesNo, ConfigDateTime, ConfigClock, ConfigPIN
-from KTmain import kiddyTimer
-from KTsetup import KiddyTimerSetup
+from .KTmain import kiddyTimer
+from .KTsetup import KiddyTimerSetup
 from Plugins.Plugin import PluginDescriptor
 from Screens.MessageBox import MessageBox
-from __init__ import _
-import KTglob
+from .__init__ import _
+from . import KTglob
 import time
 
 config.plugins.KiddyTimer = ConfigSubsection()
--- a/lastfm/src/LastFM.py
+++ b/lastfm/src/LastFM.py
@@ -1,4 +1,4 @@
-from urllib import unquote_plus
+from urllib.parse import unquote_plus
 from twisted.web.client import getPage
 from md5 import md5 # to encode password
 from string import split, rstrip
@@ -91,7 +91,7 @@
 
     def connectCB(self,data):
         self.info = self._parselines(data)
-        if self.info.has_key("session"):
+        if "session" in self.info:
             self.lastfmsession = self.info["session"]
             if self.lastfmsession.startswith("FAILED"):
                 self.onConnectFailed(self.info["msg"])
@@ -118,11 +118,11 @@
                 except UnicodeDecodeError:
                     res[x[0]] = "unicodeproblem"
             elif x != [""]:
-                print "(urk?", x, ")"
+                print("(urk?", x, ")")
         return res
 
     def loadPlaylist(self):
-        print "LOADING PLAYLIST"
+        print("LOADING PLAYLIST")
         if self.state is not True:
             self.onCommandFailed("not logged in")
         else:
@@ -146,19 +146,19 @@
         return "lastfm://user/%s/loved"%username
     
     def getSimilarArtistsURL(self,artist=None):
-        if artist is None and self.metadata.has_key('artist'):
+        if artist is None and 'artist' in self.metadata:
             return "lastfm://artist/%s/similarartists"%self.metadata['artist'].replace(" ","%20")
         else:
             return "lastfm://artist/%s/similarartists"%artist.replace(" ","%20")
 
     def getArtistsLikedByFans(self,artist=None):
-        if artist is None and self.metadata.has_key('artist'):
+        if artist is None and 'artist' in self.metadata:
             return "lastfm://artist/%s/fans"%self.metadata['artist'].replace(" ","%20")
         else:
             return "lastfm://artist/%s/fans"%artist.replace(" ","%20")
     
     def getArtistGroup(self,artist=None):
-        if artist is None and self.metadata.has_key('artist'):
+        if artist is None and 'artist' in self.metadata:
             return "lastfm://group/%s"%self.metadata['artist'].replace(" ","%20")
         else:
             return "lastfm://group/%s"%artist.replace(" ","%20")
@@ -247,7 +247,7 @@
                 nodex['url'] =  node.getAttribute("url").encode("utf-8")
                 data.append(nodex)
             self.onGlobalTagsLoaded(data)
-        except xml.parsers.expat.ExpatError,e:
+        except xml.parsers.expat.ExpatError as e:
             self.onCommandFailed(e)
 
     def getTopTracks(self,username):
@@ -333,8 +333,8 @@
                 nodex['_display'] = nodex['artist']+" - "+nodex['name']
                 data.append(nodex)
             return True,data
-        except xml.parsers.expat.ExpatError,e:
-            print e
+        except xml.parsers.expat.ExpatError as e:
+            print(e)
             return False,e
 
     def getNeighbours(self,username):
@@ -385,8 +385,8 @@
                 nodex['_display'] = nodex['name']
                 data.append(nodex)
             return True,data
-        except xml.parsers.expat.ExpatError,e:
-            print e
+        except xml.parsers.expat.ExpatError as e:
+            print(e)
             return False,e
 
     def changeStation(self,url):
--- a/lastfm/src/LastFMConfig.py
+++ b/lastfm/src/LastFMConfig.py
@@ -64,7 +64,7 @@
         }, -2)
 
     def save(self):
-        print "saving"
+        print("saving")
 
         
         for x in self["config"].list:
@@ -72,7 +72,7 @@
         self.close(True)
 
     def cancel(self):
-        print "cancel"
+        print("cancel")
         for x in self["config"].list:
             x[1].cancel()
         self.close(False)
--- a/lastfm/src/StreamPlayer.py
+++ b/lastfm/src/StreamPlayer.py
@@ -67,9 +67,9 @@
         
         track = self.playlist.getTrack(self.currentplaylistitemnumber)
         if track is False:
-            print "no track to play"
+            print("no track to play")
         elif track['location'] != "no location":
-            print "playing item "+str(self.currentplaylistitemnumber) +"/"+str(self.playlist.length)+" with url ",track['location']
+            print("playing item "+str(self.currentplaylistitemnumber) +"/"+str(self.playlist.length)+" with url ",track['location'])
             reactor.callLater(1, self._delayedPlay, eServiceReference(4097,0,track['location']))
             self.is_playing = True
 
--- a/lastfm/src/plugin.py
+++ b/lastfm/src/plugin.py
@@ -11,10 +11,10 @@
 from Components.config import config, ConfigSubsection, ConfigInteger, ConfigYesNo, ConfigText, ConfigSelection, ConfigPassword
 from Plugins.Plugin import PluginDescriptor
 
-from StreamPlayer import StreamPlayer
-from LastFMConfig import LastFMConfigScreen
-from LastFM import LastFM
-from urllib2 import quote as urllib2_qoute
+from .StreamPlayer import StreamPlayer
+from .LastFMConfig import LastFMConfigScreen
+from .LastFM import LastFM
+from urllib.parse import quote as urllib2_qoute
 from twisted.web.client import downloadPage
 from os import remove as os_remove, system as os_system
 from random import randrange
@@ -76,7 +76,7 @@
         else:
             streamplayer.setSession(kwargs["session"])
         
-        from scrobbler import EventListener
+        from .scrobbler import EventListener
         evl = EventListener(kwargs["session"],streamplayer)
         evl.startListenToEvents()
         
@@ -368,7 +368,7 @@
                 self.resetScreensaverTimer()
 
     def onTextForCustomStationEntered(self,text):
-        print "onTextForCustomStationEntered",text,self.customstationtype
+        print("onTextForCustomStationEntered",text,self.customstationtype)
         if text is not None:
             if self.customstationtype =="artist":
                 self.changeStation(urllib2_qoute("lastfm://artist/%s/similarartists"%text))
--- a/lastfm/src/scrobbler.py
+++ b/lastfm/src/scrobbler.py
@@ -6,7 +6,7 @@
 from Components.config import config
 from twisted.web.client import getPage
 
-from urllib import  urlencode as urllib_urlencode
+from urllib.parse import  urlencode as urllib_urlencode
 
 # for localized messages
 from . import _
@@ -31,7 +31,7 @@
         self.tracks2Submit.remove(track)
         
     def handshake(self):
-        print "[LastFMScrobbler] try logging into lastfm-submission-server"
+        print("[LastFMScrobbler] try logging into lastfm-submission-server")
         url = "http://"+self.host+":"+str(self.port)+"?"+urllib_urlencode({
             "hs":"true",
             "p":"1.1",
@@ -57,21 +57,21 @@
         self.md5 = sub("\n$","",lines[0])
         self.submiturl = sub("\n$","",lines[1])
         self.loggedin = True
-        print "[LastFMScrobbler] logged in"
+        print("[LastFMScrobbler] logged in")
         self.submit()
         
     def baduser(self,lines):
-        print "[LastFMScrobbler] Bad user"
+        print("[LastFMScrobbler] Bad user")
         
     def failed(self,lines):
-        print "[LastFMScrobbler] FAILED",lines[0]
+        print("[LastFMScrobbler] FAILED",lines[0])
            
     def submit(self):
         if self.loggedin is False:
             self.handshake()
             return False
         tracks = self.tracks2Submit
-        print "[LastFMScrobbler] Submitting ",len(tracks)," tracks"
+        print("[LastFMScrobbler] Submitting ",len(tracks)," tracks")
         md5response = md5(md5(self.password).hexdigest()+self.md5).hexdigest()
         post = {}
         post["u"]=self.user
@@ -87,7 +87,7 @@
     
     def encode(self,postdict):
         result=[]
-        for key,value in postdict.items():
+        for key,value in list(postdict.items()):
             result.append(key+"="+value)
         return "&".join(result)
 
@@ -97,10 +97,10 @@
     def submitCB(self,data):
         results = data.split("\n")
         if results[0].startswith("OK"):
-            print "[LastFMScrobbler] Submitting successful"
+            print("[LastFMScrobbler] Submitting successful")
             self.tracks2Submit = []
         if results[0].startswith("FAILED"):
-            print "[LastFMScrobbler] Submitting failed,",results[0]
+            print("[LastFMScrobbler] Submitting failed,",results[0])
             self.failed([results[0],"INTERVAL 0"])
 
 ############
@@ -151,14 +151,14 @@
             track = self.getCurrentServiceType()
             try:
                 self.tracks_checking_for.index(str(track))
-            except ValueError,e:
+            except ValueError as e:
                 if track is not False:
                     self.tracks_checking_for.append(str(track))
                     if track.length < self.time2wait4submit:
                         waittime = self.time2wait4submit
                     else:
                         waittime = track.length/2
-                    print "[LastFMScrobbler] waiting",waittime,"sec. until checking if the track "+str(track)+" is still playing"
+                    print("[LastFMScrobbler] waiting",waittime,"sec. until checking if the track "+str(track)+" is still playing")
                     reactor.callLater(waittime, self.checkTrack, track)
 
     def startListenToEvents(self):
@@ -177,7 +177,7 @@
             #print "[LastFMScrobbler] CurrentlyPlayingServiceReference is not a File, not submitting to LastFM"
             return False
         elif self.streamplayer.is_playing:
-            print "[LastFMScrobbler] LastFm-Plugin is playing"
+            print("[LastFMScrobbler] LastFm-Plugin is playing")
             trdata= self.streamplayer.playlist.getTrack(self.streamplayer.currentplaylistitemnumber)
             track = self.getTrack(artist=trdata['creator'],title=trdata['title'],album=trdata['album'],length=(trdata["duration"]/1000))
             return track
@@ -197,10 +197,10 @@
              
     def getTrack(self , artist = None, title = None, album = None,length=-1):
         if artist == "" or artist is None:
-            print "[LastFMScrobbler] CurrentlyPlayingServiceReference has no Artist, not submitting to LastFM"
+            print("[LastFMScrobbler] CurrentlyPlayingServiceReference has no Artist, not submitting to LastFM")
             return False
         elif title == "" or title is None:
-            print "[LastFMScrobbler] CurrentlyPlayingServiceReference has no Tracktitle, not submitting to LastFM"
+            print("[LastFMScrobbler] CurrentlyPlayingServiceReference has no Tracktitle, not submitting to LastFM")
             return False
         else:
             return Track(artist,title,album,length=length)
@@ -209,11 +209,11 @@
     def checkTrack(self,track):
         trackcurrent = self.getCurrentServiceType()
         if str(track) == str(trackcurrent):
-            print "[LastFMScrobbler] sending track to lastfm as now playing... "+str(track)
+            print("[LastFMScrobbler] sending track to lastfm as now playing... "+str(track))
             self.scrobbler = LastFMScrobbler()
             self.scrobbler.addTrack2Submit(track)
             self.scrobbler.submit()
             self.tracks_checking_for.remove(str(track))
         else:
-            print "[LastFMScrobbler] track is not playing, skipping sending "+str(track)
+            print("[LastFMScrobbler] track is not playing, skipping sending "+str(track))
             
\
--- a/libgisclubskin/src/Converter/CaidInfo2.py
+++ b/libgisclubskin/src/Converter/CaidInfo2.py
@@ -579,13 +579,13 @@
 									item[1] = item[1][tt+1:]
 							info[item[0].strip().lower()] = item[1].strip()
 						else:
-							if not info.has_key("caid"):
+							if "caid" not in info:
 								x = line.lower().find("caid")
 								if x != -1:
 									y = line.find(",")
 									if y != -1:
 										info["caid"] = line[x+5:y]
-							if not info.has_key("pid"):
+							if "pid" not in info:
 								x = line.lower().find("pid")
 								if x != -1:
 									y = line.find(" =")
--- a/libgisclubskin/src/Converter/ServiceName2.py
+++ b/libgisclubskin/src/Converter/ServiceName2.py
@@ -175,7 +175,7 @@
 			elif f == 'f':	# %f - fec_inner (dvb-s/s2/c/t)
 				if type in ('DVB-S','DVB-C'):
 					x = self.tpdata.get('fec_inner', 15)
-					result += x in range(10)+[15] and {0:'Auto',1:'1/2',2:'2/3',3:'3/4',4:'5/6',5:'7/8',6:'8/9',7:'3/5',8:'4/5',9:'9/10',15:'None'}[x] or ''
+					result += x in list(range(10))+[15] and {0:'Auto',1:'1/2',2:'2/3',3:'3/4',4:'5/6',5:'7/8',6:'8/9',7:'3/5',8:'4/5',9:'9/10',15:'None'}[x] or ''
 				elif type == 'DVB-T':
 					x = self.tpdata.get('code_rate_lp', 5)
 					result += x in range(6) and {0:'1/2',1:'2/3',2:'3/4',3:'5/6',4:'7/8',5:'Auto'}[x] or ''
--- a/libgisclubskin/src/Converter/ServiceOrbitalPosition2.py
+++ b/libgisclubskin/src/Converter/ServiceOrbitalPosition2.py
@@ -23,7 +23,7 @@
 			transponder_info = info.getInfoObject(ref, iServiceInformation.sTransponderData)
 		else:
 			transponder_info = info.getInfoObject(iServiceInformation.sTransponderData)
-		if transponder_info and "orbital_position" in transponder_info.keys():
+		if transponder_info and "orbital_position" in list(transponder_info.keys()):
 			pos = int(transponder_info["orbital_position"])
 			direction = 'E'
 			if pos > 1800:
--- a/libgisclubskin/src/Renderer/PiconBig.py
+++ b/libgisclubskin/src/Renderer/PiconBig.py
@@ -22,18 +22,18 @@
 		if os.path.isdir(path) and path not in searchPaths:
 			for fn in os.listdir(path):
 				if fn.endswith('.png'):
-					print "[Picon] adding path:", path
+					print("[Picon] adding path:", path)
 					searchPaths.append(path)
 					break
-	except Exception, ex:
-		print "[Picon] Failed to investigate %s:" % mountpoint, ex
+	except Exception as ex:
+		print("[Picon] Failed to investigate %s:" % mountpoint, ex)
 
 def onMountpointRemoved(mountpoint):
 	global searchPaths
 	path = os.path.join(mountpoint, 'piconBig') + '/'
 	try:
 		searchPaths.remove(path)
-		print "[Picon] removed path:", path
+		print("[Picon] removed path:", path)
 	except:
 		pass
 
--- a/libgisclubskin/src/Renderer/PiconSatTV.py
+++ b/libgisclubskin/src/Renderer/PiconSatTV.py
@@ -152,7 +152,7 @@
 								 50: "50E",
 								 48: "48E",
 								 30: "30E"}[frontendData.get("orbital_position", "None")]
-							except Exception, e:
+							except Exception as e:
 								pass
 				
 				pos = sname.rfind(':')
--- a/libgisclubskin/src/Renderer/PiconSatTVMini.py
+++ b/libgisclubskin/src/Renderer/PiconSatTVMini.py
@@ -152,7 +152,7 @@
 								 50: "50E",
 								 48: "48E",
 								 30: "30E"}[frontendData.get("orbital_position", "None")]
-							except Exception, e:
+							except Exception as e:
 								pass
 				
 				pos = sname.rfind(':')
--- a/logomanager/src/plugin.py
+++ b/logomanager/src/plugin.py
@@ -20,12 +20,12 @@
 
 
 def filescan_open(list, session, **kwargs):
-    print "filescan_open", list,kwargs
+    print("filescan_open", list,kwargs)
     session.open(LogoManagerScreen,file=list[0].path)
 
 def start_from_filescan(**kwargs):
     from Components.Scanner import Scanner, ScanPath
-    print "start_from_filescan",kwargs
+    print("start_from_filescan",kwargs)
     return \
         Scanner(mimetypes=["image/jpeg","image/mvi"],
             paths_to_scan =
@@ -109,7 +109,7 @@
         for target in self.targets:
             file = target[1].split("/")[-1]
             if os_path.isfile(plugin_path+file) is not True:
-                print "backing up original ",target[0]," from ",file
+                print("backing up original ",target[0]," from ",file)
                 os_system("cp '%s' '%s'" %(target[1],plugin_path+"/"+file))
 
     def restoreOriginal(self):
@@ -118,7 +118,7 @@
         for target in self.targets:
             file = target[1].split("/")[-1]
             if os_path.isfile(plugin_path+"/"+file) is True:
-                print "restoring original ",target[0]," from ",plugin_path+"/"+file,"to",target[1]
+                print("restoring original ",target[0]," from ",plugin_path+"/"+file,"to",target[1])
                 os_system("cp '%s' '%s'" %(plugin_path+"/"+file,target[1]))
 
     def exit(self):
@@ -187,12 +187,12 @@
 
     def showMVI(self,mvifile):
         """ shows a mvi """
-        print "playing MVI",mvifile
+        print("playing MVI",mvifile)
         os_system("/usr/bin/showiframe '%s'" % mvifile)
 
     def installMVI(self,target,sourcefile):
         """ installs a mvi by overwriting the target with a source mvi """
-        print "installing %s as %s on %s" %(sourcefile,target[0],target[1])
+        print("installing %s as %s on %s" %(sourcefile,target[0],target[1]))
         if os_path.isfile(target[1]):
             os_remove(target[1])
         os_system("cp '%s' '%s'"%(sourcefile,target[1]))
@@ -230,13 +230,13 @@
         }, -2)
 
     def save(self):
-        print "saving"
+        print("saving")
         for x in self["config"].list:
             x[1].save()
         self.close(True)
 
     def cancel(self):
-        print "cancel"
+        print("cancel")
         for x in self["config"].list:
             x[1].cancel()
         self.close(False)
--- a/mediadownloader/src/MediaDownloader.py
+++ b/mediadownloader/src/MediaDownloader.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # for localized messages
 from . import _
@@ -12,11 +12,11 @@
 from Components.Sources.StaticText import StaticText
 
 # Download
-from VariableProgressSource import VariableProgressSource
+from .VariableProgressSource import VariableProgressSource
 
 from Components.config import config
 try:
-	from urlparse import urlparse, urlunparse
+	from urllib.parse import urlparse, urlunparse
 except ImportError as ie:
 	from urllib.parse import urlparse, urlunparse
 
@@ -72,7 +72,7 @@
 	scheme, host, port, path, username, password = _parse(url)
 
 	if scheme == 'ftp':
-		from FTPProgressDownloader import FTPProgressDownloader
+		from .FTPProgressDownloader import FTPProgressDownloader
 
 		if not (username and password):
 			username = 'anonymous'
@@ -107,7 +107,7 @@
 		else:
 			kwargs["headers"] = AuthHeaders
 
-	from HTTPProgressDownloader import HTTPProgressDownloader
+	from .HTTPProgressDownloader import HTTPProgressDownloader
 	from twisted.internet import reactor
 
 	factory = HTTPProgressDownloader(url, file, writeProgress, *args, **kwargs)
--- a/mediadownloader/src/plugin.py
+++ b/mediadownloader/src/plugin.py
@@ -22,13 +22,13 @@
 	from Components.Scanner import ScanFile
 	file = ScanFile(url, autodetect = False)
 
-	from MediaDownloader import MediaDownloader
+	from .MediaDownloader import MediaDownloader
 	session.open(MediaDownloader, file, askOpen, to, callback)
 
 # Item chosen
 def filescan_chosen(session, item):
 	if item:
-		from MediaDownloader import MediaDownloader
+		from .MediaDownloader import MediaDownloader
 
 		session.open(MediaDownloader, item[1], askOpen = True)
 
@@ -59,7 +59,7 @@
 			choices
 		)
 	elif Len:
-		from MediaDownloader import MediaDownloader
+		from .MediaDownloader import MediaDownloader
 
 		session.open(MediaDownloader, items[0], askOpen = True)
 
--- a/menusort/src/plugin.py
+++ b/menusort/src/plugin.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # Plugin definition
 from Plugins.Plugin import PluginDescriptor
@@ -25,9 +25,9 @@
 
 try:
 	dict.iteritems
-	iteritems = lambda d: d.iteritems()
+	iteritems = lambda d: iter(d.items())
 except AttributeError:
-	iteritems = lambda d: d.items()
+	iteritems = lambda d: list(d.items())
 
 from operator import itemgetter
 from shutil import copyfile, Error
--- a/merlinepg/src/plugin.py
+++ b/merlinepg/src/plugin.py
@@ -37,7 +37,7 @@
 from enigma import eServiceReference, eServiceCenter, getDesktop, eTimer, gFont, eListboxPythonMultiContent, RT_HALIGN_LEFT, RT_WRAP, eEPGCache
 from RecordTimer import RecordTimerEntry, parseEvent, AFTEREVENT
 from ServiceReference import ServiceReference
-from ShowMe import ShowMe
+from .ShowMe import ShowMe
 from time import localtime
 if fileExists("/usr/lib/enigma2/python/Plugins/Extensions/AutoTimer/AutoTimerEditor.pyo"):
 	from Plugins.Extensions.AutoTimer.AutoTimerEditor import addAutotimerFromEvent
--- a/merlinepgcenter/src/ConfigTabs.py
+++ b/merlinepgcenter/src/ConfigTabs.py
@@ -52,9 +52,9 @@
 	
 
 # OWN IMPORTS
-from EpgCenterList import MULTI_EPG_NOW, MULTI_EPG_NEXT, SINGLE_EPG, MULTI_EPG_PRIMETIME, TIMERLIST, EPGSEARCH_HISTORY
-from MerlinEPGCenter import STYLE_SINGLE_LINE, STYLE_SHORT_DESCRIPTION, TAB_TEXT_EPGLIST
-from SkinFinder import SkinFinder
+from .EpgCenterList import MULTI_EPG_NOW, MULTI_EPG_NEXT, SINGLE_EPG, MULTI_EPG_PRIMETIME, TIMERLIST, EPGSEARCH_HISTORY
+from .MerlinEPGCenter import STYLE_SINGLE_LINE, STYLE_SHORT_DESCRIPTION, TAB_TEXT_EPGLIST
+from .SkinFinder import SkinFinder
 
 TAB_CHOICES = [ ("-1", _("disabled")),
 		(str(MULTI_EPG_NOW), TAB_TEXT_EPGLIST[MULTI_EPG_NOW]),
--- a/merlinepgcenter/src/EpgActions.py
+++ b/merlinepgcenter/src/EpgActions.py
@@ -25,8 +25,8 @@
 from Tools.BoundFunction import boundFunction
 
 # OWN IMPORTS
-from ConfigTabs import KEEP_OUTDATED_TIME
-from EpgCenterList import MULTI_EPG_NOW, MULTI_EPG_NEXT, SINGLE_EPG, MULTI_EPG_PRIMETIME, TIMERLIST, EPGSEARCH_HISTORY, EPGSEARCH_RESULT, EPGSEARCH_MANUAL
+from .ConfigTabs import KEEP_OUTDATED_TIME
+from .EpgCenterList import MULTI_EPG_NOW, MULTI_EPG_NEXT, SINGLE_EPG, MULTI_EPG_PRIMETIME, TIMERLIST, EPGSEARCH_HISTORY, EPGSEARCH_RESULT, EPGSEARCH_MANUAL
 
 class MerlinEPGActions():		
 	def __init__(self):
@@ -169,7 +169,7 @@
 		self["toggleConfigActions"].setEnabled(True)
 		
 	def setActions(self):
-		from MerlinEPGCenter import IMDB_INSTALLED
+		from .MerlinEPGCenter import IMDB_INSTALLED
 		
 		# unset action map
 		if self.oldMode == MULTI_EPG_NOW or self.oldMode == MULTI_EPG_NEXT or self.oldMode == MULTI_EPG_PRIMETIME or self.oldMode == EPGSEARCH_RESULT:
--- a/merlinepgcenter/src/EpgCenterList.py
+++ b/merlinepgcenter/src/EpgCenterList.py
@@ -43,9 +43,9 @@
 from Tools.LoadPixmap import LoadPixmap
 
 # OWN IMPORTS
-from ConfigTabs import KEEP_OUTDATED_TIME, STYLE_SIMPLE_BAR, STYLE_PIXMAP_BAR, STYLE_MULTI_PIXMAP, STYLE_PERCENT_TEXT
-from HelperFunctions import getFuzzyDay, LIST_TYPE_EPG, LIST_TYPE_UPCOMING, TimerListObject
-from MerlinEPGCenter import STYLE_SINGLE_LINE, STYLE_SHORT_DESCRIPTION
+from .ConfigTabs import KEEP_OUTDATED_TIME, STYLE_SIMPLE_BAR, STYLE_PIXMAP_BAR, STYLE_MULTI_PIXMAP, STYLE_PERCENT_TEXT
+from .HelperFunctions import getFuzzyDay, LIST_TYPE_EPG, LIST_TYPE_UPCOMING, TimerListObject
+from .MerlinEPGCenter import STYLE_SINGLE_LINE, STYLE_SHORT_DESCRIPTION
 
 
 MODE_HD = 0
--- a/merlinepgcenter/src/EpgTabs.py
+++ b/merlinepgcenter/src/EpgTabs.py
@@ -27,8 +27,8 @@
 from ServiceReference import ServiceReference
 
 # OWN IMPORTS
-from EpgCenterList import EpgCenterList, TIMERLIST
-from MerlinEPGCenter import LIST_MODE_AUTOTIMER
+from .EpgCenterList import EpgCenterList, TIMERLIST
+from .MerlinEPGCenter import LIST_MODE_AUTOTIMER
 
 
 ############################################################################################
--- a/merlinepgcenter/src/MerlinEPGCenter.py
+++ b/merlinepgcenter/src/MerlinEPGCenter.py
@@ -77,12 +77,12 @@
 
 # OWN IMPORTS
 from Components.VolumeControl import VolumeControl
-from ConfigTabs import KEEP_OUTDATED_TIME, ConfigBaseTab, ConfigGeneral, ConfigListSettings, ConfigEventInfo, ConfigKeys, SKINDIR, SKINLIST, STYLE_SIMPLE_BAR, STYLE_PIXMAP_BAR, STYLE_MULTI_PIXMAP, STYLE_PERCENT_TEXT
-from EpgActions import MerlinEPGActions
-from EpgCenterList import EpgCenterList, EpgCenterTimerlist, MODE_HD, MODE_XD, MODE_SD, MULTI_EPG_NOW, MULTI_EPG_NEXT, SINGLE_EPG, MULTI_EPG_PRIMETIME, TIMERLIST, EPGSEARCH_HISTORY, EPGSEARCH_RESULT, EPGSEARCH_MANUAL, UPCOMING
-from EpgTabs import EpgBaseTab, EpgNowTab, EpgNextTab, EpgSingleTab, EpgPrimeTimeTab, EpgTimerListTab, EpgSearchHistoryTab, EpgSearchManualTab, EpgSearchResultTab
-from HelperFunctions import PiconLoader, findDefaultPicon, ResizeScrollLabel, BlinkTimer, LIST_TYPE_EPG, LIST_TYPE_UPCOMING, RecTimerEntry, TimerListObject, EmbeddedVolumeControl
-from SkinFinder import SkinFinder
+from .ConfigTabs import KEEP_OUTDATED_TIME, ConfigBaseTab, ConfigGeneral, ConfigListSettings, ConfigEventInfo, ConfigKeys, SKINDIR, SKINLIST, STYLE_SIMPLE_BAR, STYLE_PIXMAP_BAR, STYLE_MULTI_PIXMAP, STYLE_PERCENT_TEXT
+from .EpgActions import MerlinEPGActions
+from .EpgCenterList import EpgCenterList, EpgCenterTimerlist, MODE_HD, MODE_XD, MODE_SD, MULTI_EPG_NOW, MULTI_EPG_NEXT, SINGLE_EPG, MULTI_EPG_PRIMETIME, TIMERLIST, EPGSEARCH_HISTORY, EPGSEARCH_RESULT, EPGSEARCH_MANUAL, UPCOMING
+from .EpgTabs import EpgBaseTab, EpgNowTab, EpgNextTab, EpgSingleTab, EpgPrimeTimeTab, EpgTimerListTab, EpgSearchHistoryTab, EpgSearchManualTab, EpgSearchResultTab
+from .HelperFunctions import PiconLoader, findDefaultPicon, ResizeScrollLabel, BlinkTimer, LIST_TYPE_EPG, LIST_TYPE_UPCOMING, RecTimerEntry, TimerListObject, EmbeddedVolumeControl
+from .SkinFinder import SkinFinder
 
 # check for Autotimer support
 try:
@@ -936,17 +936,17 @@
 		if cur and isinstance(cur, RecordTimerEntry):
 			t = cur
 			if t.disabled:
-				print "try to ENABLE timer"
+				print("try to ENABLE timer")
 				t.enable()
 				timersanitycheck = TimerSanityCheck(self.session.nav.RecordTimer.timer_list, cur)
 				if not timersanitycheck.check():
 					t.disable()
-					print "Sanity check failed"
+					print("Sanity check failed")
 					simulTimerList = timersanitycheck.getSimulTimerList()
 					if simulTimerList is not None:
 						self.session.openWithCallback(self.finishedEdit, TimerSanityConflict, simulTimerList)
 				else:
-					print "Sanity check passed"
+					print("Sanity check passed")
 					if timersanitycheck.doubleCheck():
 						t.disable()
 			else:
@@ -1401,7 +1401,7 @@
 		self["bouquet"].setText(self.getBouquetName())
 		
 	def updateBouquets(self):
-		from plugin import getBouquetInformation
+		from .plugin import getBouquetInformation
 		(self.servicelist, self.currentBouquet, self.bouquetList, self.currentBouquetIndex) = getBouquetInformation()
 		self.similarShown = False
 		
@@ -1622,7 +1622,7 @@
 		if not playingSref:
 			return
 			
-		from plugin import getBouquetInformation
+		from .plugin import getBouquetInformation
 		(self.servicelist, self.currentBouquet, self.bouquetList, self.currentBouquetIndex) = getBouquetInformation()
 		EpgCenterList.bouquetList = self.bouquetList
 		EpgCenterList.currentBouquetIndex = self.currentBouquetIndex
--- a/merlinepgcenter/src/SkinFinder.py
+++ b/merlinepgcenter/src/SkinFinder.py
@@ -101,7 +101,7 @@
 				skinIndex = skinListFiles.index(currentSkinValue)
 			else:
 				# fall back to the default skin
-				print '[SkinFinder] unable to find skin file %s, tryig to load a default skin' % currentSkinValue
+				print('[SkinFinder] unable to find skin file %s, tryig to load a default skin' % currentSkinValue)
 				skinIndex = SkinFinder.getDefaultSkinEntry()
 		else:
 			# get the index of the detected skin in our list of default skins
@@ -109,10 +109,10 @@
 			
 		if skinIndex is not None:
 			skinFile = SkinFinder.skinList[skinIndex][0]
-			print '[SkinFinder] found skin file', skinFile
+			print('[SkinFinder] found skin file', skinFile)
 			return skinFile, SkinFinder.skinList
 		else:
-			print '[SkinFinder] unable to find any skin!'
+			print('[SkinFinder] unable to find any skin!')
 			return None
 			
 	@staticmethod
@@ -134,6 +134,6 @@
 			except ValueError:
 				pass
 				
-		print '[SkinFinder] skin index error! File:', fileName
+		print('[SkinFinder] skin index error! File:', fileName)
 		return None
 		
--- a/merlinepgcenter/src/__init__.py
+++ b/merlinepgcenter/src/__init__.py
@@ -12,7 +12,7 @@
 def _(txt):
 	t = gettext.dgettext("MerlinEPGCenter", txt)
 	if t == txt:
-		print "[MerlinEPGCenter] fallback to default translation for", txt
+		print("[MerlinEPGCenter] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/merlinepgcenter/src/plugin.py
+++ b/merlinepgcenter/src/plugin.py
@@ -30,8 +30,8 @@
 from Screens.InfoBar import InfoBar
 
 # OWN IMPORTS
-from MerlinEPGCenter import MerlinEPGCenter
-from EpgCenterList import MULTI_EPG_NOW, SINGLE_EPG
+from .MerlinEPGCenter import MerlinEPGCenter
+from .EpgCenterList import MULTI_EPG_NOW, SINGLE_EPG
 
 
 infoBarFunctionSaver = None
--- a/merlinmusicplayer/src/plugin.py
+++ b/merlinmusicplayer/src/plugin.py
@@ -26,7 +26,7 @@
 from Components.Label import Label
 from enigma import RT_VALIGN_CENTER, RT_HALIGN_LEFT, RT_HALIGN_RIGHT, RT_HALIGN_CENTER, gFont, eListbox,ePoint, eListboxPythonMultiContent
 # merlin mp3 player
-import merlinmp3player
+from . import merlinmp3player
 ENIGMA_MERLINPLAYER_ID = 0x1014
 from Components.FileList import FileList
 from enigma import eServiceReference, eTimer
@@ -40,7 +40,7 @@
 from Components.GUIComponent import GUIComponent
 from enigma import ePicLoad
 from xml.etree.cElementTree import fromstring as cet_fromstring
-from urllib import quote
+from urllib.parse import quote
 from Components.ScrollLabel import ScrollLabel
 from Components.AVSwitch import AVSwitch
 from Tools.Directories import fileExists, resolveFilename, SCOPE_CURRENT_SKIN
@@ -352,11 +352,11 @@
 		try:
 			connection = sqlite.connect(connectstring)
 			if not os_access(connectstring, os_W_OK):
-				print "[MerlinMusicPlayer] Error: database file needs to be writable, can not open %s for writing..." % connectstring
+				print("[MerlinMusicPlayer] Error: database file needs to be writable, can not open %s for writing..." % connectstring)
 				connection.close()
 				return None
 		except:
-			print "[MerlinMusicPlayer] unable to open database file: %s" % connectstring
+			print("[MerlinMusicPlayer] unable to open database file: %s" % connectstring)
 			return None
 		if not db_exists :
 				connection.execute('CREATE TABLE IF NOT EXISTS Songs (song_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, filename TEXT NOT NULL UNIQUE, title TEXT, artist_id INTEGER, album_id INTEGER, genre_id INTEGER, tracknumber INTEGER, bitrate INTEGER, length TEXT, track TEXT, date TEXT, lyrics TEXT);')
@@ -509,7 +509,7 @@
 		self.summaries.setText(text,line)
 
 	def updateCover(self, filename = None, modus = 0):
-		print "[MerlinMusicPlayerScreenSaver] updating coverart with filename = %s and modus = %d" % (filename, modus)
+		print("[MerlinMusicPlayerScreenSaver] updating coverart with filename = %s and modus = %d" % (filename, modus))
 		if modus == 0:
 			if filename:
 				self["coverArt"].showCoverFromFile(filename)
@@ -1232,22 +1232,22 @@
 				self.currentGoogleCoverFile = filename
 				filename = self.googleDownloadDir + parts[-1]
 				if os_path.exists(filename):
-					print "[MerlinMusicPlayer] using cover from %s " % filename
+					print("[MerlinMusicPlayer] using cover from %s " % filename)
 					self["coverArt"].showCoverFromFile(filename)
 					if self.screenSaverScreen:
 						self.screenSaverScreen.updateCover(filename = filename, modus = 4)
 				else:
-					print "[MerlinMusicPlayer] downloading cover from %s " % url
+					print("[MerlinMusicPlayer] downloading cover from %s " % url)
 					downloadPage(url , self.googleDownloadDir + parts[-1]).addCallback(boundFunction(self.coverDownloadFinished, filename)).addErrback(self.coverDownloadFailed)
 
 	def coverDownloadFailed(self,result):
-        	print "[MerlinMusicPlayer] cover download failed: %s " % result
+        	print("[MerlinMusicPlayer] cover download failed: %s " % result)
 		self["coverArt"].showDefaultCover()
 		if self.screenSaverScreen:
 			self.screenSaverScreen.updateCover(modus = 1)
 
 	def coverDownloadFinished(self,filename, result):
-		print "[MerlinMusicPlayer] cover download finished"
+		print("[MerlinMusicPlayer] cover download finished")
 		self["coverArt"].showCoverFromFile(filename)
 		if self.screenSaverScreen:
 			self.screenSaverScreen.updateCover(filename = filename, modus = 4)
@@ -1255,13 +1255,13 @@
 	def __evAudioDecodeError(self):
 		currPlay = self.session.nav.getCurrentService()
 		sAudioType = currPlay.info().getInfoString(iServiceInformation.sUser+10)
-		print "[MerlinMusicPlayer] audio-codec %s can't be decoded by hardware" % (sAudioType)
+		print("[MerlinMusicPlayer] audio-codec %s can't be decoded by hardware" % (sAudioType))
 		self.session.open(MessageBox, _("This Dreambox can't decode %s streams!") % sAudioType, type = MessageBox.TYPE_INFO,timeout = 20 )
 
 	def __evPluginError(self):
 		currPlay = self.session.nav.getCurrentService()
 		message = currPlay.info().getInfoString(iServiceInformation.sUser+12)
-		print "[MerlinMusicPlayer]" , message
+		print("[MerlinMusicPlayer]" , message)
 		self.session.open(MessageBox, message, type = MessageBox.TYPE_INFO,timeout = 20 )
 
 	def doEofInternal(self, playing):
@@ -1501,7 +1501,7 @@
   
 	def getLyricsFromID3Tag(self,tag):
 		if tag:
-			for frame in tag.values():
+			for frame in list(tag.values()):
 				if frame.FrameID == "USLT":
 					return frame.text
 		url = "http://api.chartlyrics.com/apiv1.asmx/SearchLyricDirect?artist=%s&song=%s" % (quote(self.currentSong.artist), quote(self.currentSong.title))
@@ -2678,7 +2678,7 @@
 		if self.coverArtFileName != new_coverArtFileName:
 			if new_coverArtFileName:
 				self.coverArtFileName = new_coverArtFileName
-				print "[MerlinMusicPlayer] using cover from %s " % self.coverArtFileName
+				print("[MerlinMusicPlayer] using cover from %s " % self.coverArtFileName)
 				self.picload.startDecode(self.coverArtFileName)
 				back = True
 		else:
@@ -2695,7 +2695,7 @@
 		self.picload.startDecode(self.coverArtFileName)
 
 	def embeddedCoverArt(self):
-		print "[embeddedCoverArt] found"
+		print("[embeddedCoverArt] found")
 		self.coverArtFileName = "/tmp/.id3coverart"
 		self.picload.startDecode(self.coverArtFileName)
 
@@ -3314,7 +3314,7 @@
 		return MerlinMusicPlayerLCDScreenText
 
 def main(session,**kwargs):
-	if kwargs.has_key("servicelist"):
+	if "servicelist" in kwargs:
 		servicelist = kwargs["servicelist"]
 	else:
 		from Screens.InfoBar import InfoBar
@@ -3322,7 +3322,7 @@
 	session.open(iDreamMerlin, servicelist)
 
 def merlinmusicplayerfilelist(session,**kwargs):
-	if kwargs.has_key("servicelist"):
+	if "servicelist" in kwargs:
 		servicelist = kwargs["servicelist"]
 	else:
 		from Screens.InfoBar import InfoBar
--- a/meteoitalia/src/plugin.py
+++ b/meteoitalia/src/plugin.py
@@ -17,8 +17,8 @@
 from Components.Label import Label
 from Components.Pixmap import Pixmap
 from Tools.Directories import fileExists
-
-from urllib2 import Request, urlopen, URLError, HTTPError
+from urllib.request import Request, urlopen
+from urllib.error import URLError, HTTPError
 from xml.dom import minidom, Node
 from enigma import loadPic, eTimer
 
@@ -93,9 +93,9 @@
 		req = Request(myurl)
 		try:
     			handler = urlopen(req)
-		except HTTPError, e:
+		except HTTPError as e:
     			maintext = "Error: connection failed !"
-		except URLError, e:
+		except URLError as e:
     			maintext = "Error: Page not available !"
 		else:
 			xml_response = handler.read()
@@ -113,7 +113,7 @@
         				'forecast_information': ('postal_code', 'current_date_time'),
         				'current_conditions': ('condition','temp_c', 'humidity', 'wind_condition', 'icon')
     				}
-    				for (tag, list_of_tags2) in data_structure.iteritems():
+    				for (tag, list_of_tags2) in data_structure.items():
         				tmp_conditions = {}
        					for tag2 in list_of_tags2:
             					try: 
--- a/mosaic/src/plugin.py
+++ b/mosaic/src/plugin.py
@@ -197,7 +197,7 @@
 		self.close()
 
 	def deleteConsoleCallbacks(self):
-		if self.Console.appContainers.has_key(self.consoleCmd):
+		if self.consoleCmd in self.Console.appContainers:
 			del self.Console.appContainers[self.consoleCmd].dataAvail[:]
 			del self.Console.appContainers[self.consoleCmd].appClosed[:]
 			del self.Console.appContainers[self.consoleCmd]
@@ -302,7 +302,7 @@
 			self.working = False
 			self.updateTimer.start(1, 1)
 		else:
-			print "[Mosaic] retval: %d result: %s" % (retval, result)
+			print("[Mosaic] retval: %d result: %s" % (retval, result))
 			
 			try:
 				f = open(grab_errorlog, "w")
--- a/moviecut/src_py/__init__.py
+++ b/moviecut/src_py/__init__.py
@@ -10,13 +10,13 @@
 def localeInit():
 	lang = language.getLanguage()[:2]
 	os.environ["LANGUAGE"] = lang
-	print "[MovieCut] set language to ", lang
+	print("[MovieCut] set language to ", lang)
 	gettext.bindtextdomain(PluginLanguageDomain, resolveFilename(SCOPE_PLUGINS, PluginLanguagePath))
 
 def _(txt):
 	t = gettext.dgettext(PluginLanguageDomain, txt)
 	if t == txt:
-		print "[MovieCut] fallback to default Enigma2 Translation for", txt
+		print("[MovieCut] fallback to default Enigma2 Translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/moviecut/src_py/plugin.py
+++ b/moviecut/src_py/plugin.py
@@ -1,9 +1,9 @@
 from Plugins.Plugin import PluginDescriptor
-from __init__ import _
+from .__init__ import _
 import os
 
 def main(session, service, **kwargs):
-	import ui
+	from . import ui
 	# Hack to make sure it is executable
 	if not os.access(ui.mcut_path, os.X_OK):
 		os.chmod(ui.mcut_path, 493)
--- a/moviecut/src_py/ui.py
+++ b/moviecut/src_py/ui.py
@@ -8,7 +8,7 @@
 from Components.ConfigList import ConfigList, ConfigListScreen
 from Components.Sources.StaticText import StaticText
 from enigma import eTimer, eServiceCenter, iServiceInformation, eConsoleAppContainer, eEnv
-from __init__ import _
+from .__init__ import _
 
 mcut_path = eEnv.resolve("${libdir}/enigma2/python/Plugins/Extensions/MovieCut/bin/mcut")
 
--- a/movieepg/src/plugin.py
+++ b/movieepg/src/plugin.py
@@ -121,7 +121,7 @@
 MoviePlayer.close = MoviePlayer_close
 
 # Configuration
-from MovieEpgSetup import MovieEpgSetup
+from .MovieEpgSetup import MovieEpgSetup
 
 def main(session):
 	session.open(MovieEpgSetup)
--- a/movielistpreview/src/plugin.py
+++ b/movielistpreview/src/plugin.py
@@ -278,7 +278,7 @@
 
 	def grabDone(self, result, retval, extra_args):
 		if retval != 0:
-			print result
+			print(result)
 		if self.callback:
 			self.callback()
 previewcreator = PreviewCreator()
@@ -539,7 +539,7 @@
 	Show2 = MovieSelectionSP.show
 	MovieSelectionSP.show = showMovieSelection2
 except ImportError:
-	print "[Movielist Preview] Could not import Suomipoeka Plugin, maybe not installed or too old version?"
+	print("[Movielist Preview] Could not import Suomipoeka Plugin, maybe not installed or too old version?")
 
 ##############################################################################
 
--- a/movieretitle/src/__init__.py
+++ b/movieretitle/src/__init__.py
@@ -10,7 +10,7 @@
 def _(txt):
 	t = gettext.dgettext("MovieRetitle", txt)
 	if t == txt:
-		print "[MovieRetitle] fallback to default translation for", txt
+		print("[MovieRetitle] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/movieretitle/src/plugin.py
+++ b/movieretitle/src/plugin.py
@@ -137,10 +137,10 @@
 		try:
 			os_rename(fr + ".ts", to + ".ts")
 		except OSError:
-			print "Moving in background"
+			print("Moving in background")
 			global_background_mover.enqueue(self.exitDialog, self.session, fr, to)
 		else:
-			print "Moving in foreground"
+			print("Moving in foreground")
 			for suff in (".ts.meta", ".ts.cuts", ".ts.ap", ".ts.sc", ".eit"):
 				if os_path.exists(fr + suff):
 					os_rename(fr + suff, to + suff)
@@ -270,7 +270,7 @@
 			fr = self.ele[2] + self.sufflst[0]
 			to = self.ele[3] + self.sufflst[0]
 			self.sufflst = self.sufflst[1:]
-			print "Moving %s to %s" % (fr, to)
+			print("Moving %s to %s" % (fr, to))
 			if os_path.exists(fr):
 				self.container.execute("/bin/cp", "/bin/cp", fr, to)
 			else:
--- a/moviesearch/src/plugin.py
+++ b/moviesearch/src/plugin.py
@@ -1,6 +1,6 @@
-from __future__ import print_function
+
 from Plugins.Plugin import PluginDescriptor
-from NTIVirtualKeyBoard import NTIVirtualKeyBoard
+from .NTIVirtualKeyBoard import NTIVirtualKeyBoard
 from Tools.BoundFunction import boundFunction
 from Screens.MessageBox import MessageBox
 from enigma import eServiceCenter, eServiceReference, \
--- a/movieselectionquickbutton/src/__init__.py
+++ b/movieselectionquickbutton/src/__init__.py
@@ -10,7 +10,7 @@
 def _(txt):
 	t = gettext.dgettext("MovieSelectionQuickButton", txt)
 	if t == txt:
-		print "[MovieSelectionQuickButton] fallback to default translation for", txt
+		print("[MovieSelectionQuickButton] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/movieselectionquickbutton/src/plugin.py
+++ b/movieselectionquickbutton/src/plugin.py
@@ -148,7 +148,7 @@
 					try:
 						plugin(self.session, current)
 						no_plugin = False
-					except Exception, e:
+					except Exception as e:
 						msgText = _("Error!\nError Text: %s"%e)
 				else: 
 					msgText = _("Plugin not found!")
--- a/movietagger/src/plugin.py
+++ b/movietagger/src/plugin.py
@@ -90,13 +90,13 @@
 			fp.close()
 			self.pretags = t.replace("\n"," ").strip().split(" ")
 			self.pretags.sort()
-			print "pretags loaded ", self.pretags
-		else:
-			print "pretagsfile",self.pretagfile," does not exists"
+			print("pretags loaded ", self.pretags)
+		else:
+			print("pretagsfile",self.pretagfile," does not exists")
 			self.pretags = []
 
 	def updateCurrentTagList(self):
-		print "updating cTagList"
+		print("updating cTagList")
 		self.serviceHandler = eServiceCenter.getInstance()
 		self.info = self.serviceHandler.info(self.service)
 		self.tags = self.info.getInfoString(self.service, iServiceInformation.sTags).split(' ')
@@ -244,7 +244,7 @@
 			self.removeTag(self["cTaglist"].getCurrent())
 
 		elif self.currList is self["aTaglist"]:
-			print "adding Tag",self["aTaglist"].getCurrent()[0]
+			print("adding Tag",self["aTaglist"].getCurrent()[0])
 			self.addTag(self["aTaglist"].getCurrent()[0])
 
 	def keyGreen(self):
@@ -308,7 +308,7 @@
 def main(session, service, **kwargs):
 	try:
 		session.open(MovieTagger, service)
-	except Exception,e:
+	except Exception as e:
 		raise e
 
 def Plugins(path,**kwargs):
--- a/mphelp/src/XMLHelp.py
+++ b/mphelp/src/XMLHelp.py
@@ -1,7 +1,7 @@
 # for localized messages
 from . import _
 
-from MPHelp import HelpPage
+from .MPHelp import HelpPage
 from xml.etree.cElementTree import parse as cet_parse
 
 class XMLHelpPage(HelpPage):
--- a/mphelp/src/__init__.py
+++ b/mphelp/src/__init__.py
@@ -13,11 +13,11 @@
 	if gettext.dgettext(PluginLanguageDomain, txt):
 		return gettext.dgettext(PluginLanguageDomain, txt)
 	else:
-		print "[" + PluginLanguageDomain + "] fallback to default translation for " + txt
+		print("[" + PluginLanguageDomain + "] fallback to default translation for " + txt)
 		return gettext.gettext(txt)
 
 language.addCallback(localeInit())
 
-from plugin import *
-from MPHelp import HelpPage
-from XMLHelp import *
+from .plugin import *
+from .MPHelp import HelpPage
+from .XMLHelp import *
--- a/mphelp/src/plugin.py
+++ b/mphelp/src/plugin.py
@@ -2,7 +2,7 @@
 from . import _
 
 #from Plugins.Plugin import PluginDescriptor
-from MPHelp import MPHelp
+from .MPHelp import MPHelp
 
 from collections import Callable
 
--- a/multiquickbutton/src/MultiQuickButton.py
+++ b/multiquickbutton/src/MultiQuickButton.py
@@ -11,8 +11,8 @@
 from Screens.LocationBox import LocationBox
 from Plugins.Plugin import PluginDescriptor
 from Screens.Standby import TryQuitMainloop
-from QuickButtonList import QuickButtonList, QuickButtonListEntry
-from QuickButtonXML import QuickButtonXML
+from .QuickButtonList import QuickButtonList, QuickButtonListEntry
+from .QuickButtonXML import QuickButtonXML
 from enigma import getDesktop
 from Tools.Directories import *
 import xml.sax.xmlreader
@@ -179,7 +179,7 @@
 					timeout = 5
 					)
 		else:
-			print "[MultiQuickButton] backup cancel"
+			print("[MultiQuickButton] backup cancel")
 
 	def callOverwriteBackup(self, res):
 		if res:
@@ -203,7 +203,7 @@
 			else:
 				self.session.open(MessageBox,_("File %s nonexistent.") % (path),type = MessageBox.TYPE_ERROR,timeout = 5)
 		else:
-			print "[MultiQuickButton] backup cancel"
+			print("[MultiQuickButton] backup cancel")
 			
 	def callOverwriteSettings(self, res):
 		if res:
@@ -217,7 +217,7 @@
 		else:
 			config.plugins.QuickButton.enable.setValue(True)
 
-		print "[MultiQuickButton] enable: ",config.plugins.QuickButton.enable.getValue()
+		print("[MultiQuickButton] enable: ",config.plugins.QuickButton.enable.getValue())
 		self.updateSettings()
 		config.plugins.QuickButton.enable.save()
 		self.session.openWithCallback(self.callRestart,MessageBox,"Restarting Enigma2 to set\nMulti QuickButton Autostart", MessageBox.TYPE_YESNO, timeout=10)
@@ -304,7 +304,7 @@
 					list.append(QuickButtonListEntry('green',(e[0], '1')))
 				else:
 					list.append(QuickButtonListEntry('red',(e[0], '')))
-		except Exception, e:
+		except Exception as e:
 			self.e = e
 			list = []
 		
@@ -333,7 +333,7 @@
 	def error(self):
 		if self.e:
 			self.session.open(MessageBox,("XML " + _("Error") + ": %s" % self.e),  MessageBox.TYPE_ERROR)
-			print "[MultiQuickButton] XML ERROR: ",self.e
+			print("[MultiQuickButton] XML ERROR: ",self.e)
 			self.close(None)
 
 			
@@ -446,8 +446,8 @@
 	def delete(self):
 		self.changed = True
 		name = self["list"].l.getCurrentSelection()[0][0]
-        	if name and name <> "--":
-			print "[MultiquickButton] delete: ", name
+        	if name and name != "--":
+			print("[MultiquickButton] delete: ", name)
 			self.XML_db.rmEntry(name)
 
 			list = []
--- a/multiquickbutton/src/QuickButtonXML.py
+++ b/multiquickbutton/src/QuickButtonXML.py
@@ -54,7 +54,7 @@
 	
 	def getSelection(self):
 		selection = []
-		if self.list <> []:
+		if self.list != []:
 			for i in self.list:
 				if i[1] == "1":
 					selection.append((i))
@@ -64,7 +64,7 @@
 		
 	def setSelection(self, name, sel):
 		selection = []
-		if self.list <> []:
+		if self.list != []:
 			for i in self.list:
 				if i[0] == name:
 					selection.append((i[0], sel, i[2], i[3], i[4], i[5]))
@@ -77,7 +77,7 @@
 
 	def rmEntry(self, name):
 		selection = []
-		if self.list <> []:
+		if self.list != []:
 			for i in self.list:
 				if i[0] == name:
 					pass
@@ -89,7 +89,7 @@
 		return self.list
 		
 	def addPluginEntry(self, name):
-		if name <> None:
+		if name != None:
 			code = "\nfor plugin in plugins.getPlugins([PluginDescriptor.WHERE_PLUGINMENU ,PluginDescriptor.WHERE_EXTENSIONSMENU, PluginDescriptor.WHERE_EVENTINFO]):\n	if plugin.name == _(\""+ name + "\"):\n		runPlugin(self, plugin)\n		break\n"
 
 		else:
@@ -97,7 +97,7 @@
 			
 		idx = 0
 			
-		if self.list <> []:
+		if self.list != []:
 			for i in self.list:
 				if i[2] == "Menu":
 					idx += 1
@@ -121,18 +121,18 @@
 		return self.list
 		
 	def mkContent(self, n):
-		if n <> None:
+		if n != None:
 			xml = "\t\t<content>\n"
 			xml += "\t\t\t<name>" + stringToXML(n[0]) + "</name>\n"
-			if n[1] <> "":
+			if n[1] != "":
 				xml += "\t\t\t<sel>1</sel>\n"
-			if n[3] <> "":
+			if n[3] != "":
 				xml += "\t\t\t<module>" + n[3] + "</module>\n"
 		
-			if n[4] <> "":
+			if n[4] != "":
 				xml += "\t\t\t<screen><![CDATA[" + n[4] + "]]></screen>\n"
 		
-			if n[5] <> "":
+			if n[5] != "":
 				xml += "\t\t\t<code><![CDATA[" + n[5] + "]]></code>\n"
 						
 			xml += "\t\t</content>\n"
@@ -141,12 +141,12 @@
 
 	def saveMenu(self,path):
 		xml = "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n"
-		if self.list <> None:
+		if self.list != None:
 			category = self.list[0][2]
 			xml += "<xml>\n\t<" + category + ">\n"
 		
 			for n in self.list:
-				if n[0] <> "--":
+				if n[0] != "--":
 					if category == n[2]:
 						xml += self.mkContent(n)
 					else:
--- a/multiquickbutton/src/plugin.py
+++ b/multiquickbutton/src/plugin.py
@@ -12,8 +12,8 @@
 from Plugins.Plugin import PluginDescriptor
 from Components.config import config, ConfigSubsection, ConfigYesNo
 from Screens.MessageBox import MessageBox
-from QuickButtonXML import QuickButtonXML
-from MultiQuickButton import MultiQuickButton, QuickButton
+from .QuickButtonXML import QuickButtonXML
+from .MultiQuickButton import MultiQuickButton, QuickButton
 from  Screens.InfoBarGenerics import InfoBarPlugins
 import xml.sax.xmlreader
 import os.path
@@ -27,9 +27,9 @@
 def autostart(reason, **kwargs):
 	if reason == 0:
 		if config.plugins.QuickButton.enable.value:
-			print line
-			print "[MultiQuickButton] enabled: ",config.plugins.QuickButton.enable.getValue()
-			print line
+			print(line)
+			print("[MultiQuickButton] enabled: ",config.plugins.QuickButton.enable.getValue())
+			print(line)
 			global baseInfoBarPlugins__init__, baserunPlugin
 			if "session" in kwargs:
 				session = kwargs["session"]
@@ -46,11 +46,11 @@
 				InfoBarPlugins.quickSelectGlobal = quickSelectGlobal
 
 		else:
-			print line
-			print "[MultiQuickButton] disabled"
-			print line
+			print(line)
+			print("[MultiQuickButton] disabled")
+			print(line)
 	else:
-		print "[MultiQuickButton] checking keymap.xml..."
+		print("[MultiQuickButton] checking keymap.xml...")
 		import os
 		if os.path.exists("/usr/share/enigma2/keymap.xml"):
 			com = "/usr/lib/enigma2/python/Plugins/Extensions/MultiQuickButton/keymap_patch.sh"
@@ -105,11 +105,11 @@
 		menu = xml.dom.minidom.parse(path)
 		db = QuickButtonXML(menu)
 		list = db.getSelection()
-	except Exception, e:
+	except Exception as e:
 		self.session.open(MessageBox,("XML " + _("Error") + ": %s" % (e)),  MessageBox.TYPE_ERROR)
-		print "[MultiQuickbutton] ERROR: ",e
+		print("[MultiQuickbutton] ERROR: ",e)
 		
-	if list <> None:
+	if list != None:
 		if len(list) == 1:
 			self.execQuick(list[0])
 
@@ -136,25 +136,25 @@
 	return quickList
 	
 def execQuick(self,entry):
-	if entry <> None:
-		if entry[3] <> "":
+	if entry != None:
+		if entry[3] != "":
 			try:
 				module_import = "from " + entry[3] + " import *"
 				exec(module_import)
-				if entry[4] <> "":
+				if entry[4] != "":
 					try:
 						screen = "self.session.open(" + entry[4] + ")"
 						exec(screen)
-					except Exception, e:
+					except Exception as e:
 						self.session.open(MessageBox,("Screen " + _("Error") + ": %s" % (e)),  MessageBox.TYPE_ERROR)
 						
-			except Exception, e:
+			except Exception as e:
 				self.session.open(MessageBox,("Module " + _("Error") + ": %s" % (e)),  MessageBox.TYPE_ERROR)
 			
-		if entry[5] <> "":
+		if entry[5] != "":
 			try:
 				exec(entry[5])
-			except Exception, e:
+			except Exception as e:
 				self.session.open(MessageBox,("Code " + _("Error") + ": %s" % (e)),  MessageBox.TYPE_ERROR)
 
 def quickSelectGlobal(self, key):
@@ -169,7 +169,7 @@
 class MQBActionMap(ActionMap):
 	def action(self, contexts, action):
 		quickSelection = ('red','green','yellow','blue','vformat','picasa','shoutcast','youtube','find','f1','f2','f3','f4','sleep','spark','sat','fav','info','epg','file','playmode','usb','tvradio','tvsat','recall')
-		if (action in quickSelection and self.actions.has_key(action)):
+		if (action in quickSelection and action in self.actions):
 			res = self.actions[action](action)
 			if res is not None:
 				return res
--- a/multirc/src/plugin.py
+++ b/multirc/src/plugin.py
@@ -97,7 +97,7 @@
 		self.close()
 
 def write_mask(fname, value):
-	print "MultiRC:", fname, value
+	print("MultiRC:", fname, value)
 	f = open(fname, "w")
 	f.write(value)
 	f.close()
@@ -123,8 +123,8 @@
 		if MASK2:
 			write_mask(MASK2, mask2)
 
-	except Exception, e:
-		print "MultiRC failed:", e
+	except Exception as e:
+		print("MultiRC failed:", e)
 		return False
 	return True
 
--- a/mytube/src/MyTubeSearch.py
+++ b/mytube/src/MyTubeSearch.py
@@ -1,5 +1,5 @@
 from enigma import eListboxPythonMultiContent, RT_HALIGN_LEFT, RT_HALIGN_RIGHT, gFont, eTimer
-from MyTubeService import GoogleSuggestions
+from .MyTubeService import GoogleSuggestions
 from Screens.Screen import Screen
 from Screens.LocationBox import MovieLocationBox
 from Components.config import config, ConfigText, getConfigListEntry
@@ -16,9 +16,9 @@
 from threading import Thread
 from threading import Condition
 from xml.etree.cElementTree import parse as cet_parse
-from StringIO import StringIO
+from io import StringIO
 #import urllib
-from urllib import FancyURLopener
+from urllib.request import FancyURLopener
 
 class MyOpener(FancyURLopener):
 	version = 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12'
@@ -188,9 +188,9 @@
 					name = None
 					numresults = None
 					for subelement in suggestion:
-						if subelement.attrib.has_key('data'):
+						if 'data' in subelement.attrib:
 							name = subelement.attrib['data'].encode("UTF-8")
-						if subelement.attrib.has_key('int'):
+						if 'int' in subelement.attrib:
 							numresults = subelement.attrib['int']
 						if name and numresults:
 							self.suggestlist.append((name, numresults ))
@@ -208,43 +208,43 @@
 		return len(self.list)
 
 	def up(self):
-		print "up"
+		print("up")
 		if self.list and len(self.list) > 0:
 			self["suggestionslist"].selectPrevious()
 			return self.getSelection()
 
 	def down(self):
-		print "down"
+		print("down")
 		if self.list and len(self.list) > 0:
 			self["suggestionslist"].selectNext()
 			return self.getSelection()
 	
 	def pageUp(self):
-		print "up"
+		print("up")
 		if self.list and len(self.list) > 0:
 			self["suggestionslist"].selectPrevious()
 			return self.getSelection()
 
 	def pageDown(self):
-		print "down"
+		print("down")
 		if self.list and len(self.list) > 0:
 			self["suggestionslist"].selectNext()
 			return self.getSelection()
 
 	def activate(self):
-		print "activate"
+		print("activate")
 		self.activeState = True
 		return self.getSelection()
 
 	def deactivate(self):
-		print "deactivate"
+		print("deactivate")
 		self.activeState = False
 		return self.getSelection()
 
 	def getSelection(self):
 		if self["suggestionslist"].getCurrent() is None:
 			return None
-		print self["suggestionslist"].getCurrent()[0]
+		print(self["suggestionslist"].getCurrent()[0])
 		return self["suggestionslist"].getCurrent()[0]
 
 	def enableSelection(self,value):
@@ -333,7 +333,7 @@
 		current = self["config"].getCurrent()
 
 	def newConfig(self):
-		print "newConfig", self["config"].getCurrent()
+		print("newConfig", self["config"].getCurrent())
 		if self["config"].getCurrent() == self.loadFeedEntry:
 			self.createSetup()
 
@@ -371,13 +371,13 @@
 		self.newConfig()
 
 	def keyCancel(self):
-		print "cancel"
+		print("cancel")
 		for x in self["config"].list:
 			x[1].cancel()
 		self.close()	
 
 	def keySave(self):
-		print "saving"
+		print("saving")
 		config.plugins.mytube.search.orderBy.save()
 		config.plugins.mytube.search.racy.save()
 		config.plugins.mytube.search.categories.save()
@@ -479,14 +479,14 @@
 
 	def keyOK(self):
 		current = self["tasklist"].getCurrent()
-		print current
+		print(current)
 		if current:
 			job = current[0]
 			from Screens.TaskView import JobView
 			self.session.openWithCallback(self.JobViewCB, JobView, job)
 	
 	def JobViewCB(self, why):
-		print "WHY---",why
+		print("WHY---",why)
 
 	def keyCancel(self):
 		self.close()	
@@ -515,17 +515,17 @@
 		Screen.__init__(self, session)
 		self.session = session
 		self.historylist = []
-		print "self.historylist",self.historylist
+		print("self.historylist",self.historylist)
 		self["historylist"] = List(self.historylist)
 		self.activeState = False
 		
 	def activate(self):
-		print "activate"
+		print("activate")
 		self.activeState = True
 		self.history = config.plugins.mytube.general.history.value.split(',')
 		if self.history[0] == '':
 			del self.history[0]
-		print "self.history",self.history
+		print("self.history",self.history)
 		self.historylist = []
 		for entry in self.history:
 			self.historylist.append(( str(entry),))
@@ -533,36 +533,36 @@
 		self["historylist"].updateList(self.historylist)
 
 	def deactivate(self):
-		print "deactivate"
+		print("deactivate")
 		self.activeState = False
 
 	def status(self):
-		print self.activeState
+		print(self.activeState)
 		return self.activeState
 	
 	def getSelection(self):
 		if self["historylist"].getCurrent() is None:
 			return None
-		print self["historylist"].getCurrent()[0]
+		print(self["historylist"].getCurrent()[0])
 		return self["historylist"].getCurrent()[0]
 
 	def up(self):
-		print "up"
+		print("up")
 		self["historylist"].selectPrevious()
 		return self.getSelection()
 
 	def down(self):
-		print "down"
+		print("down")
 		self["historylist"].selectNext()
 		return self.getSelection()
 	
 	def pageUp(self):
-		print "up"
+		print("up")
 		self["historylist"].selectPrevious()
 		return self.getSelection()
 
 	def pageDown(self):
-		print "down"
+		print("down")
 		self["historylist"].selectNext()
 		return self.getSelection()
 
--- a/mytube/src/MyTubeService.py
+++ b/mytube/src/MyTubeService.py
@@ -1,21 +1,22 @@
 # -*- coding: iso-8859-1 -*-
 from enigma import ePythonMessagePump
 
-from __init__ import decrypt_block
-from ThreadQueue import ThreadQueue
+from .__init__ import decrypt_block
+from .ThreadQueue import ThreadQueue
 import gdata.youtube
 import gdata.youtube.service
 from gdata.service import BadAuthentication
 
 from twisted.web import client
 from twisted.internet import reactor
-from urllib2 import Request, URLError, urlopen as urlopen2
+from urllib.request import Request, urlopen as urlopen2
+from urllib.error import URLError
 from socket import gaierror, error
 import os, socket
-from urllib import quote, unquote_plus, unquote
-from httplib import HTTPConnection, CannotSendRequest, BadStatusLine, HTTPException
-
-from urlparse import parse_qs
+from urllib.parse import quote, unquote_plus, unquote
+from http.client import HTTPConnection, CannotSendRequest, BadStatusLine, HTTPException
+
+from urllib.parse import parse_qs
 from threading import Thread
 
 HTTPConnection.debuglevel = 1
@@ -72,13 +73,13 @@
 			try:
 				self.conn.request("GET", querry)
 			except (CannotSendRequest, gaierror, error):
-				print "[MyTube]  Can not send request for suggestions"
+				print("[MyTube]  Can not send request for suggestions")
 				self.gotFeed(None)
 			else:
 				try:
 					response = self.conn.getresponse()
 				except BadStatusLine:
-					print "[MyTube]  Can not get a response from google"
+					print("[MyTube]  Can not get a response from google")
 					self.gotFeed(None)
 				else:
 					if response.status == 200:
@@ -189,7 +190,7 @@
 		# show thumbnails
 		list = []
 		for thumbnail in self.entry.media.thumbnail:
-			print 'Thumbnail url: %s' % thumbnail.url
+			print('Thumbnail url: %s' % thumbnail.url)
 			list.append(str(thumbnail.url))
 		EntryDetails['Thumbnails'] = list
 		#print EntryDetails
@@ -212,10 +213,10 @@
 		watch_url = 'http://www.youtube.com/watch?v=%s&gl=US&hl=en' % video_id
 		watchrequest = Request(watch_url, None, std_headers)
 		try:
-			print "[MyTube] trying to find out if a HD Stream is available",watch_url
+			print("[MyTube] trying to find out if a HD Stream is available",watch_url)
 			watchvideopage = urlopen2(watchrequest).read()
-		except (URLError, HTTPException, socket.error), err:
-			print "[MyTube] Error: Unable to retrieve watchpage - Error code: ", str(err)
+		except (URLError, HTTPException, socket.error) as err:
+			print("[MyTube] Error: Unable to retrieve watchpage - Error code: ", str(err))
 			return video_url
 
 		# Get video info
@@ -227,32 +228,32 @@
 				videoinfo = parse_qs(infopage)
 				if ('url_encoded_fmt_stream_map' or 'fmt_url_map') in videoinfo:
 					break
-			except (URLError, HTTPException, socket.error), err:
-				print "[MyTube] Error: unable to download video infopage",str(err)
+			except (URLError, HTTPException, socket.error) as err:
+				print("[MyTube] Error: unable to download video infopage",str(err))
 				return video_url
 
 		if ('url_encoded_fmt_stream_map' or 'fmt_url_map') not in videoinfo:
 			# Attempt to see if YouTube has issued an error message
 			if 'reason' not in videoinfo:
-				print '[MyTube] Error: unable to extract "fmt_url_map" or "url_encoded_fmt_stream_map" parameter for unknown reason'
+				print('[MyTube] Error: unable to extract "fmt_url_map" or "url_encoded_fmt_stream_map" parameter for unknown reason')
 			else:
 				reason = unquote_plus(videoinfo['reason'][0])
-				print '[MyTube] Error: YouTube said: %s' % reason.decode('utf-8')
+				print('[MyTube] Error: YouTube said: %s' % reason.decode('utf-8'))
 			return video_url
 
 		video_fmt_map = {}
 		fmt_infomap = {}
-		if videoinfo.has_key('url_encoded_fmt_stream_map'):
+		if 'url_encoded_fmt_stream_map' in videoinfo:
 			tmp_fmtUrlDATA = videoinfo['url_encoded_fmt_stream_map'][0].split(',')
 		else:
 			tmp_fmtUrlDATA = videoinfo['fmt_url_map'][0].split(',')
 		for fmtstring in tmp_fmtUrlDATA:
 			fmturl = fmtid = fmtsig = ""
-			if videoinfo.has_key('url_encoded_fmt_stream_map'):
+			if 'url_encoded_fmt_stream_map' in videoinfo:
 				try:
 					for arg in fmtstring.split('&'):
 						if arg.find('=') >= 0:
-							print arg.split('=')
+							print(arg.split('='))
 							key, value = arg.split('=')
 							if key == 'itag':
 								if len(value) > 3:
@@ -263,42 +264,42 @@
 							elif key == 'sig':
 								fmtsig = value
 
-					if fmtid != "" and fmturl != "" and fmtsig != ""  and VIDEO_FMT_PRIORITY_MAP.has_key(fmtid):
+					if fmtid != "" and fmturl != "" and fmtsig != ""  and fmtid in VIDEO_FMT_PRIORITY_MAP:
 						video_fmt_map[VIDEO_FMT_PRIORITY_MAP[fmtid]] = { 'fmtid': fmtid, 'fmturl': unquote_plus(fmturl), 'fmtsig': fmtsig }
 						fmt_infomap[int(fmtid)] = "%s&signature=%s" %(unquote_plus(fmturl), fmtsig)
 					fmturl = fmtid = fmtsig = ""
 
 				except:
-					print "error parsing fmtstring:",fmtstring
+					print("error parsing fmtstring:",fmtstring)
 
 			else:
 				(fmtid,fmturl) = fmtstring.split('|')
-			if VIDEO_FMT_PRIORITY_MAP.has_key(fmtid) and fmtid != "":
+			if fmtid in VIDEO_FMT_PRIORITY_MAP and fmtid != "":
 				video_fmt_map[VIDEO_FMT_PRIORITY_MAP[fmtid]] = { 'fmtid': fmtid, 'fmturl': unquote_plus(fmturl) }
 				fmt_infomap[int(fmtid)] = unquote_plus(fmturl)
-		print "[MyTube] got",sorted(fmt_infomap.iterkeys())
+		print("[MyTube] got",sorted(fmt_infomap.keys()))
 		if video_fmt_map and len(video_fmt_map):
-			print "[MyTube] found best available video format:",video_fmt_map[sorted(video_fmt_map.iterkeys())[0]]['fmtid']
-			best_video = video_fmt_map[sorted(video_fmt_map.iterkeys())[0]]
+			print("[MyTube] found best available video format:",video_fmt_map[sorted(video_fmt_map.keys())[0]]['fmtid'])
+			best_video = video_fmt_map[sorted(video_fmt_map.keys())[0]]
 			video_url = "%s&signature=%s" %(best_video['fmturl'].split(';')[0], best_video['fmtsig'])
-			print "[MyTube] found best available video url:",video_url
+			print("[MyTube] found best available video url:",video_url)
 		
 		return video_url
 	
 	def getRelatedVideos(self):
-		print "[MyTubeFeedEntry] getRelatedVideos()"
+		print("[MyTubeFeedEntry] getRelatedVideos()")
 		for link in self.entry.link:
 			#print "Related link: ", link.rel.endswith
 			if link.rel.endswith("video.related"):
-				print "Found Related: ", link.href
+				print("Found Related: ", link.href)
 				return link.href
 
 	def getResponseVideos(self):
-		print "[MyTubeFeedEntry] getResponseVideos()"
+		print("[MyTubeFeedEntry] getResponseVideos()")
 		for link in self.entry.link:
 			#print "Responses link: ", link.rel.endswith
 			if link.rel.endswith("video.responses"):
-				print "Found Responses: ", link.href
+				print("Found Responses: ", link.href)
 				return link.href
 
 class MyTubePlayerService():
@@ -306,12 +307,12 @@
 #	ClientId: ytapi-dream-MyTubePlayer-i0kqrebg-0
 #	DeveloperKey: AI39si4AjyvU8GoJGncYzmqMCwelUnqjEMWTFCcUtK-VUzvWygvwPO-sadNwW5tNj9DDCHju3nnJEPvFy4WZZ6hzFYCx8rJ6Mw
 	def __init__(self):
-		print "[MyTube] MyTubePlayerService - init"
+		print("[MyTube] MyTubePlayerService - init")
 		self.feedentries = []
 		self.feed = None
 				
 	def startService(self):
-		print "[MyTube] MyTubePlayerService - startService"
+		print("[MyTube] MyTubePlayerService - startService")
 		self.yt_service = gdata.youtube.service.YouTubeService( 
 			developer_key = 'AI39si4AjyvU8GoJGncYzmqMCwelUnqjEMWTFCcUtK-VUzvWygvwPO-sadNwW5tNj9DDCHju3nnJEPvFy4WZZ6hzFYCx8rJ6Mw',
 			client_id = 'ytapi-dream-MyTubePlayer-i0kqrebg-0' 
@@ -324,11 +325,11 @@
 		#	print a
 
 	def stopService(self):
-		print "[MyTube] MyTubePlayerService - stopService"
+		print("[MyTube] MyTubePlayerService - stopService")
 		del self.ytService
 
 	def getFeed(self, url, callback = None, errorback = None):
-		print "[MyTube] MyTubePlayerService - getFeed:",url
+		print("[MyTube] MyTubePlayerService - getFeed:",url)
 		self.feedentries = []
 		queryThread = YoutubeQueryThread(self.yt_service.GetYouTubeVideoFeed, url, self.gotFeed, self.gotFeedError, callback, errorback)
 		queryThread.start()
@@ -338,7 +339,7 @@
 					orderby = "relevance", racy = "include", 
 					author = "", lr = "", categories = "", sortOrder = "ascending", 
 					callback = None, errorback = None):
-		print "[MyTube] MyTubePlayerService - search()"
+		print("[MyTube] MyTubePlayerService - search()")
 		self.feedentries = []
 		query = gdata.youtube.service.YouTubeVideoQuery()
 		query.vq = searchTerms
@@ -409,7 +410,7 @@
 			feed = self.query(self.param)
 			self.messages.push((True, feed, self.callback))
 			self.messagePump.send(0)
-		except Exception, ex:
+		except Exception as ex:
 			self.messages.push((False, ex, self.errorback))
 			self.messagePump.send(0)			
 	
--- a/mytube/src/__init__.py
+++ b/mytube/src/__init__.py
@@ -2,6 +2,7 @@
 from Components.Language import language
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_LANGUAGE
 import os, gettext, hashlib
+from functools import reduce
 PluginLanguageDomain = "MyTube"
 PluginLanguagePath = "Extensions/MyTube/locale"
 
@@ -16,7 +17,7 @@
 	return t
 
 def bin2long(s):
-	return reduce( lambda x,y:(x<<8L)+y, map(ord, s))
+	return reduce( lambda x,y:(x<<8)+y, list(map(ord, s)))
 
 def long2bin(l):
 	res = ""
--- a/mytube/src/plugin.py
+++ b/mytube/src/plugin.py
@@ -12,8 +12,8 @@
 from Components.Task import Task, Job, job_manager
 from Components.config import config, ConfigSelection, ConfigSubsection, ConfigText, ConfigYesNo, getConfigListEntry
 #, ConfigIP, ConfigNumber, ConfigLocations
-from MyTubeSearch import ConfigTextWithGoogleSuggestions, MyTubeSettingsScreen, MyTubeTasksScreen, MyTubeHistoryScreen
-from MyTubeService import validate_cert, get_rnd, myTubeService
+from .MyTubeSearch import ConfigTextWithGoogleSuggestions, MyTubeSettingsScreen, MyTubeTasksScreen, MyTubeHistoryScreen
+from .MyTubeService import validate_cert, get_rnd, myTubeService
 from Plugins.Plugin import PluginDescriptor
 from Screens.ChoiceBox import ChoiceBox
 from Screens.InfoBarGenerics import InfoBarNotifications
@@ -24,7 +24,7 @@
 from Tools.Directories import resolveFilename, SCOPE_HDD, SCOPE_CURRENT_PLUGIN
 from Tools.Downloader import downloadWithProgress
 
-from __init__ import decrypt_block
+from .__init__ import decrypt_block
 
 from enigma import eTPM, eTimer, ePoint, RT_HALIGN_LEFT, RT_VALIGN_CENTER, gFont, ePicLoad, eServiceReference, iPlayableService
 from os import path as os_path, remove as os_remove
@@ -172,13 +172,13 @@
 		self.progress = int(self.end*recvbytes/float(totalbytes))
 	
 	def http_finished(self, string=""):
-		print "[http_finished]" + str(string)
+		print("[http_finished]" + str(string))
 		Task.processFinished(self, 0)
 	
 	def http_failed(self, failure_instance=None, error_message=""):
 		if error_message == "" and failure_instance is not None:
 			error_message = failure_instance.getErrorMessage()
-			print "[http_failed] " + error_message
+			print("[http_failed] " + error_message)
 			Task.processFinished(self, 1)
 
 
@@ -397,11 +397,11 @@
 
 		self.l3key = validate_cert(l3cert, self.l2key)
 		if self.l3key is None:
-			print "l3cert invalid"
+			print("l3cert invalid")
 			return
 		rnd = get_rnd()
 		if rnd is None:
-			print "random error"
+			print("random error")
 			return
 
 		val = etpm.challenge(rnd)
@@ -460,7 +460,7 @@
 				self["feedlist"].style = "state"
 				self['feedlist'].setList(self.statuslist)
 			else:
-				print "Genuine Dreambox validation passed"
+				print("Genuine Dreambox validation passed")
 				if self.FirstRun == True:
 					self.appendEntries = False
 					myTubeService.startService()
@@ -493,7 +493,7 @@
 
 
 	def handleHelpWindow(self):
-		print "[handleHelpWindow]"
+		print("[handleHelpWindow]")
 		if self.currList == "configlist":
 			self.hideSuggestions()
 			self.session.openWithCallback(self.ScreenClosed, MyTubeVideoHelpScreen, self.skin_path, wantedinfo = self.searchtext, wantedtitle = _("MyTubePlayer Help") )
@@ -501,7 +501,7 @@
 			self.session.openWithCallback(self.ScreenClosed, MyTubeVideoHelpScreen, self.skin_path, wantedinfo = self.feedtext, wantedtitle = _("MyTubePlayer Help") )
 			
 	def handleFirstHelpWindow(self):
-		print "[handleFirstHelpWindow]"
+		print("[handleFirstHelpWindow]")
 		if config.plugins.mytube.general.showHelpOnOpen.value is True:
 			if self.currList == "configlist":
 				self.hideSuggestions()
@@ -540,7 +540,7 @@
 	def openMenu(self, answer):
 		answer = answer and answer[1]
 		if answer == "settings":
-			print "settings selected"
+			print("settings selected")
 			self.session.openWithCallback(self.ScreenClosed,MyTubeSettingsScreen, self.skin_path )
 		elif answer == "related":
 			current = self["feedlist"].getCurrent()[0]
@@ -572,7 +572,7 @@
 		self.session.openWithCallback(self.SearchEntryCallback, VirtualKeyBoard, title = (_("Enter your search term(s)")), text = config.plugins.mytube.search.searchTerm.value)
 
 	def ScreenClosed(self):
-		print "ScreenCLosed, restoring old window state"
+		print("ScreenCLosed, restoring old window state")
 		if self.currList == "historylist":
 			if self.HistoryWindow.status() is False:
 				self.HistoryWindow.activate()
@@ -626,7 +626,7 @@
 			self.leavePlayerConfirmed([True, how])
 
 	def leavePlayer(self):
-		print "leavePlayer"
+		print("leavePlayer")
 		if self.HistoryWindow is not None:
 			self.HistoryWindow.deactivate()
 			self.HistoryWindow.instance.hide()
@@ -690,13 +690,13 @@
 		self.close()
 			
 	def keyOK(self):
-		print "self.currList im KeyOK",self.currList
+		print("self.currList im KeyOK",self.currList)
 		if self.currList == "configlist" or self.currList == "suggestionslist":
 			self["config"].invalidateCurrent()
 			if config.plugins.mytube.search.searchTerm.value != "":
 				self.add2History()
 				searchContext = config.plugins.mytube.search.searchTerm.value
-				print "Search searchcontext",searchContext
+				print("Search searchcontext",searchContext)
 				if isinstance(self["config"].getCurrent()[1], ConfigTextWithGoogleSuggestions) and not self.propagateUpDownNormally:
 					self.propagateUpDownNormally = True
 					self["config"].getCurrent()[1].deactivateSuggestionList()
@@ -705,11 +705,11 @@
 		elif self.currList == "feedlist":
 			current = self[self.currList].getCurrent()
 			if current:
-				print current
+				print(current)
 				myentry = current[0]
 				if myentry is not None:
 					myurl = myentry.getVideoUrl()
-					print "Playing URL",myurl
+					print("Playing URL",myurl)
 					if myurl is not None:
 						myreference = eServiceReference(4097,0,myurl)
 						myreference.setName(myentry.getTitle())
@@ -722,12 +722,12 @@
 			self["config"].invalidateCurrent()
 			if config.plugins.mytube.search.searchTerm.value != "":
 				searchContext = config.plugins.mytube.search.searchTerm.value
-				print "Search searchcontext",searchContext
+				print("Search searchcontext",searchContext)
 				self.setState('getSearchFeed')
 				self.runSearch(searchContext)
 
 	def keyUp(self):
-		print "self.currList im KeyUp",self.currList
+		print("self.currList im KeyUp",self.currList)
 		if self.currList == "suggestionslist":
 			if config.plugins.mytube.search.searchTerm.value != "":
 				if not self.propagateUpDownNormally:
@@ -740,15 +740,15 @@
 				self.HistoryWindow.up()
 
 	def keyDown(self):
-		print "self.currList im KeyDown",self.currList
+		print("self.currList im KeyDown",self.currList)
 		if self.currList == "suggestionslist":
 			if config.plugins.mytube.search.searchTerm.value != "":
 				if not self.propagateUpDownNormally:
 					self["config"].getCurrent()[1].suggestionListDown()
 					self["config"].invalidateCurrent()
 		elif self.currList == "feedlist":
-			print self[self.currList].count()
-			print self[self.currList].index
+			print(self[self.currList].count())
+			print(self[self.currList].index)
 			if self[self.currList].index == self[self.currList].count()-1 and myTubeService.getNextFeedEntriesURL() is not None:
 				self.session.openWithCallback(self.getNextEntries, MessageBox, _("Do you want to see more entries?"))
 			else:
@@ -757,7 +757,7 @@
 			if self.HistoryWindow is not None and self.HistoryWindow.shown:
 				self.HistoryWindow.down()
 	def keyRight(self):
-		print "self.currList im KeyRight",self.currList
+		print("self.currList im KeyRight",self.currList)
 		if self.propagateUpDownNormally:
 			ConfigListScreen.keyRight(self)
 		else:
@@ -770,7 +770,7 @@
 					self.HistoryWindow.pageDown()
 
 	def keyLeft(self):
-		print "self.currList im kEyLeft",self.currList
+		print("self.currList im kEyLeft",self.currList)
 		if self.propagateUpDownNormally:
 			ConfigListScreen.keyLeft(self)
 		else:
@@ -798,8 +798,8 @@
 		self.session.openWithCallback(self.openStandardFeedClosed, ChoiceBox, title=_("Select new feed to view."), list = menulist)
 
 	def handleSuggestions(self):
-		print "handleSuggestions"
-		print "self.currList",self.currList
+		print("handleSuggestions")
+		print("self.currList",self.currList)
 		if self.currList == "configlist":
 			self.switchToSuggestionsList()
 		elif self.currList == "historylist":
@@ -807,7 +807,7 @@
 				self.HistoryWindow.down()
 
 	def switchToSuggestionsList(self):
-		print "switchToSuggestionsList"
+		print("switchToSuggestionsList")
 		self.currList = "suggestionslist"
 		self["ButtonBlue"].hide()
 		self["VKeyIcon"].hide()	
@@ -825,7 +825,7 @@
 			self.HistoryWindow.instance.hide()
 	
 	def switchToConfigList(self):
-		print "switchToConfigList"
+		print("switchToConfigList")
 		self.currList = "configlist"
 		self["config_actions"].setEnabled(True)	
 		self["historyactions"].setEnabled(False)
@@ -853,9 +853,9 @@
 			self.handleFirstHelpWindow()
 
 	def switchToFeedList(self, append = False):
-		print "switchToFeedList"
-		print "switching to feedlist from:",self.currList
-		print "len(self.videolist):",len(self.videolist)
+		print("switchToFeedList")
+		print("switching to feedlist from:",self.currList)
+		print("len(self.videolist):",len(self.videolist))
 		if self.HistoryWindow is not None and self.HistoryWindow.shown:
 			self.HistoryWindow.deactivate()
 			self.HistoryWindow.instance.hide()
@@ -879,11 +879,11 @@
 
 
 	def switchToHistory(self):
-		print "switchToHistory"
+		print("switchToHistory")
 		self.oldlist = self.currList
 		self.currList = "historylist"
-		print "switchToHistory currentlist",self.currList
-		print "switchToHistory oldlist",self.oldlist
+		print("switchToHistory currentlist",self.currList)
+		print("switchToHistory oldlist",self.oldlist)
 		self.hideSuggestions()
 		self["ButtonBlue"].hide()
 		self["VKeyIcon"].hide()	
@@ -902,17 +902,17 @@
 			self.HistoryWindow = self.session.instantiateDialog(MyTubeHistoryScreen)
 		if self.currList in ("configlist","feedlist"):
 			if self.HistoryWindow.status() is False:
-				print "status is FALSE,switchToHistory"
+				print("status is FALSE,switchToHistory")
 				self.switchToHistory()
 		elif self.currList == "historylist":
 			self.closeHistory()
 
 	def closeHistory(self):
-		print "closeHistory currentlist",self.currList
-		print "closeHistory oldlist",self.oldlist
+		print("closeHistory currentlist",self.currList)
+		print("closeHistory oldlist",self.oldlist)
 		if self.currList == "historylist":
 			if self.HistoryWindow.status() is True:
-				print "status is TRUE, closing historyscreen"
+				print("status is TRUE, closing historyscreen")
 				self.HistoryWindow.deactivate()
 				self.HistoryWindow.instance.hide()
 				if self.oldlist == "configlist":
@@ -925,7 +925,7 @@
 			self.History = config.plugins.mytube.general.history.value.split(',')
 		if self.History[0] == '':
 			del self.History[0]
-		print "self.History im add",self.History
+		print("self.History im add",self.History)
 		if config.plugins.mytube.search.searchTerm.value in self.History:
 			self.History.remove((config.plugins.mytube.search.searchTerm.value))
 		self.History.insert(0,(config.plugins.mytube.search.searchTerm.value))
@@ -933,7 +933,7 @@
 			self.History.pop()
 		config.plugins.mytube.general.history.value = ",".join(self.History)
 		config.plugins.mytube.general.history.save()
-		print "configvalue",config.plugins.mytube.general.history.value
+		print("configvalue",config.plugins.mytube.general.history.value)
 
 	def hideSuggestions(self):
 		current = self["config"].getCurrent()
@@ -958,7 +958,7 @@
 	def getRelatedVideos(self, myentry):
 		if myentry:
 			myurl =  myentry.getRelatedVideos()
-			print "RELATEDURL--->",myurl
+			print("RELATEDURL--->",myurl)
 			if myurl is not None:
 				self.appendEntries = False
 				self.getFeed(myurl, _("Related video entries."))
@@ -966,19 +966,19 @@
 	def getResponseVideos(self, myentry):
 		if myentry:
 			myurl =  myentry.getResponseVideos()
-			print "RESPONSEURL--->",myurl
+			print("RESPONSEURL--->",myurl)
 			if myurl is not None:
 				self.appendEntries = False
 				self.getFeed(myurl, _("Response video entries."))
 
 	def runSearch(self, searchContext = None):
-		print "[MyTubePlayer] runSearch"
+		print("[MyTubePlayer] runSearch")
 		if searchContext is not None:
-			print "[MyTubePlayer] searchDialogClosed: ", searchContext
+			print("[MyTubePlayer] searchDialogClosed: ", searchContext)
 			self.searchFeed(searchContext)
 
 	def searchFeed(self, searchContext):
-		print "[MyTubePlayer] searchFeed"		
+		print("[MyTubePlayer] searchFeed")		
 		self.queryStarted()		
 		self.appendEntries = False
 		self.queryThread = myTubeService.search(searchContext, 
@@ -998,20 +998,20 @@
 		self.queryRunning = False
 	
 	def cancelThread(self):
-		print "[MyTubePlayer] cancelThread"
+		print("[MyTubePlayer] cancelThread")
 		if self.queryThread is not None:
 			self.queryThread.cancel()
 		self.queryFinished()
 	
 	def gotFeed(self, feed):
-		print "[MyTubePlayer] gotFeed"
+		print("[MyTubePlayer] gotFeed")
 		self.queryFinished()
 		if feed is not None:
 			self.ytfeed = feed
 		self.buildEntryList()
 	
 	def gotFeedError(self, exception):
-		print "[MyTubePlayer] gotFeedError"
+		print("[MyTubePlayer] gotFeedError")
 		self.queryFinished()
 		self.setState('Error')
 	
@@ -1040,7 +1040,7 @@
 					thumbnailUrl = entry.getThumbnailUrl(0)				
 					if thumbnailUrl is not None:
 						self.screenshotList.append((TubeID,thumbnailUrl))
-					if not self.Details.has_key(TubeID):
+					if TubeID not in self.Details:
 						self.Details[TubeID] = { 'thumbnail': None}
 					self.videolist.append(self.buildEntryComponent(entry, TubeID))
 				if len(self.videolist):
@@ -1063,7 +1063,7 @@
 					thumbnailUrl = entry.getThumbnailUrl(0)				
 					if thumbnailUrl is not None:
 						self.screenshotList.append((TubeID,thumbnailUrl))
-					if not self.Details.has_key(TubeID):
+					if TubeID not in self.Details:
 						self.Details[TubeID] = { 'thumbnail': None}
 					self.videolist.append(self.buildEntryComponent(entry, TubeID))
 				if len(self.videolist):
@@ -1078,7 +1078,7 @@
 					self["feedlist"].selectNext()
 					self.switchToFeedList(True)
 			if not self.timer_startDownload.isActive():
-				print "STARRTDOWNLOADTIMER IM BUILDENTRYLIST"
+				print("STARRTDOWNLOADTIMER IM BUILDENTRYLIST")
 				self.timer_startDownload.start(5)
 		else:
 			self.setState('Error')
@@ -1086,7 +1086,7 @@
 	
 	def buildEntryComponent(self, entry,TubeID):
 		Title = entry.getTitle()
-		print "Titel-->",Title
+		print("Titel-->",Title)
 		Description = entry.getDescription()
 		myTubeID = TubeID
 		PublishedDate = entry.getPublishedDate()
@@ -1127,15 +1127,15 @@
 				if myentry:
 					myurl = myentry.getVideoUrl()
 					if myurl is not None:
-						print "Got a URL to stream"
+						print("Got a URL to stream")
 						myreference = eServiceReference(4097,0,myurl)
 						myreference.setName(myentry.getTitle())
 						return myreference,False
 					else:
-						print "NoURL im getNextEntry"
+						print("NoURL im getNextEntry")
 						return None,True
 						
-		print "no more entries to play"
+		print("no more entries to play")
 		return None,False
 
 	def getPrevEntry(self):
@@ -1148,7 +1148,7 @@
 				if myentry:
 					myurl = myentry.getVideoUrl()
 					if myurl is not None:
-						print "Got a URL to stream"
+						print("Got a URL to stream")
 						myreference = eServiceReference(4097,0,myurl)
 						myreference.setName(myentry.getTitle())
 						return myreference,False
@@ -1166,7 +1166,7 @@
 			if current:
 				myentry = current[0]
 				if myentry:
-					print "Title im showVideoInfo",myentry.getTitle()
+					print("Title im showVideoInfo",myentry.getTitle())
 					videoinfos = myentry.PrintEntryDetails()
 					self.session.open(MyTubeVideoInfoScreen, self.skin_path, videoinfo = videoinfos )
 
@@ -1176,7 +1176,7 @@
 			thumbnailUrl = entry[1]
 			tubeid = entry[0]
 			thumbnailFile = "/tmp/"+str(tubeid)+".jpg"
-			if self.Details.has_key(tubeid):
+			if tubeid in self.Details:
 				if self.Details[tubeid]["thumbnail"] is None:
 					if thumbnailUrl is not None:
 						if tubeid not in self.pixmaps_to_load:
@@ -1191,11 +1191,11 @@
 							self.fetchFinished(False,tubeid, failed = True)
 
 	def fetchFailed(self,string,tubeid):
-		print "thumbnail-fetchFailed for: ",tubeid,string.getErrorMessage()
+		print("thumbnail-fetchFailed for: ",tubeid,string.getErrorMessage())
 		self.fetchFinished(False,tubeid, failed = True)
 
 	def fetchFinished(self,x,tubeid, failed = False):
-		print "thumbnail-fetchFinished for:",tubeid
+		print("thumbnail-fetchFinished for:",tubeid)
 		self.pixmaps_to_load.remove(tubeid)
 		if failed:
 			thumbnailFile = resolveFilename(SCOPE_CURRENT_PLUGIN, "Extensions/MyTube/plugin.png")
@@ -1212,18 +1212,18 @@
 			self.fetchFinished(False,tubeid, failed = True)
 
 	def finish_decode(self,tubeid,info):
-		print "thumbnail finish_decode:", tubeid,info
+		print("thumbnail finish_decode:", tubeid,info)
 		ptr = self.picloads[tubeid].getData()
 		thumbnailFile = "/tmp/"+str(tubeid)+".jpg"
 		if ptr != None:
-			if self.Details.has_key(tubeid):
+			if tubeid in self.Details:
 				self.Details[tubeid]["thumbnail"] = ptr
 			if (os_path.exists(thumbnailFile) == True):
 				os_remove(thumbnailFile)
 			del self.picloads[tubeid]
 		else:
 			del self.picloads[tubeid]
-			if self.Details.has_key(tubeid):
+			if tubeid in self.Details:
 				self.Details[tubeid]["thumbnail"] = None
 		self.timer_thumbnails.start(1)
 
@@ -1235,7 +1235,7 @@
 			idx = 0
 			for entry in self.videolist:
 				tubeid = entry[3]
-				if self.Details.has_key(tubeid):
+				if tubeid in self.Details:
 					if self.Details[tubeid]["thumbnail"] is not None:
 						thumbnail = entry[4]
 						if thumbnail == None:
@@ -1395,10 +1395,10 @@
 			pass
 
 	def fetchFailed(self, string, index, id):
-		print "[fetchFailed] for index:" + str(index) + "for ThumbID:" + id + string.getErrorMessage()
+		print("[fetchFailed] for index:" + str(index) + "for ThumbID:" + id + string.getErrorMessage())
 
 	def fetchFinished(self, string, index, id):
-		print "[fetchFinished] for index:" + str(index) + " for ThumbID:" + id
+		print("[fetchFinished] for index:" + str(index) + " for ThumbID:" + id)
 		self.decodePic(index)
 
 	def decodePic(self, index):
@@ -1410,19 +1410,19 @@
 				self.index = index
 				thumbnailFile = entry[2]
 				if (os_path.exists(thumbnailFile) == True):
-					print "[decodePic] DECODING THUMBNAIL for INDEX:"+  str(self.index) + "and file: " + thumbnailFile
+					print("[decodePic] DECODING THUMBNAIL for INDEX:"+  str(self.index) + "and file: " + thumbnailFile)
 					self.picloads[index].setPara((self["thumbnail"].instance.size().width(), self["thumbnail"].instance.size().height(), sc[0], sc[1], False, 1, "#00000000"))
 					self.picloads[index].startDecode(thumbnailFile)
 				else:
-					print "[decodePic] Thumbnail file NOT FOUND !!!-->:",thumbnailFile
+					print("[decodePic] Thumbnail file NOT FOUND !!!-->:",thumbnailFile)
 
 	def finish_decode(self, picindex = None, picInfo=None):
-		print "finish_decode - of INDEX", picindex
+		print("finish_decode - of INDEX", picindex)
 		ptr = self.picloads[picindex].getData()
 		if ptr != None:
 			self.thumbnails[picindex][3] = ptr
 			if (os_path.exists(self.thumbnails[picindex][2]) == True):
-				print "removing", self.thumbnails[picindex][2]
+				print("removing", self.thumbnails[picindex][2])
 				os_remove(self.thumbnails[picindex][2])
 				del self.picloads[picindex]
 				if len(self.picloads) == 0:
@@ -1554,7 +1554,7 @@
 		self.screen_timeout = 5000
 		self.nextservice = None
 
-		print "evEOF=%d" % iPlayableService.evEOF
+		print("evEOF=%d" % iPlayableService.evEOF)
 		self.__event_tracker = ServiceEventTracker(screen = self, eventmap =
 			{
 				iPlayableService.evSeekableStatusChanged: self.__seekableStatusChanged,
@@ -1593,8 +1593,8 @@
 		self.session.nav.stopService()
 
 	def __evEOF(self):
-		print "evEOF=%d" % iPlayableService.evEOF
-		print "Event EOF"
+		print("evEOF=%d" % iPlayableService.evEOF)
+		print("Event EOF")
 		self.handleLeave(config.plugins.mytube.general.on_movie_stop.value)
 
 	def __setHideTimer(self):
@@ -1624,9 +1624,9 @@
 			self.infoCallback()
 
 	def playNextFile(self):
-		print "playNextFile"
+		print("playNextFile")
 		nextservice,error = self.nextCallback()
-		print "nextservice--->",nextservice
+		print("nextservice--->",nextservice)
 		if nextservice is None:
 			self.handleLeave(config.plugins.mytube.general.on_movie_stop.value, error)
 		else:
@@ -1634,7 +1634,7 @@
 			self.showInfobar()
 
 	def playPrevFile(self):
-		print "playPrevFile"
+		print("playPrevFile")
 		prevservice,error = self.prevCallback()
 		if prevservice is None:
 			self.handleLeave(config.plugins.mytube.general.on_movie_stop.value, error)
@@ -1643,7 +1643,7 @@
 			self.showInfobar()
 
 	def playagain(self):
-		print "playagain"
+		print("playagain")
 		if self.state != self.STATE_IDLE:
 			self.stopCurrent()
 		self.play()
@@ -1664,24 +1664,24 @@
 			self.__setHideTimer()
 
 	def stopCurrent(self):
-		print "stopCurrent"
+		print("stopCurrent")
 		self.session.nav.stopService()
 		self.state = self.STATE_IDLE
 
 	def playpauseService(self):
-		print "playpauseService"
+		print("playpauseService")
 		if self.state == self.STATE_PLAYING:
 			self.pauseService()
 		elif self.state == self.STATE_PAUSED:
 			self.unPauseService()
 
 	def pauseService(self):
-		print "pauseService"
+		print("pauseService")
 		if self.state == self.STATE_PLAYING:
 			self.setSeekState(self.STATE_PAUSED)
 		
 	def unPauseService(self):
-		print "unPauseService"
+		print("unPauseService")
 		if self.state == self.STATE_PAUSED:
 			self.setSeekState(self.STATE_PLAYING)
 
@@ -1704,42 +1704,42 @@
 		return True
 
 	def __seekableStatusChanged(self):
-		print "seekable status changed!"
+		print("seekable status changed!")
 		if not self.isSeekable():
 			self.setSeekState(self.STATE_PLAYING)
 		else:
-			print "seekable"
+			print("seekable")
 
 	def __serviceStarted(self):
 		self.state = self.STATE_PLAYING
 		self.__seekableStatusChanged()
 
 	def setSeekState(self, wantstate):
-		print "setSeekState"
+		print("setSeekState")
 		if wantstate == self.STATE_PAUSED:
-			print "trying to switch to Pause- state:",self.STATE_PAUSED
+			print("trying to switch to Pause- state:",self.STATE_PAUSED)
 		elif wantstate == self.STATE_PLAYING:
-			print "trying to switch to playing- state:",self.STATE_PLAYING
+			print("trying to switch to playing- state:",self.STATE_PLAYING)
 		service = self.session.nav.getCurrentService()
 		if service is None:
-			print "No Service found"
+			print("No Service found")
 			return False
 		pauseable = service.pause()
 		if pauseable is None:
-			print "not pauseable."
+			print("not pauseable.")
 			self.state = self.STATE_PLAYING
 
 		if pauseable is not None:
-			print "service is pausable"
+			print("service is pausable")
 			if wantstate == self.STATE_PAUSED:
-				print "WANT TO PAUSE"
+				print("WANT TO PAUSE")
 				pauseable.pause()
 				self.state = self.STATE_PAUSED
 				if not self.shown:
 					self.hidetimer.stop()
 					self.show()
 			elif wantstate == self.STATE_PLAYING:
-				print "WANT TO PLAY"
+				print("WANT TO PLAY")
 				pauseable.unpause()
 				self.state = self.STATE_PLAYING
 				if self.shown:
@@ -1792,12 +1792,12 @@
 	l2 = False
 	l2cert = etpm.getCert(eTPM.TPMD_DT_LEVEL2_CERT)
 	if l2cert is None:
-		print "l2cert not found"
+		print("l2cert not found")
 		return
 	
 	l2key = validate_cert(l2cert, rootkey)
 	if l2key is None:
-		print "l2cert invalid"
+		print("l2cert invalid")
 		return
 	l2 = True
 	if l2:
--- a/namezap/src/plugin.py
+++ b/namezap/src/plugin.py
@@ -10,7 +10,7 @@
 from Screens.InfoBar import InfoBar
 from Components.config import config, ConfigSubsection, ConfigSelection
 
-from NamezapSetup import NamezapSetup
+from .NamezapSetup import NamezapSetup
 
 config.plugins.namezap = ConfigSubsection()
 config.plugins.namezap.style = ConfigSelection(choices = [
--- a/ncidclient/src/__init__.py
+++ b/ncidclient/src/__init__.py
@@ -13,10 +13,10 @@
 def _(txt): # pylint: disable-msg=C0103
 	td = gettext.dgettext("NcidClient", txt)
 	if td == txt:
-		print "[NcidClient] fallback to default translation for", txt 
+		print("[NcidClient] fallback to default translation for", txt) 
 		td = gettext.gettext(txt)
 		
 	return td
 
 def debug(message):
-	print message
+	print(message)
--- a/ncidclient/src/plugin.py
+++ b/ncidclient/src/plugin.py
@@ -36,7 +36,7 @@
 from datetime import datetime
 
 from . import debug, _
-from reverselookup import ReverseLookupAndNotify
+from .reverselookup import ReverseLookupAndNotify
 
 my_global_session = None
 
@@ -87,18 +87,18 @@
 	mountedDevs = [(resolveFilename(SCOPE_CONFIG), _("Flash")),
 				   (resolveFilename(SCOPE_MEDIA, "cf"), _("Compact Flash")),
 				   (resolveFilename(SCOPE_MEDIA, "usb"), _("USB Device"))]
-	mountedDevs += map(lambda p: (p.mountpoint, (_(p.description) if p.description else "")), harddiskmanager.getMountedPartitions(True))
+	mountedDevs += [(p.mountpoint, (_(p.description) if p.description else "")) for p in harddiskmanager.getMountedPartitions(True)]
 	mediaDir = resolveFilename(SCOPE_MEDIA)
 	for p in os.listdir(mediaDir):
 		if os.path.join(mediaDir, p) not in [path[0] for path in mountedDevs]:
 			mountedDevs.append((os.path.join(mediaDir, p), _("Media directory")))
 	debug("[NcidClient] getMountedDevices1: %s" % repr(mountedDevs))
-	mountedDevs = filter(lambda path: os.path.isdir(path[0]) and os.access(path[0], os.W_OK | os.X_OK), mountedDevs)
+	mountedDevs = [path for path in mountedDevs if os.path.isdir(path[0]) and os.access(path[0], os.W_OK | os.X_OK)]
 	# put this after the write/executable check, that is far too slow...
 	netDir = resolveFilename(SCOPE_MEDIA, "net")
 	if os.path.isdir(netDir):
-		mountedDevs += map(lambda p: (os.path.join(netDir, p), _("Network mount")), os.listdir(netDir))
-	mountedDevs = map(handleMountpoint, mountedDevs)
+		mountedDevs += [(os.path.join(netDir, p), _("Network mount")) for p in os.listdir(netDir)]
+	mountedDevs = list(map(handleMountpoint, mountedDevs))
 	return mountedDevs
 
 config.plugins.NcidClient = ConfigSubsection()
@@ -155,8 +155,8 @@
 		return ""
 	
 	# debug('normNumer: ' + normNumber)
-	for i in reversed(range(min(10, len(number)))):
-		if avon.has_key(normNumber[:i]):
+	for i in reversed(list(range(min(10, len(number))))):
+		if normNumber[:i] in avon:
 			return '[' + avon[normNumber[:i]].strip() + ']'
 	return ""
 
@@ -202,7 +202,7 @@
 		debug("[NcidClient] initCbC: callbycallFileName does not exist?!?!")
 
 def stripCbCPrefix(number, countrycode):
-	if number and number[:2] != "00" and cbcInfos.has_key(countrycode):
+	if number and number[:2] != "00" and countrycode in cbcInfos:
 		for cbc in cbcInfos[countrycode]:
 			if len(cbc.getElementsByTagName("length")) < 1 or len(cbc.getElementsByTagName("prefix")) < 1:
 				debug("[NcidClient] stripCbCPrefix: entries for " + countrycode + " %s invalid")
@@ -292,7 +292,7 @@
 					os.rename(phonebookFilename, phonebookFilename + ".bck")
 					fNew = open(phonebookFilename, 'w')
 					# Beware: strings in phonebook.phonebook are utf-8!
-					for (number, name) in self.phonebook.iteritems():
+					for (number, name) in self.phonebook.items():
 						# Beware: strings in PhoneBook.txt have to be in utf-8!
 						fNew.write(number + "#" + name.encode("utf-8"))
 					fNew.close()
@@ -310,14 +310,14 @@
 			if number[0] != '0':
 				number = prefix + number
 				# debug("[NcidClientPhonebook] search: added prefix: %s" %number)
-			elif number[:len(prefix)] == prefix and self.phonebook.has_key(number[len(prefix):]):
+			elif number[:len(prefix)] == prefix and number[len(prefix):] in self.phonebook:
 				# debug("[NcidClientPhonebook] search: same prefix")
 				name = self.phonebook[number[len(prefix):]]
 				# debug("[NcidClientPhonebook] search: result: %s" %name)
 		else:
 			prefix = ""
 				
-		if not name and self.phonebook.has_key(number):
+		if not name and number in self.phonebook:
 			name = self.phonebook[number]
 				
 		return name.replace(", ", "\n").strip()
@@ -469,7 +469,7 @@
 			debug("[NcidClientPhonebook] displayPhonebook/display")
 			self.sortlist = []
 			# Beware: strings in phonebook.phonebook are utf-8!
-			sortlistHelp = sorted((name.lower(), name, number) for (number, name) in phonebook.phonebook.iteritems())
+			sortlistHelp = sorted((name.lower(), name, number) for (number, name) in phonebook.phonebook.items())
 			for (low, name, number) in sortlistHelp:
 				if number == "01234567890":
 					continue
@@ -1086,7 +1086,7 @@
 	global ncid_call
 
 	# ouch, this is a hack
-	if kwargs.has_key("session"):
+	if "session" in kwargs:
 		global my_global_session
 		my_global_session = kwargs["session"]
 		return
--- a/ncidclient/src/reverselookup.py
+++ b/ncidclient/src/reverselookup.py
@@ -9,7 +9,7 @@
 '''
 
 import re, sys, os
-import htmlentitydefs
+import html.entities
 from xml.dom.minidom import parse
 from twisted.web.client import getPage #@UnresolvedImport
 from twisted.internet import reactor #@UnresolvedImport
@@ -28,9 +28,9 @@
 	for x in entities:
 		# debug("[Callhtml2utf8] mask: found %s" %repr(x.group(2)))
 		entitydict[x.group(1)] = x.group(2)
-	for key, name in entitydict.items():
+	for key, name in list(entitydict.items()):
 		try:
-			entitydict[key] = htmlentitydefs.name2codepoint[str(name)]
+			entitydict[key] = html.entities.name2codepoint[str(name)]
 		except KeyError:
 			debug("[Callhtml2utf8] KeyError " + key + "/" + name)
 
@@ -39,12 +39,12 @@
 	for x in entities:
 		# debug("[Callhtml2utf8] number: found %s" %x.group(1))
 		entitydict[x.group(1)] = x.group(2)
-	for key, codepoint in entitydict.items():
+	for key, codepoint in list(entitydict.items()):
 		try:
-			uml = unichr(int(codepoint))
+			uml = chr(int(codepoint))
 			debug("[nrzuname] html2utf8: replace %s with %s in %s" %(repr(key), repr(uml), repr(in_html[0:20]+'...')))
 			in_html = in_html.replace(key, uml)
-		except ValueError, e:
+		except ValueError as e:
 			debug("[nrzuname] html2utf8: ValueError " + repr(key) + ":" + repr(codepoint) + " (" + str(e) + ")")
 	return in_html
 
@@ -91,7 +91,7 @@
 	print(name)
 
 def simpleout(number, caller): #@UnusedVariable # pylint: disable-msg=W0613
-	print caller
+	print(caller)
 
 try:
 	from Tools.Directories import resolveFilename, SCOPE_PLUGINS
@@ -142,18 +142,18 @@
 			return
 
 		if self.number[:2] == "00":
-			if countries.has_key(self.number[:3]):	 #	e.g. USA
+			if self.number[:3] in countries:	 #	e.g. USA
 				self.countrycode = self.number[:3]
-			elif countries.has_key(self.number[:4]):
+			elif self.number[:4] in countries:
 				self.countrycode = self.number[:4]
-			elif countries.has_key(self.number[:5]):
+			elif self.number[:5] in countries:
 				self.countrycode = self.number[:5]
 			else:
 				debug("[ReverseLookupAndNotify] Country cannot be reverse handled")
 				self.notifyAndReset()
 				return
 
-		if countries.has_key(self.countrycode):
+		if self.countrycode in countries:
 			debug("[ReverseLookupAndNotify] Found website for reverse lookup")
 			self.websites = countries[self.countrycode]
 			self.nextWebsiteNo = 1
--- a/netcaster/src/bin/StreamInterface.py
+++ b/netcaster/src/bin/StreamInterface.py
@@ -37,7 +37,7 @@
 		if self.status == '200':
 			self.curlength += len(d)
 			if self.curlength >= self.LIMIT:
-				print "[LimitedHTTPClientFactory] reached limit"
+				print("[LimitedHTTPClientFactory] reached limit")
 				# XXX: timing out here is pretty hackish imo
 				self.p.timeout()
 				return
@@ -98,12 +98,12 @@
             self.callback(self.url)
 
     def getPLSContent(self):
-        print "loading PLS of stream ",self.name,self.url
+        print("loading PLS of stream ",self.name,self.url)
     	getPage(self.url).addCallback(self._gotPLSContent).addErrback(self._errorPLSContent)
 
     def _gotPLSContent(self, lines):
 		if lines.startswith("ICY "):
-			print "[NETcaster] PLS expected, but got ICY stream"
+			print("[NETcaster] PLS expected, but got ICY stream")
 			self.type = "mp3"
 			self.callback(self.url)
 		else:
@@ -112,11 +112,11 @@
 			        url = line.split("=")[1].rstrip().strip()
 			        self.callback(url)
 			        break
-			    print "Skipping:", line
+			    print("Skipping:", line)
 
     def _errorPLSContent(self, data):
-        print "[NETcaster] _errorPLSContent", data
-        print "[NETcaster] _errorPLSContent let's assume it's a stream"
+        print("[NETcaster] _errorPLSContent", data)
+        print("[NETcaster] _errorPLSContent let's assume it's a stream")
         self.type = "mp3"
         self.callback(self.url)
 
--- a/netcaster/src/bin/StreamPlayer.py
+++ b/netcaster/src/bin/StreamPlayer.py
@@ -4,7 +4,7 @@
 	is_playing = False
 
 	def __init__(self, session, args=0):
-	    print "[NETcaster.StreamPlayer] init StreamPlayer"
+	    print("[NETcaster.StreamPlayer] init StreamPlayer")
 	    self.is_playing = False
 	    self.session = session
 	    self.oldService = self.session.nav.getCurrentlyPlayingServiceReference()
@@ -13,7 +13,7 @@
 	    self.onStop = []
 
 	def __event(self, ev):
-	    print "[NETcaster.StreamPlayer] EVENT ==>", ev
+	    print("[NETcaster.StreamPlayer] EVENT ==>", ev)
 	    if ev == 5: # can we use a constant here instead of just 5?
    			currentServiceRef = self.session.nav.getCurrentService()
    			if currentServiceRef is not None:
@@ -37,9 +37,9 @@
 
 	def _playURL(self, url=None):
 		if not url:
-			print "no URL provided for play"
+			print("no URL provided for play")
 			return
-		print "[NETcaster.StreamPlayer] playing stream", url
+		print("[NETcaster.StreamPlayer] playing stream", url)
 
 		esref = eServiceReference("4097:0:0:0:0:0:0:0:0:0:%s" % url.replace(':', '%3a'))
 
@@ -47,17 +47,17 @@
 			self.session.nav.playService(esref)
 			self.is_playing = True
 		except:
-			print "[NETcaster.StreamPlayer] Could not play %s" % esref
+			print("[NETcaster.StreamPlayer] Could not play %s" % esref)
 
 	def stop(self, text=""):
 	    if self.is_playing:
-	        print "[NETcaster.StreamPlayer] stop streaming", text
+	        print("[NETcaster.StreamPlayer] stop streaming", text)
 	        try:
 	            self.is_playing = False
 	            self.session.nav.stopService()
 	            self.session.nav.playService(self.oldService)
-	        except TypeError, e:
-	            print " ERROR Z", e
+	        except TypeError as e:
+	            print(" ERROR Z", e)
 	            self.exit()
 
 	def exit(self):
--- a/netcaster/src/bin/plugin.py
+++ b/netcaster/src/bin/plugin.py
@@ -10,7 +10,7 @@
 
 from Plugins.Plugin import PluginDescriptor
 from os import path as os_path, listdir as os_listdir
-from StreamPlayer import StreamPlayer
+from .StreamPlayer import StreamPlayer
 from Tools.Import import my_import
 
 ###############################################################################
@@ -99,18 +99,18 @@
         global streamplayer
         try:
              streamplayer.metadatachangelisteners.remove(self.onMetadataChanged)
-        except Exception,e:
+        except Exception as e:
             pass
         try:
              streamplayer.onStop.remove(self._onStop)
-        except Exception,e:
+        except Exception as e:
             pass
 
     def onMetadataChanged(self,title):
         try:
              self["metadata"].setText(title)
 	     self.summaries.setText(title)
-        except Exception,e:
+        except Exception as e:
             self.disconnectFromMetadataUpdates()
 
     def getInterfaceList(self):
@@ -160,7 +160,7 @@
     def stream_stop(self):
         global streamplayer
         if streamplayer.is_playing:
-            print "[",myname,"] stream_startstop -> stop"
+            print("[",myname,"] stream_startstop -> stop")
             streamplayer.stop()
             self.disconnectFromMetadataUpdates()
             self._onStop()
@@ -294,7 +294,7 @@
 	</screen>"""
 
 	def __init__(self, session, parent):
-		print "[NetCast]: __init__"
+		print("[NetCast]: __init__")
 		Screen.__init__(self, session)
 		self["head"] = Label("")
 		self["info"] = Label("")
--- a/netcaster/src/bin/interface/favorites.py
+++ b/netcaster/src/bin/interface/favorites.py
@@ -1,7 +1,7 @@
 from Plugins.Extensions.NETcaster.StreamInterface import StreamInterface
 from Plugins.Extensions.NETcaster.StreamInterface import Stream
 from Plugins.Extensions.NETcaster.plugin import myname
-from ConfigParser import ConfigParser, DuplicateSectionError
+from configparser import ConfigParser, DuplicateSectionError
 
 from Tools.BoundFunction import boundFunction
 
@@ -32,12 +32,12 @@
         return list
     
     def deleteStream(self):
-        print "favorites deleteStream"
+        print("favorites deleteStream")
         if self.selectedStream is not None:
             SHOUTcasterFavorites().deleteStreamWithName(self.selectedStream.getName())
         self.getList()
     def addStream(self):
-        print "favorites addStream"
+        print("favorites addStream")
         if self.selectedStream is not None:
             SHOUTcasterFavorites().addStream(self.selectedStream)
         #self.getList()
@@ -50,7 +50,7 @@
     def getStreams(self):
         streams=[]
         sections = self.configparser.sections()
-        print sections
+        print(sections)
         for section in sections:
                 stream = self.getStreamByName(section)
                 streams.append(stream)
@@ -61,7 +61,7 @@
         else:
             return False
     def getStreamByName(self,streamname):
-        print "["+myname+"] load "+streamname+" from config"
+        print("["+myname+"] load "+streamname+" from config")
         if self.isStream(streamname) is True:
             stream = Stream(
                         streamname,
@@ -75,11 +75,11 @@
             return False
 
     def addStream(self, stream):
-        print "["+myname+"] adding "+stream.getName()+" to config"
+        print("["+myname+"] adding "+stream.getName()+" to config")
         try:
             self.configparser.add_section(stream.getName())
-        except DuplicateSectionError,e:
-            print "["+myname+"] error while adding stream to config:",e
+        except DuplicateSectionError as e:
+            print("["+myname+"] error while adding stream to config:",e)
             return False,e
         else:
             # XXX: I hope this still works properly if we make a optimistic
@@ -108,7 +108,7 @@
         self.writeConfig()
         
     def writeConfig(self):
-        print "["+myname+"] writing config to "+self.configfile
+        print("["+myname+"] writing config to "+self.configfile)
         
         fp = open(self.configfile,"w")
         self.configparser.write(fp)
--- a/netcaster/src/bin/interface/shoutcast.py
+++ b/netcaster/src/bin/interface/shoutcast.py
@@ -48,8 +48,8 @@
 # License along with this library; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
-from cPickle import dump, load
-from urllib import FancyURLopener
+from pickle import dump, load
+from urllib.request import FancyURLopener
 from xml.sax import parseString
 from xml.sax.handler import ContentHandler
 from os import stat, mkdir
@@ -68,7 +68,7 @@
         try:
             mkdir( dirname(cache_file) )
         except OSError:
-            print dirname(cache_file), 'is a file'
+            print(dirname(cache_file), 'is a file')
     fd = open(cache_file, 'w')
     dump(cache_data, fd, -1)
     fd.close()
@@ -141,7 +141,7 @@
         if name == 'stationlist':
             self.isStationList = False
             if DEBUG == 1:
-                print 'Parsed ', self.count, ' stations'
+                print('Parsed ', self.count, ' stations')
 
 class GenreParse(ContentHandler):
     def __init__( self ):
@@ -187,7 +187,7 @@
                 ct = None
         if not ct or (time.time() - ct) > self.cache_ttl:
             if DEBUG == 1:
-                print 'Getting fresh feed'
+                print('Getting fresh feed')
             try:
 	        parseXML = GenreParse()
 	        self.genres = self.fetch_genres()
@@ -195,7 +195,7 @@
 	        self.genre_list = parseXML.genreList
 	        write_cache(self.cache_file, self.genre_list)
 	    except:
-	    	print "Failed to get genres from server, sorry."
+	    	print("Failed to get genres from server, sorry.")
         return self.genre_list
 
 class ShoutcastFeed:
@@ -232,7 +232,7 @@
             try:
                 self.station_list = load_cache(self.cache_file)
             except:
-            	print "Failed to load cache."
+            	print("Failed to load cache.")
         if not ct or (time.time() - ct) > self.cache_ttl:
             try:
                 parseXML = StationParser(self.min_bitrate)
@@ -241,5 +241,5 @@
                 self.station_list = parseXML.station_list
                 write_cache(self.cache_file, self.station_list)
             except:
-            	print "Failed to get a new station list, sorry."
+            	print("Failed to get a new station list, sorry.")
         return self.station_list
--- a/networkbrowser/src/AutoMount.py
+++ b/networkbrowser/src/AutoMount.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 # for localized messages
-from __init__ import _
+from .__init__ import _
 import os
 from enigma import eTimer
 from Components.Console import Console
@@ -17,8 +17,8 @@
 			else:
 				os.unlink(path)
 		os.rmdir(d)
-	except Exception, ex:
-	        print "AutoMount failed to remove", d, "Error:", ex
+	except Exception as ex:
+	        print("AutoMount failed to remove", d, "Error:", ex)
 
 class AutoMount():
 	"""Manages Mounts declared in a XML-Document."""
@@ -68,8 +68,8 @@
 					data['sharename'] = getValue(mount.findall("sharename"), "MEDIA").encode("UTF-8")
 					data['options'] = getValue(mount.findall("options"), "rw,nolock,tcp").encode("UTF-8")
 					self.automounts[data['sharename']] = data
-				except Exception, e:
-					print "[MountManager] Error reading Mounts:", e
+				except Exception as e:
+					print("[MountManager] Error reading Mounts:", e)
 			# Read out CIFS Mounts
 		for nfs in tree.findall("cifs"):
 			for mount in nfs.findall("mount"):
@@ -88,12 +88,12 @@
 					data['username'] = getValue(mount.findall("username"), "guest").encode("UTF-8")
 					data['password'] = getValue(mount.findall("password"), "").encode("UTF-8")
 					self.automounts[data['sharename']] = data
-				except Exception, e:
-					print "[MountManager] Error reading Mounts:", e
-
-		self.checkList = self.automounts.keys()
+				except Exception as e:
+					print("[MountManager] Error reading Mounts:", e)
+
+		self.checkList = list(self.automounts.keys())
 		if not self.checkList:
-			print "[AutoMount.py] self.automounts without mounts",self.automounts
+			print("[AutoMount.py] self.automounts without mounts",self.automounts)
 			if callback is not None:
 				callback(True)
 		else:
@@ -123,10 +123,10 @@
 		if os.path.exists("/media/net") is False:
 			createDir("/media/net")
 		if self.activeMountsCounter == 0:
-			print "self.automounts without active mounts",self.automounts
+			print("self.automounts without active mounts",self.automounts)
 			if data['active'] == 'False' or data['active'] is False:
 				umountcmd = "umount -fl '%s'" % path
-				print "[AutoMount.py] UMOUNT-CMD--->",umountcmd
+				print("[AutoMount.py] UMOUNT-CMD--->",umountcmd)
 				self.MountConsole.ePopen(umountcmd, self.CheckMountPointFinished, [data, callback])
 		else:
 			if data['active'] == 'False' or data['active'] is False:
@@ -166,37 +166,37 @@
 							options = data['options'] + ',noatime,noserverino,iocharset=utf8,username='+ tmpusername + ',password='+ data['password']
 							tmpcmd = "mount -t cifs -o %s '//%s/%s' '%s'" % (options, data['ip'], data['sharedir'], path)
 							command = tmpcmd.encode("UTF-8")
-				except Exception, ex:
-					print "[AutoMount.py] Failed to create", path, "Error:", ex
+				except Exception as ex:
+					print("[AutoMount.py] Failed to create", path, "Error:", ex)
 					command = None
 			if command:
-				print "[AutoMount.py] U/MOUNTCMD--->",command
+				print("[AutoMount.py] U/MOUNTCMD--->",command)
 				self.MountConsole.ePopen(command, self.CheckMountPointFinished, [data, callback])
 			else:
 				self.CheckMountPointFinished(None,None, [data, callback])
 
 	def CheckMountPointFinished(self, result, retval, extra_args):
-		print "[AutoMount.py] CheckMountPointFinished",result,retval
+		print("[AutoMount.py] CheckMountPointFinished",result,retval)
 		(data, callback ) = extra_args
 		path = os.path.join('/media/net', data['sharename'])
 		if os.path.exists(path):
 			if os.path.ismount(path):
-				if self.automounts.has_key(data['sharename']):
+				if data['sharename'] in self.automounts:
 					self.automounts[data['sharename']]['isMounted'] = True
 					desc = data['sharename']
 					if self.automounts[data['sharename']]['hdd_replacement'] == 'True': #hdd replacement hack
 						self.makeHDDlink(path)
 					harddiskmanager.addMountedPartition(path, desc)
 			else:
-				if self.automounts.has_key(data['sharename']):
+				if data['sharename'] in self.automounts:
 					self.automounts[data['sharename']]['isMounted'] = False
 				if os.path.exists(path):
 					if not os.path.ismount(path):
 					        try:
 							os.rmdir(path)
 							harddiskmanager.removeMountedPartition(path)
-						except Exception, ex:
-						        print "Failed to remove", path, "Error:", ex
+						except Exception as ex:
+						        print("Failed to remove", path, "Error:", ex)
 		if self.checkList:
 			# Go to next item in list...
 			self.CheckMountPoint(self.checkList.pop(), callback)
@@ -208,7 +208,7 @@
 
 	def makeHDDlink(self, path):
 		hdd_dir = '/hdd'
-		print "[AutoMount.py] symlink %s %s" % (path, hdd_dir)
+		print("[AutoMount.py] symlink %s %s" % (path, hdd_dir))
 		if os.path.islink(hdd_dir):
 			if os.readlink(hdd_dir) != path:
 				os.remove(hdd_dir)
@@ -218,14 +218,14 @@
 				rm_rf(hdd_dir)
 		try:
 			os.symlink(path, hdd_dir)
-		except OSError, ex:
-			print "[AutoMount.py] add symlink fails!", ex
+		except OSError as ex:
+			print("[AutoMount.py] add symlink fails!", ex)
 		movie = os.path.join(hdd_dir, 'movie')
 		if not os.path.exists(movie):
 		        try:
 				os.mkdir(movie)
-			except Exception, ex:
-				print "[AutoMount.py] Failed to create ", movie, "Error:", ex
+			except Exception as ex:
+				print("[AutoMount.py] Failed to create ", movie, "Error:", ex)
 				remove("/hdd")
 				symlink("/media/hdd /hdd")
 
@@ -233,7 +233,7 @@
 		self.timer.stop()
 		if self.MountConsole:
 			if len(self.MountConsole.appContainers) == 0:
-				print "self.automounts after mounting",self.automounts
+				print("self.automounts after mounting",self.automounts)
 				if self.callback is not None:
 					self.callback(True)
 
@@ -241,19 +241,19 @@
 		return self.automounts
 
 	def getMountsAttribute(self, mountpoint, attribute):
-		if self.automounts.has_key(mountpoint):
-			if self.automounts[mountpoint].has_key(attribute):
+		if mountpoint in self.automounts:
+			if attribute in self.automounts[mountpoint]:
 				return self.automounts[mountpoint][attribute]
 		return None
 
 	def setMountsAttribute(self, mountpoint, attribute, value):
-		if self.automounts.has_key(mountpoint):
+		if mountpoint in self.automounts:
 			self.automounts[mountpoint][attribute] = value
 
 	def writeMountsConfig(self):
 		# Generate List in RAM
 		list = ['<?xml version="1.0" ?>\n<mountmanager>\n']
-		for sharename, sharedata in self.automounts.items():
+		for sharename, sharedata in list(self.automounts.items()):
 			mtype = sharedata['mounttype']
 			list.append('<' + mtype + '>\n')
 			list.append(' <mount>\n')
@@ -277,17 +277,17 @@
 		# Try Saving to Flash
 		try:
 			open(XML_FSTAB, "w").writelines(list)
-		except Exception, e:
-			print "[AutoMount.py] Error Saving Mounts List:", e
+		except Exception as e:
+			print("[AutoMount.py] Error Saving Mounts List:", e)
 
 	def stopMountConsole(self):
 		if self.MountConsole is not None:
 			self.MountConsole = None
 
 	def removeMount(self, mountpoint, callback = None):
-		print "[AutoMount.py] removing mount: ",mountpoint
+		print("[AutoMount.py] removing mount: ",mountpoint)
 		self.newautomounts = {}
-		for sharename, sharedata in self.automounts.items():
+		for sharename, sharedata in list(self.automounts.items()):
 			if sharename is not mountpoint.strip():
 				self.newautomounts[sharename] = sharedata
 		self.automounts.clear()
@@ -296,19 +296,19 @@
 			self.removeConsole = Console()
 		path = '/media/net/'+ mountpoint
 		umountcmd = "umount -fl '%s'" % path
-		print "[AutoMount.py] UMOUNT-CMD--->",umountcmd
+		print("[AutoMount.py] UMOUNT-CMD--->",umountcmd)
 		self.removeConsole.ePopen(umountcmd, self.removeMountPointFinished, [path, callback])
 
 	def removeMountPointFinished(self, result, retval, extra_args):
-		print "[AutoMount.py] removeMountPointFinished result", result, "retval", retval
+		print("[AutoMount.py] removeMountPointFinished result", result, "retval", retval)
 		(path, callback ) = extra_args
 		if os.path.exists(path):
 			if not os.path.ismount(path):
 			        try:
 					os.rmdir(path)
 					harddiskmanager.removeMountedPartition(path)
-				except Exception, ex:
-				        print "Failed to remove", path, "Error:", ex
+				except Exception as ex:
+				        print("Failed to remove", path, "Error:", ex)
 		if self.removeConsole:
 			if len(self.removeConsole.appContainers) == 0:
 				if callback is not None:
--- a/networkbrowser/src/MountEdit.py
+++ b/networkbrowser/src/MountEdit.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 # for localized messages
-from __init__ import _
+from .__init__ import _
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
 from Screens.VirtualKeyBoard import VirtualKeyBoard
@@ -11,7 +11,7 @@
 from Components.Pixmap import Pixmap
 from Components.ActionMap import ActionMap, NumberActionMap
 from enigma import ePoint
-from AutoMount import iAutoMount, AutoMount
+from .AutoMount import iAutoMount, AutoMount
 from re import sub as re_sub
 
 class AutoMountEdit(Screen, ConfigListScreen):
@@ -94,14 +94,14 @@
                 self.hdd_replacementEntry = None
                 self.sharetypelist = [("nfs", _("NFS share")), ("cifs", _("CIFS share"))]
 
-                if self.mountinfo.has_key('mounttype'):
+                if 'mounttype' in self.mountinfo:
                         mounttype = self.mountinfo['mounttype']
                         if not mounttype:
                                 mounttype = "nfs"
                 else:
                         mounttype = "nfs"
 
-                if self.mountinfo.has_key('active'):
+                if 'active' in self.mountinfo:
                         active = self.mountinfo['active']
                         if active == 'True':
                                 active = True
@@ -109,34 +109,34 @@
                                 active = False
                 else:
                         active = True
-                if self.mountinfo.has_key('ip'):
+                if 'ip' in self.mountinfo:
                         if self.mountinfo['ip'] is False:
                                 ip = [192, 168, 0, 0]
                         else:
                                 ip = self.convertIP(self.mountinfo['ip'])
                 else:
                         ip = [192, 168, 0, 0]
-                if self.mountinfo.has_key('sharename'):
+                if 'sharename' in self.mountinfo:
                         sharename = self.mountinfo['sharename']
                 else:
                         sharename = "Sharename"
-                if self.mountinfo.has_key('sharedir'):
+                if 'sharedir' in self.mountinfo:
                         sharedir = self.mountinfo['sharedir']
                 else:
                         sharedir = "/export/hdd"
-                if self.mountinfo.has_key('options'):
+                if 'options' in self.mountinfo:
                         options = self.mountinfo['options']
                 else:
                         options = "rw,nolock,soft"
-                if self.mountinfo.has_key('username'):
+                if 'username' in self.mountinfo:
                         username = self.mountinfo['username']
                 else:
                         username = ""
-                if self.mountinfo.has_key('password'):
+                if 'password' in self.mountinfo:
                         password = self.mountinfo['password']
                 else:
                         password = ""
-                if self.mountinfo.has_key('hdd_replacement'):
+                if 'hdd_replacement' in self.mountinfo:
                         hdd_replacement = self.mountinfo['hdd_replacement']
                         if hdd_replacement == 'True':
                                 hdd_replacement = True
@@ -205,7 +205,7 @@
                         self.createSetup()
 
         def KeyText(self):
-                print "Green Pressed"
+                print("Green Pressed")
                 if self["config"].getCurrent() == self.sharenameEntry:
                         self.session.openWithCallback(lambda x : self.VirtualKeyBoardCallback(x, 'sharename'), VirtualKeyBoard, title = (_("Enter share name:")), text = self.sharenameConfigEntry.value)
                 if self["config"].getCurrent() == self.sharedirEntry:
@@ -262,7 +262,7 @@
                                 current[1].help_window.instance.hide()
                 sharename = self.sharenameConfigEntry.value
 
-                if self.mounts.has_key(sharename) is True:
+                if (sharename in self.mounts) is True:
                         self.session.openWithCallback(self.updateConfig, MessageBox, (_("A mount entry with this name already exists!\nUpdate existing entry and continue?\n") ) )
                 else:
                         self.session.openWithCallback(self.applyConfig, MessageBox, (_("Are you sure you want to save this network mount?\n\n") ) )
--- a/networkbrowser/src/MountManager.py
+++ b/networkbrowser/src/MountManager.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 # for localized messages
-from __init__ import _
+from .__init__ import _
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
 from Screens.VirtualKeyBoard import VirtualKeyBoard
@@ -13,10 +13,10 @@
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_SKIN_IMAGE
 from os import path as os_path
 
-from MountView import AutoMountView
-from MountEdit import AutoMountEdit
-from AutoMount import iAutoMount, AutoMount
-from UserManager import UserManager
+from .MountView import AutoMountView
+from .MountEdit import AutoMountEdit
+from .AutoMount import iAutoMount, AutoMount
+from .UserManager import UserManager
 
 class AutoMountManager(Screen):
 	skin = """
--- a/networkbrowser/src/MountView.py
+++ b/networkbrowser/src/MountView.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 # for localized messages
-from __init__ import _
+from .__init__ import _
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
 from Components.Sources.StaticText import StaticText
@@ -9,8 +9,8 @@
 from Components.Sources.List import List
 from Tools.LoadPixmap import LoadPixmap
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_SKIN_IMAGE
-from AutoMount import iAutoMount, AutoMount
-from MountEdit import AutoMountEdit
+from .AutoMount import iAutoMount, AutoMount
+from .MountEdit import AutoMountEdit
 
 class AutoMountView(Screen):
         skin = """
@@ -70,7 +70,7 @@
         def showMountsList(self):
                 self.list = []
                 self.mounts = iAutoMount.getMountsList()
-                for sharename in self.mounts.keys():
+                for sharename in list(self.mounts.keys()):
                         mountentry = iAutoMount.automounts[sharename]
                         self.list.append(self.buildMountViewItem(mountentry))
                 self["config"].setList(self.list)
--- a/networkbrowser/src/NetworkBrowser.py
+++ b/networkbrowser/src/NetworkBrowser.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 # for localized messages
-from __init__ import _
+from .__init__ import _
 from enigma import eTimer, getDesktop
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
@@ -14,16 +14,16 @@
 from Components.ConfigList import ConfigList, ConfigListScreen
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_SKIN_IMAGE
 from Tools.LoadPixmap import LoadPixmap
-from cPickle import dump, load
+from pickle import dump, load
 from os import path as os_path, stat, mkdir, remove
 from time import time
 from stat import ST_MTIME
 
 import netscan
-from MountManager import AutoMountManager
-from AutoMount import iAutoMount
-from MountEdit import AutoMountEdit
-from UserDialog import UserDialog
+from .MountManager import AutoMountManager
+from .AutoMount import iAutoMount
+from .MountEdit import AutoMountEdit
+from .UserDialog import UserDialog
 
 def write_cache(cache_file, cache_data):
 	#Does a cPickle dump
@@ -31,7 +31,7 @@
 		try:
 			mkdir( os_path.dirname(cache_file) )
 		except OSError:
-			print os_path.dirname(cache_file), '[Networkbrowser] is a file'
+			print(os_path.dirname(cache_file), '[Networkbrowser] is a file')
 	fd = open(cache_file, 'w')
 	dump(cache_data, fd, -1)
 	fd.close()
@@ -170,7 +170,7 @@
 	def scanIPclosed(self,result):
 		if result[0]:
 			if result[1] == "address":
-				print "[Networkbrowser] got IP:",result[1]
+				print("[Networkbrowser] got IP:",result[1])
 				nwlist = []
 				nwlist.append(netscan.netzInfo(result[0] + "/24"))
 				self.networklist += nwlist[0]
@@ -197,13 +197,13 @@
 		self.inv_cache = 0
 		self.vc = valid_cache(self.cache_file, self.cache_ttl)
 		if self.cache_ttl > 0 and self.vc != 0:
-			print '[Networkbrowser] Loading network cache from ',self.cache_file
+			print('[Networkbrowser] Loading network cache from ',self.cache_file)
 			try:
 				self.networklist = load_cache(self.cache_file)
 			except:
 				self.inv_cache = 1
 		if self.cache_ttl == 0 or self.inv_cache == 1 or self.vc == 0:
-			print '[Networkbrowser] Getting fresh network list'
+			print('[Networkbrowser] Getting fresh network list')
 			self.networklist = self.getNetworkIPs()
 			write_cache(self.cache_file, self.networklist)
 		if len(self.networklist) > 0:
@@ -226,7 +226,7 @@
 		self.sharecache_file = None
 		self.sharecache_file = '/etc/enigma2/' + hostname.strip() + '.cache' #Path to cache directory
 		if os_path.exists(self.sharecache_file):
-			print '[Networkbrowser] Loading userinfo from ',self.sharecache_file
+			print('[Networkbrowser] Loading userinfo from ',self.sharecache_file)
 			try:
 				self.hostdata = load_cache(self.sharecache_file)
 				username = self.hostdata['username']
@@ -260,11 +260,11 @@
 		self.list = []
 		self.network = {}
 		for x in self.networklist:
-			if not self.network.has_key(x[2]):
+			if x[2] not in self.network:
 				self.network[x[2]] = []
 			self.network[x[2]].append((NetworkDescriptor(name = x[1], description = x[2]), x))
 		
-		for x in self.network.keys():
+		for x in list(self.network.keys()):
 			hostentry = self.network[x][0][1]
 			name = hostentry[2] + " ( " +hostentry[1].strip() + " )"
 			expandableIcon = LoadPixmap(cached=True, path=resolveFilename(SCOPE_PLUGINS, "SystemPlugins/NetworkBrowser/icons/host.png"))
@@ -284,11 +284,11 @@
 		self.network = {}
 		self.mounts = iAutoMount.getMountsList() # reloading mount list
 		for x in self.networklist:
-			if not self.network.has_key(x[2]):
+			if x[2] not in self.network:
 				self.network[x[2]] = []
 			self.network[x[2]].append((NetworkDescriptor(name = x[1], description = x[2]), x))
-		self.network.keys().sort()
-		for x in self.network.keys():
+		list(self.network.keys()).sort()
+		for x in list(self.network.keys()):
 			if self.network[x][0][1][3] == '00:00:00:00:00:00':
 				self.device = 'unix'
 			else:
@@ -334,7 +334,7 @@
 			newpng = LoadPixmap(cached=True, path=resolveFilename(SCOPE_PLUGINS, "SystemPlugins/NetworkBrowser/icons/i-smb.png"))
 
 		self.isMounted = False
-		for sharename, sharedata in self.mounts.items():
+		for sharename, sharedata in list(self.mounts.items()):
 			if sharedata['ip'] == sharehost:
 				if sharetype == 'nfsShare' and sharedata['mounttype'] == 'nfs':
 					if sharedir == sharedata['sharedir']:
@@ -383,7 +383,7 @@
 				self.hostcache_file = None
 				self.hostcache_file = '/etc/enigma2/' + selectedhostname.strip() + '.cache' #Path to cache directory
 				if os_path.exists(self.hostcache_file):
-					print '[Networkbrowser] Loading userinfo cache from ',self.hostcache_file
+					print('[Networkbrowser] Loading userinfo cache from ',self.hostcache_file)
 					try:
 						self.hostdata = load_cache(self.hostcache_file)
 						self.passwordQuestion(False)
@@ -393,14 +393,14 @@
 					self.session.openWithCallback(self.passwordQuestion, MessageBox, (_("Do you want to enter a username and password for this host?\n") ) )
 
 		if sel[0][0] == 'nfsShare': # share entry selected
-			print '[Networkbrowser] sel nfsShare'
+			print('[Networkbrowser] sel nfsShare')
 			self.openMountEdit(sel[0])
 		if sel[0][0] == 'smbShare': # share entry selected
-			print '[Networkbrowser] sel cifsShare'
+			print('[Networkbrowser] sel cifsShare')
 			self.hostcache_file = None
 			self.hostcache_file = '/etc/enigma2/' + selectedhostname.strip() + '.cache' #Path to cache directory
 			if os_path.exists(self.hostcache_file):
-				print '[Networkbrowser] userinfo found from ',self.sharecache_file
+				print('[Networkbrowser] userinfo found from ',self.sharecache_file)
 				self.openMountEdit(sel[0])
 			else:
 				self.session.openWithCallback(self.passwordQuestion, MessageBox, (_("Do you want to enter a username and password for this host?\n") ) )
@@ -441,7 +441,7 @@
 				data['sharedir'] = selection[4]
 				data['options'] = "rw,nolock,tcp"
 
-				for sharename, sharedata in mounts.items():
+				for sharename, sharedata in list(mounts.items()):
 					if sharedata['ip'] == selection[2] and sharedata['sharedir'] == selection[4]:
 						data = sharedata
 				self.session.openWithCallback(self.MountEditClosed,AutoMountEdit, self.skin_path, data)
@@ -458,7 +458,7 @@
 				self.sharecache_file = None
 				self.sharecache_file = '/etc/enigma2/' + selection[1].strip() + '.cache' #Path to cache directory
 				if os_path.exists(self.sharecache_file):
-					print '[Networkbrowser] Loading userinfo from ',self.sharecache_file
+					print('[Networkbrowser] Loading userinfo from ',self.sharecache_file)
 					try:
 						self.hostdata = load_cache(self.sharecache_file)
 						data['username'] = self.hostdata['username']
@@ -470,7 +470,7 @@
 					data['username'] = "username"
 					data['password'] = "password"
 
-				for sharename, sharedata in mounts.items():
+				for sharename, sharedata in list(mounts.items()):
 					if sharedata['ip'] == selection[2].strip() and sharedata['sharedir'] == selection[3].strip():
 						data = sharedata
 				self.session.openWithCallback(self.MountEditClosed,AutoMountEdit, self.skin_path, data)
--- a/networkbrowser/src/UserDialog.py
+++ b/networkbrowser/src/UserDialog.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 # for localized messages
-from __init__ import _
+from .__init__ import _
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
 from Screens.VirtualKeyBoard import VirtualKeyBoard
@@ -11,7 +11,7 @@
 from Components.Pixmap import Pixmap
 from Components.ActionMap import ActionMap, NumberActionMap
 from enigma import ePoint
-from cPickle import dump, load
+from pickle import dump, load
 from os import path as os_path, unlink, stat, mkdir
 from time import time
 from stat import ST_MTIME
@@ -22,7 +22,7 @@
 		try:
 			mkdir( os_path.dirname(cache_file) )
 		except OSError:
-			print os_path.dirname(cache_file), 'is a file'
+			print(os_path.dirname(cache_file), 'is a file')
 	fd = open(cache_file, 'w')
 	dump(cache_data, fd, -1)
 	fd.close()
@@ -108,7 +108,7 @@
 		self.password = None
 
 		if os_path.exists(self.cache_file):
-			print 'Loading user cache from ',self.cache_file
+			print('Loading user cache from ',self.cache_file)
 			try:
 				self.hostdata = load_cache(self.cache_file)
 				username = self.hostdata['username']
--- a/networkbrowser/src/UserManager.py
+++ b/networkbrowser/src/UserManager.py
@@ -1,6 +1,6 @@
 # -*- coding: utf-8 -*-
 # for localized messages
-from __init__ import _
+from .__init__ import _
 from Screens.Screen import Screen
 from Components.Sources.StaticText import StaticText
 from Components.Pixmap import Pixmap
@@ -9,7 +9,7 @@
 
 from Tools.LoadPixmap import LoadPixmap
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_SKIN_IMAGE
-from UserDialog import UserDialog
+from .UserDialog import UserDialog
 from os import unlink, listdir, path as os_path
 
 class UserManager(Screen):
--- a/networkbrowser/src/__init__.py
+++ b/networkbrowser/src/__init__.py
@@ -19,7 +19,7 @@
 def _(txt):
 	t = gettext.dgettext(PluginLanguageDomain, txt)
 	if t == txt:
-		print "[NetworkBrowser] fallback to default translation for", txt
+		print("[NetworkBrowser] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/networkbrowser/src/plugin.py
+++ b/networkbrowser/src/plugin.py
@@ -1,11 +1,11 @@
 # -*- coding: utf-8 -*-
 # for localized messages
-from __init__ import _
+from .__init__ import _
 
 from Plugins.Plugin import PluginDescriptor
-from NetworkBrowser import NetworkBrowser
+from .NetworkBrowser import NetworkBrowser
 from Components.Network import iNetwork
-from MountManager import AutoMountManager
+from .MountManager import AutoMountManager
 
 plugin_path = ""
 
@@ -26,7 +26,7 @@
 	return MountManagerMain
 
 def RemountMain(session, iface = None, **kwargs):
-	from AutoMount import iAutoMount
+	from .AutoMount import iAutoMount
 	iAutoMount.getAutoMountPoints() 
 
 def RemountCallFunction(iface):
--- a/ofdb/src/plugin.py
+++ b/ofdb/src/plugin.py
@@ -17,8 +17,8 @@
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_SKIN_IMAGE
 from os import environ as os_environ
 import re
-import htmlentitydefs
-import urllib
+import html.entities
+import urllib.request, urllib.parse, urllib.error
 import gettext
 
 def localeInit():
@@ -27,7 +27,7 @@
 def _(txt):
     t = gettext.dgettext("OFDb", txt)
     if t == txt:
-        print "[OFDb] fallback to default translation for", txt 
+        print("[OFDb] fallback to default translation for", txt) 
         t = gettext.gettext(txt)
     return t
 
@@ -233,7 +233,7 @@
 			self["statusbar"].setText(_("Re-Query OFDb: %s...") % (title))
 			localfile = "/tmp/ofdbquery2.html"
 			fetchurl = "http://www.ofdb.de/film/" + link
-			print "[OFDb] downloading query " + fetchurl + " to " + localfile
+			print("[OFDb] downloading query " + fetchurl + " to " + localfile)
 			downloadPage(fetchurl,localfile).addCallback(self.OFDBquery2).addErrback(self.fetchFailed)
 			self["menu"].hide()
 			self.resetLabels()
@@ -303,18 +303,18 @@
 			
 			self["statusbar"].setText(_("Query OFDb: %s...") % (self.eventName))
 			try:
-				self.eventName = urllib.quote(self.eventName)
+				self.eventName = urllib.parse.quote(self.eventName)
 			except:
-				self.eventName = urllib.quote(self.eventName.decode('utf8').encode('ascii','ignore'))
+				self.eventName = urllib.parse.quote(self.eventName.decode('utf8').encode('ascii','ignore'))
 			localfile = "/tmp/ofdbquery.html"
 			fetchurl = "http://www.ofdb.de/view.php?page=suchergebnis&Kat=DTitel&SText=" + self.eventName
-			print "[OFDb] Downloading Query " + fetchurl + " to " + localfile
+			print("[OFDb] Downloading Query " + fetchurl + " to " + localfile)
 			downloadPage(fetchurl,localfile).addCallback(self.OFDBquery).addErrback(self.fetchFailed)
 		else:
 			self["statusbar"].setText(_("Could't get Eventname"))
 
 	def fetchFailed(self,string):
-		print "[OFDb] fetch failed " + string
+		print("[OFDb] fetch failed " + string)
 		self["statusbar"].setText(_("OFDb Download failed"))
 
 	def html2utf8(self,in_html):
@@ -327,21 +327,21 @@
 		for x in entities:
 			entitydict[x.group(1)] = x.group(2)
 
-		for key, name in entitydict.items():
-			entitydict[key] = htmlentitydefs.name2codepoint[name]
+		for key, name in list(entitydict.items()):
+			entitydict[key] = html.entities.name2codepoint[name]
 
 		entities = htmlentitynumbermask.finditer(in_html)
 
 		for x in entities:
 			entitydict[x.group(1)] = x.group(2)
 
-		for key, codepoint in entitydict.items():
-			in_html = in_html.replace(key, (unichr(int(codepoint)).encode('utf8')))
+		for key, codepoint in list(entitydict.items()):
+			in_html = in_html.replace(key, (chr(int(codepoint)).encode('utf8')))
 
 		self.inhtml = in_html
 
 	def OFDBquery(self,string):
-		print "[OFDBquery]"
+		print("[OFDBquery]")
 		self["statusbar"].setText(_("OFDb Download completed"))
 
 		self.html2utf8(open("/tmp/ofdbquery.html", "r").read())
@@ -376,7 +376,7 @@
 		self.OFDBparse()
 
 	def OFDBparse(self):
-		print "[OFDBparse]"
+		print("[OFDBparse]")
 		self.Page = 1
 		Detailstext = _("No details found.")
 		if self.generalinfos:
@@ -441,10 +441,10 @@
 				posterurl = posterurl.group(1)
 				self["statusbar"].setText(_("Downloading Movie Poster: %s...") % (posterurl))
 				localfile = "/tmp/poster.jpg"
-				print "[OFDb] downloading poster " + posterurl + " to " + localfile
+				print("[OFDb] downloading poster " + posterurl + " to " + localfile)
 				downloadPage(posterurl,localfile).addCallback(self.OFDBPoster).addErrback(self.fetchFailed)
 			else:
-				print "no jpg poster!"
+				print("no jpg poster!")
 				self.OFDBPoster(noPoster = True)
 
 		self["detailslabel"].setText(Detailstext)
--- a/orfat/src/plugin.py
+++ b/orfat/src/plugin.py
@@ -16,7 +16,7 @@
 from Tools.Directories import fileExists, resolveFilename, SCOPE_PLUGINS
 from Tools.LoadPixmap import LoadPixmap
 from twisted.web.client import downloadPage, getPage
-import re, urllib2
+import re, urllib.request, urllib.error, urllib.parse
 
 ##########################################################
 
@@ -139,7 +139,7 @@
 
 	def getVideoUrl(self, url):
 		try:
-			f = urllib2.urlopen(url)
+			f = urllib.request.urlopen(url)
 			txt = f.read()
 			f.close()
 		except:
@@ -259,7 +259,7 @@
 		getPage(self.mainUrl).addCallback(self.downloadListCallback).addErrback(self.downloadListError)
 
 	def downloadListError(self, error=""):
-		print "[ORF.at] Fehler beim Verbindungsversuch:", str(error)
+		print("[ORF.at] Fehler beim Verbindungsversuch:", str(error))
 		self.working = False
 		self.session.open(MessageBox, "Fehler beim Verbindungsversuch!", MessageBox.TYPE_ERROR)
 
@@ -311,7 +311,7 @@
 		self.working = False
 
 	def downloadPicError(self, error=""):
-		print str(error)
+		print(str(error))
 		self["pic"].hide()
 		self.working = False
 		self.session.open(MessageBox, "Fehler beim Herunterladen des Eintrags!", MessageBox.TYPE_ERROR)
--- a/partnerbox/src/PartnerboxEPGList.py
+++ b/partnerbox/src/PartnerboxEPGList.py
@@ -25,7 +25,7 @@
 
 from Tools.Directories import resolveFilename, SCOPE_CURRENT_SKIN
 from Tools.LoadPixmap import LoadPixmap
-import PartnerboxFunctions as partnerboxfunctions
+from . import PartnerboxFunctions as partnerboxfunctions
 
 baseEPGList__init__ = None
 basebuildSingleEntry = None
--- a/partnerbox/src/PartnerboxEPGSelection.py
+++ b/partnerbox/src/PartnerboxEPGSelection.py
@@ -20,12 +20,12 @@
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
 from Components.config import config
-from PartnerboxSetup import PartnerboxEntriesListConfigScreen
+from .PartnerboxSetup import PartnerboxEntriesListConfigScreen
 from Screens.EpgSelection import EPGSelection
 from Components.EpgList import EPG_TYPE_SINGLE, EPG_TYPE_SIMILAR, EPG_TYPE_MULTI
 from Tools.BoundFunction import boundFunction
-from PartnerboxFunctions import  SetPartnerboxTimerlist, isInTimerList, sendPartnerBoxWebCommand, FillE1TimerList, FillE2TimerList
-import PartnerboxFunctions as partnerboxfunctions
+from .PartnerboxFunctions import  SetPartnerboxTimerlist, isInTimerList, sendPartnerBoxWebCommand, FillE1TimerList, FillE2TimerList
+from . import PartnerboxFunctions as partnerboxfunctions
 
 # for localized messages
 from . import _
@@ -140,7 +140,7 @@
 			sCommand = http + "/web/timerlist"
 		else:
 			sCommand = http + "/xml/timers"
-		print "[Partnerbox] %s"%sCommand
+		print("[Partnerbox] %s"%sCommand)
 		sendPartnerBoxWebCommand(sCommand, None,3, "root", self.partnerboxentry.password.value).addCallback(self.GetPartnerboxTimerlistCallback).addErrback(GetPartnerboxTimerlistCallbackError)
 
 
@@ -159,7 +159,7 @@
 
 def GetPartnerboxTimerlistCallbackError(self, error = None):
 	if error is not None:
-		print str(error.getErrorMessage())
+		print(str(error.getErrorMessage()))
 
 def CheckRemoteTimer(self):
 	if self.key_green_choice != self.REMOVE_TIMER:
--- a/partnerbox/src/PartnerboxFunctions.py
+++ b/partnerbox/src/PartnerboxFunctions.py
@@ -17,7 +17,7 @@
 #  GNU General Public License for more details.
 #
 
-import urllib
+import urllib.request, urllib.parse, urllib.error
 from time import localtime
 from timer import TimerEntry
 from twisted.internet import reactor
@@ -219,7 +219,7 @@
 	basicAuth = encodestring(("%s:%s")%(username,password))
 	authHeader = "Basic " + basicAuth.strip()
 	AuthHeaders = {"Authorization": authHeader}
-	if kwargs.has_key("headers"):
+	if "headers" in kwargs:
 		kwargs["headers"].update(AuthHeaders)
 	else:
 		kwargs["headers"] = AuthHeaders
@@ -280,8 +280,8 @@
 			sCommand = "http://%s:%s@%s:%d/web/timerlist" % (username, password, ip,port)
 		else:
 			sCommand = "http://%s:%s@%s:%d/xml/timers" % (username, password, ip,port)
-		print "[RemoteEPGList] Getting timerlist data from %s..."%ip
-		f = urllib.urlopen(sCommand)
+		print("[RemoteEPGList] Getting timerlist data from %s..."%ip)
+		f = urllib.request.urlopen(sCommand)
 		sxml = f.read()
 		if int(partnerboxentry.enigma.value) == 0:
 			remote_timer_list = FillE2TimerList(sxml, sreference)
--- a/partnerbox/src/RemoteTimerEntry.py
+++ b/partnerbox/src/RemoteTimerEntry.py
@@ -38,13 +38,13 @@
 from Screens.TimerEntry import TimerEntry
 from Screens.MessageBox import MessageBox
 from Tools.BoundFunction import boundFunction
-import urllib
+import urllib.request, urllib.parse, urllib.error
 
 import xml.etree.cElementTree
 from Components.ActionMap import ActionMap
 
-from PartnerboxFunctions import PlaylistEntry, SetPartnerboxTimerlist, sendPartnerBoxWebCommand
-import PartnerboxFunctions as partnerboxfunctions
+from .PartnerboxFunctions import PlaylistEntry, SetPartnerboxTimerlist, sendPartnerBoxWebCommand
+from . import PartnerboxFunctions as partnerboxfunctions
 
 # for localized messages
 from . import _
@@ -351,7 +351,7 @@
 				#sendPartnerBoxWebCommand(sCommand, None,3, self.username, self.password).addCallback(boundFunction(getLocationsCallback,self)).addErrback(boundFunction(getLocationsError,self))
 				# ich mach das besser synchron, falls die Partnerbox aus ist ( dann koennte man hier schon abbrechen und eine Meldung bringen...)
 				try:
-					f = urllib.urlopen(sCommand)
+					f = urllib.request.urlopen(sCommand)
 					sxml = f.read()
 					getLocationsCallback(self,sxml)
 				except: pass
@@ -472,7 +472,7 @@
 		baseTimerEntryGo(self)
 	else:
 		service_ref = self.timerentry_service_ref
-		descr = urllib.quote(self.timerentry_description.value)
+		descr = urllib.parse.quote(self.timerentry_description.value)
 		begin, end = self.getBeginEnd()
 		ip = "%d.%d.%d.%d" % tuple(self.entryguilist[int(self.timerentry_remote.value)][2].ip.value)
 		port = self.entryguilist[int(self.timerentry_remote.value)][2].port.value
@@ -493,19 +493,19 @@
 				servicename = str(service_ref .getServiceName())
 			except:
 				pass
-			channel = urllib.quote(servicename)
+			channel = urllib.parse.quote(servicename)
 			sCommand = "%s/addTimerEvent?ref=%s&start=%d&duration=%d&descr=%s&channel=%s&after_event=%s&action=%s" % (http, service_ref , begin, end - begin, descr, channel, afterevent, action)
 			sendPartnerBoxWebCommand(sCommand, None,3, "root", str(self.entryguilist[int(self.timerentry_remote.value)][2].password.value)).addCallback(boundFunction(AddTimerE1Callback,self, self.session)).addErrback(boundFunction(AddTimerError,self, self.session))
 		else:
 			# E2
-			name = urllib.quote(self.timerentry_name.value)
+			name = urllib.parse.quote(self.timerentry_name.value)
 			self.timer.tags = self.timerentry_tags
 			if self.timerentry_justplay.value == "zap":
 				justplay = 1
 				dirname = ""
 			else:
 				justplay = 0
-				dirname = urllib.quote(self.timerentry_dirname.value)
+				dirname = urllib.parse.quote(self.timerentry_dirname.value)
 			afterevent = {
 			"deepstandby": AFTEREVENT.DEEPSTANDBY,
 			"standby": AFTEREVENT.STANDBY,
--- a/partnerbox/src/__init__.py
+++ b/partnerbox/src/__init__.py
@@ -10,7 +10,7 @@
 def _(txt):
 	t = gettext.dgettext("Partnerbox", txt)
 	if t == txt:
-		print "[Partnerbox] fallback to default translation for", txt
+		print("[Partnerbox] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/partnerbox/src/plugin.py
+++ b/partnerbox/src/plugin.py
@@ -41,21 +41,21 @@
 from time import localtime
 import time
 import xml.etree.cElementTree
-import urllib
-import SocketServer
-import servicewebts
+import urllib.request, urllib.parse, urllib.error
+import socketserver
+from . import servicewebts
 ENIGMA_WEBSERVICE_ID = 0x1012
 from Screens.InfoBarGenerics import InfoBarAudioSelection
-from RemoteTimerEntry import RemoteTimerEntry, RemoteTimerInit
-from PartnerboxEPGSelection import Partnerbox_EPGSelectionInit
-
-from PartnerboxFunctions import PlaylistEntry, FillE1TimerList, E2Timer, FillE2TimerList, SetPartnerboxTimerlist, sendPartnerBoxWebCommand, isInTimerList
-
-from PartnerboxEPGList import Partnerbox_EPGListInit
-from PartnerboxSetup import PartnerboxSetup, PartnerboxEntriesListConfigScreen, PartnerboxEntryList, PartnerboxEntryConfigScreen, initPartnerboxEntryConfig, initConfig
+from .RemoteTimerEntry import RemoteTimerEntry, RemoteTimerInit
+from .PartnerboxEPGSelection import Partnerbox_EPGSelectionInit
+
+from .PartnerboxFunctions import PlaylistEntry, FillE1TimerList, E2Timer, FillE2TimerList, SetPartnerboxTimerlist, sendPartnerBoxWebCommand, isInTimerList
+
+from .PartnerboxEPGList import Partnerbox_EPGListInit
+from .PartnerboxSetup import PartnerboxSetup, PartnerboxEntriesListConfigScreen, PartnerboxEntryList, PartnerboxEntryConfigScreen, initPartnerboxEntryConfig, initConfig
 import time
 
-from Services import Services, E2EPGListAllData, E2ServiceList
+from .Services import Services, E2EPGListAllData, E2ServiceList
 from Screens.ChannelSelection import service_types_tv
 
 from Components.ConfigList import ConfigList, ConfigListScreen
@@ -302,8 +302,8 @@
 			entry = answer[1]
 			self["timerlist"].instance.hide()
 			if self.enigma_type == 0:
-				ref_old = "&channelOld=" + urllib.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&beginOld=" + ("%s"%(self.oldstart)) + "&endOld=" + ("%s"%(self.oldend))  + "&deleteOldOnSave=1"
-				ref = urllib.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&begin=" + ("%s"%(entry.timebegin)) + "&end=" + ("%s"%(entry.timeend))  + "&name=" + urllib.quote(entry.name) + "&description=" + urllib.quote(entry.description) + "&dirname=" + urllib.quote(entry.dirname) + "&eit=0&justplay=" + ("%s"%(entry.justplay)) + "&afterevent=" + ("%s"%(entry.afterevent))
+				ref_old = "&channelOld=" + urllib.parse.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&beginOld=" + ("%s"%(self.oldstart)) + "&endOld=" + ("%s"%(self.oldend))  + "&deleteOldOnSave=1"
+				ref = urllib.parse.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&begin=" + ("%s"%(entry.timebegin)) + "&end=" + ("%s"%(entry.timeend))  + "&name=" + urllib.parse.quote(entry.name) + "&description=" + urllib.parse.quote(entry.description) + "&dirname=" + urllib.parse.quote(entry.dirname) + "&eit=0&justplay=" + ("%s"%(entry.justplay)) + "&afterevent=" + ("%s"%(entry.afterevent))
 				sCommand = self.http + "/web/timerchange?sRef=" + ref + ref_old
 				sendPartnerBoxWebCommand(sCommand, None,10, self.username, self.password).addCallback(self.deleteTimerCallback).addErrback(self.downloadError)
 			else:
@@ -318,7 +318,7 @@
 				ref_time_start = "&sday=" + ("%s"%(tstart.tm_mday)) + "&smonth=" + ("%s"%(tstart.tm_mon)) + "&syear=" + ("%s"%(tstart.tm_year)) + "&shour=" + ("%s"%(tstart.tm_hour)) + "&smin=" + ("%s"%(tstart.tm_min))
 				ref_time_end = "&eday=" + ("%s"%(tend.tm_mday)) + "&emonth=" + ("%s"%(tend.tm_mon)) + "&eyear=" + ("%s"%(tend.tm_year)) + "&ehour=" + ("%s"%(tend.tm_hour)) + "&emin=" + ("%s"%(tend.tm_min))
 				ref_old = "&old_type=" + ("%s"%(self.oldtype)) + "&old_stime=" + ("%s"%(self.oldstart)) + "&force=yes"
-				ref = urllib.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&descr=" + urllib.quote(entry.description) + "&channel=" + urllib.quote(entry.servicename) + "&after_event=" + ("%s"%(entry.afterevent)) + "&action=" + ("%s"%(action))
+				ref = urllib.parse.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&descr=" + urllib.parse.quote(entry.description) + "&channel=" + urllib.parse.quote(entry.servicename) + "&after_event=" + ("%s"%(entry.afterevent)) + "&action=" + ("%s"%(action))
 				sCommand = self.http + "/changeTimerEvent?ref=" + ref + ref_old + ref_time_start + ref_time_end
 				sendPartnerBoxWebCommand(sCommand, None,10, self.username, self.password).addCallback(self.deleteTimerCallback).addErrback(self.downloadError)
 	
@@ -605,9 +605,9 @@
 			self.ZapCallback(None)
 		else:
 			if self.enigma_type == 0:
-				url = self.http + "/web/zap?sRef=" + urllib.quote(sel.servicereference.decode('utf8').encode('latin-1','ignore'))
+				url = self.http + "/web/zap?sRef=" + urllib.parse.quote(sel.servicereference.decode('utf8').encode('latin-1','ignore'))
 			else:
-				url = self.http + "/cgi-bin/zapTo?path=" + urllib.quote(sel.servicereference.decode('utf8').encode('latin-1','ignore'))
+				url = self.http + "/cgi-bin/zapTo?path=" + urllib.parse.quote(sel.servicereference.decode('utf8').encode('latin-1','ignore'))
 			sendPartnerBoxWebCommand(url, None,10, self.username, self.password).addCallback(self.ZapCallback).addErrback(self.DoNotCareError)
 	
 	def DoNotCareError(self, dnce = None):
@@ -706,7 +706,7 @@
 			
 	def getChannelList(self):
 		if self.enigma_type == 0:
-			ref = urllib.quote(self.servicereference.decode('utf8').encode('latin-1','ignore'))
+			ref = urllib.parse.quote(self.servicereference.decode('utf8').encode('latin-1','ignore'))
 			url = self.http + "/web/epgnow?bRef=" + ref
 			sendPartnerBoxWebCommand(url, None,10, self.username, self.password).addCallback(self.ChannelListDownloadCallback).addErrback(self.ChannelListDownloadError)
 		else:
@@ -727,7 +727,7 @@
 					servicename = str(services.findtext("name", 'n/a').encode("utf-8", 'ignore'))
 					http_ = "%s:%d" % (self.ip,self.port)
 					url = "http://" + self.username + ":" + self.password + "@" + http_ + "/xml/serviceepg?ref=" + servicereference + "&entries=1"
-					f = urllib.urlopen(url)
+					f = urllib.request.urlopen(url)
 					sxml = f.read()
 					eventstart, eventduration, eventtitle, eventdescriptionextended, eventdescription, eventid = self.XMLReadEPGDataE1(sxml)
 					self.E2ChannelList.append(E2EPGListAllData(servicereference = servicereference, servicename = servicename, eventstart = eventstart, eventduration = eventduration, eventtitle = eventtitle, eventid = eventid , eventdescription= eventdescription, eventdescriptionextended = eventdescriptionextended))
@@ -924,7 +924,7 @@
 		self["DateTime"].setText(e2eventservicename + tt)
 
 	def CurrentEPGCallbackError(self, error = None):
-		print "[RemotePlayer] Error: ",error.getErrorMessage()
+		print("[RemotePlayer] Error: ",error.getErrorMessage())
 		
 #	def readXMSubChanelList(self, xmlstring):
 #		BouquetList = []
@@ -1006,9 +1006,9 @@
 		self.useinternal = int(partnerboxentry.useinternal.value)
 		
 		if self.enigma_type == 0:
-			self.url = self.http + "/web/epgservice?sRef=" + urllib.quote(self.servicereference.decode('utf8').encode('latin-1','ignore'))
-		else:
-			self.url = self.http + "/xml/serviceepg?ref=" + urllib.quote(self.servicereference.decode('utf8').encode('latin-1','ignore'))
+			self.url = self.http + "/web/epgservice?sRef=" + urllib.parse.quote(self.servicereference.decode('utf8').encode('latin-1','ignore'))
+		else:
+			self.url = self.http + "/xml/serviceepg?ref=" + urllib.parse.quote(self.servicereference.decode('utf8').encode('latin-1','ignore'))
 		self.ListCurrentIndex = 0
 		self.Locations = []
 		
@@ -1168,7 +1168,7 @@
 			entry = answer[1]
 			self["epglist"].instance.hide()
 			if self.enigma_type == 0:
-				ref = urllib.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&begin=" + ("%s"%(entry.timebegin)) + "&end=" + ("%s"%(entry.timeend))  + "&name=" + urllib.quote(entry.name) + "&description=" + urllib.quote(entry.description) + "&dirname=" + urllib.quote(entry.dirname) + "&eit=0&justplay=" + ("%s"%(entry.justplay)) + "&afterevent=" + ("%s"%(entry.afterevent))
+				ref = urllib.parse.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&begin=" + ("%s"%(entry.timebegin)) + "&end=" + ("%s"%(entry.timeend))  + "&name=" + urllib.parse.quote(entry.name) + "&description=" + urllib.parse.quote(entry.description) + "&dirname=" + urllib.parse.quote(entry.dirname) + "&eit=0&justplay=" + ("%s"%(entry.justplay)) + "&afterevent=" + ("%s"%(entry.afterevent))
 				sCommand = self.http + "/web/timeradd?sRef=" + ref
 				sendPartnerBoxWebCommand(sCommand, None,10, self.username, self.password).addCallback(self.deleteTimerCallback).addErrback(self.EPGListDownloadError)
 			else:
@@ -1178,7 +1178,7 @@
 					action = "ngrab"
 				else:
 					action = ""
-				ref = urllib.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&start=" + ("%s"%(entry.timebegin)) + "&duration=" + ("%s"%(entry.timeend - entry.timebegin))  + "&descr=" + urllib.quote(entry.description) + "&channel=" + urllib.quote(entry.servicename) + "&after_event=" + ("%s"%(entry.afterevent)) + "&action=" + ("%s"%(action))
+				ref = urllib.parse.quote(entry.servicereference.decode('utf8').encode('latin-1','ignore')) + "&start=" + ("%s"%(entry.timebegin)) + "&duration=" + ("%s"%(entry.timeend - entry.timebegin))  + "&descr=" + urllib.parse.quote(entry.description) + "&channel=" + urllib.parse.quote(entry.servicename) + "&after_event=" + ("%s"%(entry.afterevent)) + "&action=" + ("%s"%(action))
 				sCommand = self.http + "/addTimerEvent?ref=" + ref
 				sendPartnerBoxWebCommand(sCommand, None,10, self.username, self.password).addCallback(self.deleteTimerCallback).addErrback(self.EPGListDownloadError)
 	
@@ -1794,7 +1794,7 @@
 			if sel is None:
 				return
 		except: return
-		ref = urllib.quote(sel.servicereference.decode('utf8').encode('latin-1','ignore'))
+		ref = urllib.parse.quote(sel.servicereference.decode('utf8').encode('latin-1','ignore'))
 		url = self.http + "/web/epgnow?bRef=" + ref
 		sendPartnerBoxWebCommand(url, None,10, self.username, self.password).addCallback(self.ChannelListDownloadCallback, sel).addErrback(self.ChannelListDownloadError)
 
--- a/permanenttimeshift/src/plugin.py
+++ b/permanenttimeshift/src/plugin.py
@@ -643,7 +643,7 @@
 						statinfo = os_stat("%s/%s" % (config.usage.timeshift_path.value,filename))
 						if statinfo.st_mtime > (time()-5.0):
 							savefilename=filename
-					except Exception, errormsg:
+					except Exception as errormsg:
 						Notifications.AddNotification(MessageBox, _("PTS Plugin Error: %s" % (errormsg)), MessageBox.TYPE_ERROR)
 
 		if savefilename is None:
@@ -673,8 +673,8 @@
 								ptsfilename = "%s - %s - %s - %s" % (strftime("%Y%m%d %H%M",localtime(self.pts_starttime)),self.pts_curevent_station,self.pts_curevent_name,self.pts_curevent_description)
 							elif config.recording.filename_composition.value == "short":
 								ptsfilename = "%s - %s" % (strftime("%Y%m%d",localtime(self.pts_starttime)),self.pts_curevent_name)
-					except Exception, errormsg:
-						print "PTS-Plugin: Using default filename"
+					except Exception as errormsg:
+						print("PTS-Plugin: Using default filename")
 
 					if config.recording.ascii_filenames.value:
 						ptsfilename = ASCIItranslit.legacyEncode(ptsfilename)
@@ -701,8 +701,8 @@
 								ptsfilename = "%s - %s - %s - %s" % (strftime("%Y%m%d %H%M",localtime(int(begintime))),self.pts_curevent_station,eventname,description)
 							elif config.recording.filename_composition.value == "short":
 								ptsfilename = "%s - %s" % (strftime("%Y%m%d",localtime(int(begintime))),eventname)
-					except Exception, errormsg:
-						print "PTS-Plugin: Using default filename"
+					except Exception as errormsg:
+						print("PTS-Plugin: Using default filename")
 
 					if config.recording.ascii_filenames.value:
 						ptsfilename = ASCIItranslit.legacyEncode(ptsfilename)
@@ -723,7 +723,7 @@
 				if not mergelater:
 					self.ptsCreateAPSCFiles(fullname+".ts")
 
-			except Exception, errormsg:
+			except Exception as errormsg:
 				timeshift_saved = False
 				timeshift_saveerror1 = errormsg
 
@@ -786,7 +786,7 @@
 						timeshift_saveerror1 = ""
 						timeshift_saveerror2 = _("Not enough free Diskspace!\n\nFilesize: %sMB\nFree Space: %sMB\nPath: %s" % (filesize,freespace,config.usage.default_path.value))
 
-				except Exception, errormsg:
+				except Exception as errormsg:
 					timeshift_saved = False
 					timeshift_saveerror2 = errormsg
 
@@ -807,7 +807,7 @@
 					statinfo = os_stat("%s/%s" % (config.usage.timeshift_path.value,filename))
 					# if no write for 5 sec = stranded timeshift
 					if statinfo.st_mtime < (time()-5.0):
-						print "PTS-Plugin: Erasing stranded timeshift %s" % filename
+						print("PTS-Plugin: Erasing stranded timeshift %s" % filename)
 						self.eraseFile("%s/%s" % (config.usage.timeshift_path.value,filename))
 
 						# Delete Meta and EIT File too
@@ -815,7 +815,7 @@
 							self.BgFileEraser.erase("%s/%s.meta" % (config.usage.timeshift_path.value,filename))
 							self.BgFileEraser.erase("%s/%s.eit" % (config.usage.timeshift_path.value,filename))
 		except:
-			print "PTS: IO-Error while cleaning Timeshift Folder ..."
+			print("PTS: IO-Error while cleaning Timeshift Folder ...")
 
 	def ptsGetEventInfo(self):
 		event = None
@@ -830,7 +830,7 @@
 			service = self.session.nav.getCurrentService()
 			info = service and service.info()
 			event = info and info.getEvent(0)
-		except Exception, errormsg:
+		except Exception as errormsg:
 			Notifications.AddNotification(MessageBox, _("Getting Event Info failed!")+"\n\n%s" % errormsg, MessageBox.TYPE_ERROR, timeout=10)
 
 		if event is not None:
@@ -860,8 +860,8 @@
 					open("/proc/stb/fp/led_set_pattern", "w").write("0")
 				elif fileExists("/proc/stb/fp/led0_pattern"):
 					open("/proc/stb/fp/led0_pattern", "w").write("0")
-		except Exception, errormsg:
-			print "PTS Plugin: %s" % (errormsg)
+		except Exception as errormsg:
+			print("PTS Plugin: %s" % (errormsg))
 
 	def ptsCreateHardlink(self):
 		for filename in os_listdir(config.usage.timeshift_path.value):
@@ -872,8 +872,8 @@
 						try:
 							self.eraseFile("%s/pts_livebuffer.%s" % (config.usage.timeshift_path.value,self.pts_eventcount))
 							self.BgFileEraser.erase("%s/pts_livebuffer.%s.meta" % (config.usage.timeshift_path.value,self.pts_eventcount))
-						except Exception, errormsg:
-							print "PTS Plugin: %s" % (errormsg)
+						except Exception as errormsg:
+							print("PTS Plugin: %s" % (errormsg))
 
 						try:
 							# Create link to pts_livebuffer file
@@ -883,7 +883,7 @@
 							metafile = open("%s/pts_livebuffer.%s.meta" % (config.usage.timeshift_path.value,self.pts_eventcount), "w")
 							metafile.write("%s\n%s\n%s\n%i\n" % (self.pts_curevent_servicerefname,self.pts_curevent_name.replace("\n", ""),self.pts_curevent_description.replace("\n", ""),int(self.pts_starttime)))
 							metafile.close()
-						except Exception, errormsg:
+						except Exception as errormsg:
 							Notifications.AddNotification(MessageBox, _("Creating Hardlink to Timeshift file failed!")+"\n"+_("The Filesystem on your Timeshift-Device does not support hardlinks.\nMake sure it is formated in EXT2 or EXT3!")+"\n\n%s" % errormsg, MessageBox.TYPE_ERROR)
 
 						# Create EIT File
@@ -898,9 +898,9 @@
 								metafile = open("%s.ts.meta" % (fullname), "w")
 								metafile.write("%s\n%s\n%s\n%i\nautosaved\n" % (self.pts_curevent_servicerefname,self.pts_curevent_name.replace("\n", ""),self.pts_curevent_description.replace("\n", ""),int(self.pts_starttime)))
 								metafile.close()
-							except Exception, errormsg:
-								print "PTS Plugin: %s" % (errormsg)
-				except Exception, errormsg:
+							except Exception as errormsg:
+								print("PTS Plugin: %s" % (errormsg))
+				except Exception as errormsg:
 					errormsg = str(errormsg)
 					if errormsg.find('Input/output error') != -1:
 						errormsg += _("\nAn Input/output error usually indicates a corrupted filesystem! Please check the filesystem of your timeshift-device!")
@@ -997,11 +997,11 @@
 	def ptsCreateEITFile(self, filename):
 		if self.pts_curevent_eventid is not None:
 			try:
-				import eitsave
+				from . import eitsave
 				serviceref = ServiceReference(self.session.nav.getCurrentlyPlayingServiceReference()).ref.toString()
 				eitsave.SaveEIT(serviceref, filename+".eit", self.pts_curevent_eventid, -1, -1)
-			except Exception, errormsg:
-				print "PTS Plugin: %s" % (errormsg)
+			except Exception as errormsg:
+				print("PTS Plugin: %s" % (errormsg))
 
 	def ptsCopyFilefinished(self, srcfile, destfile):
 		# Erase Source File
@@ -1217,7 +1217,7 @@
 					self.pvrStateDialog["eventname"].setText(eventname)
 				else:
 					self.pvrStateDialog["eventname"].setText("")
-			except Exception, errormsg:
+			except Exception as errormsg:
 				self.pvrStateDialog["eventname"].setText("")
 
 		# Get next pts file ...
@@ -1249,7 +1249,7 @@
 		try:
 			ts.setNextPlaybackFile("%s/%s" % (config.usage.timeshift_path.value,nexttsfile))
 		except:
-			print "PTS-Plugin: setNextPlaybackFile() not supported by OE. Enigma2 too old !?"
+			print("PTS-Plugin: setNextPlaybackFile() not supported by OE. Enigma2 too old !?")
 
 	def ptsSeekBackHack(self):
 		if not config.plugins.pts.enabled.value or not self.timeshift_enabled:
--- a/pipservicerelation/src/plugin.py
+++ b/pipservicerelation/src/plugin.py
@@ -149,7 +149,7 @@
 		
 	def buildList(self):
 		list = []
-		for c in self.configPSR.items():
+		for c in list(self.configPSR.items()):
 			res = [
 				c,
 				(eListboxPythonMultiContent.TYPE_TEXT, 5, 0, 320, 20, 1, RT_HALIGN_LEFT|RT_VALIGN_CENTER, ServiceReference(eServiceReference(c[0])).getServiceName()),
--- a/pipzap/src/PipzapSetup.py
+++ b/pipzap/src/PipzapSetup.py
@@ -59,7 +59,7 @@
 		self["key_green"] = StaticText(_("OK"))
 		self["key_red"] = StaticText(_("Cancel"))
 		self["key_yellow"] = StaticText("")
-		from plugin import pipzapHelp
+		from .plugin import pipzapHelp
 		if pipzapHelp:
 			self["key_blue"] = StaticText(_("Help"))
 		else:
@@ -102,6 +102,6 @@
 		return SetupSummary
 
 	def keyBlue(self):
-		from plugin import pipzapHelp
+		from .plugin import pipzapHelp
 		if pipzapHelp:
 			pipzapHelp.open(self.session)
--- a/pipzap/src/plugin.py
+++ b/pipzap/src/plugin.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # Plugin definition
 from Plugins.Plugin import PluginDescriptor
@@ -15,7 +15,7 @@
 from Screens.PictureInPicture import PictureInPicture
 from Screens.Screen import Screen
 from Screens.MessageBox import MessageBox
-from PipzapSetup import PipzapSetup
+from .PipzapSetup import PipzapSetup
 from Components.PluginComponent import plugins
 
 class baseMethods:
--- a/pluginhider/src/PluginHiderSetup.py
+++ b/pluginhider/src/PluginHiderSetup.py
@@ -68,7 +68,7 @@
 				"cancel": (self.cancel, _("end editing")),
 				"green": (self.save, _("save")),
 				"blue": (self.run, _("run selected plugin")),
-				"next": (self.next, _("select next tab")),
+				"next": (self.__next__, _("select next tab")),
 				"previous": (self.previous, _("select previous tab")),
 			}, -1
 		)
@@ -111,7 +111,7 @@
 			self.selectedList = LIST_EVENTINFO
 		self.updateList()
 
-	def next(self):
+	def __next__(self):
 		self.keepCurrent()
 		self.selectedList += 1
 		if self.selectedList > LIST_EVENTINFO:
--- a/pluginhider/src/plugin.py
+++ b/pluginhider/src/plugin.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from . import _
 
@@ -8,7 +8,7 @@
 from Components.PluginComponent import PluginComponent
 from Components.config import config, ConfigSubsection, ConfigSet
 
-from PluginHiderSetup import PluginHiderSetup
+from .PluginHiderSetup import PluginHiderSetup
 
 from operator import attrgetter
 
--- a/pluginsort/src/plugin.py
+++ b/pluginsort/src/plugin.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from . import _
 
@@ -60,9 +60,9 @@
 
 try:
 	dict.iteritems
-	iteritems = lambda d: d.iteritems()
+	iteritems = lambda d: iter(d.items())
 except AttributeError:
-	iteritems = lambda d: d.items()
+	iteritems = lambda d: list(d.items())
 reverse = lambda map: dict((v,k) for k,v in iteritems(map))
 
 class PluginWeights:
@@ -108,7 +108,7 @@
 		extend = list.extend
 
 		idmap = reverse(WHEREMAP)
-		for key in self.plugins.keys():
+		for key in list(self.plugins.keys()):
 			whereplugins = self.plugins.get(key, None)
 			if not whereplugins:
 				continue
--- a/podcast/src/plugin.py
+++ b/podcast/src/plugin.py
@@ -284,7 +284,7 @@
 		self.working = False
 
 	def error(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting movies"))
 		self.working = False
 
@@ -468,12 +468,12 @@
 		self.working = False
 
 	def error(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting genres"))
 		self.working = False
 
 	def error2(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting rss feed"))
 		self.working = False
 
@@ -529,7 +529,7 @@
 		self.working = False
 
 	def error(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting genres"))
 		self.working = False
 
@@ -578,7 +578,7 @@
 		self.working = False
 
 	def error(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting genres"))
 		self.working = False
 
@@ -789,12 +789,12 @@
 		self.working = False
 
 	def error(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting episodes"))
 		self.working = False
 
 	def error2(self, error=""):
-		print "[Podcast] Error: Error getting podcast url"
+		print("[Podcast] Error: Error getting podcast url")
 		self.instance.setTitle(_("Error getting podcast url"))
 		self.working = False
 
@@ -851,7 +851,7 @@
 		self.working = False
 
 	def error(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting podcasts"))
 		self.working = False
 
@@ -904,7 +904,7 @@
 		self.working = False
 
 	def error(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting categories"))
 		self.working = False
 
@@ -956,7 +956,7 @@
 		self.working = False
 
 	def error(self, error=""):
-		print "[Podcast] Error:", error
+		print("[Podcast] Error:", error)
 		self.instance.setTitle(_("Error getting categories"))
 		self.working = False
 
--- a/porncenter/src/plugin.py
+++ b/porncenter/src/plugin.py
@@ -1,5 +1,5 @@
 # Porn Center by AliAbdul
-from Additions.Plugin import cache, getPlugins
+from .Additions.Plugin import cache, getPlugins
 from Components.ActionMap import ActionMap
 from Components.config import config, ConfigSelection, ConfigSubsection, ConfigText, ConfigYesNo, getConfigListEntry
 from Components.ConfigList import ConfigListScreen
--- a/porncenter/src/Additions/MyDirtyIpods.py
+++ b/porncenter/src/Additions/MyDirtyIpods.py
@@ -1,5 +1,5 @@
 # MyDirtyIpods plugin by AliAbdul
-from Podcast import Podcast
+from .Podcast import Podcast
 
 ##################################################
 
--- a/porncenter/src/Additions/NaughtyAmerica.py
+++ b/porncenter/src/Additions/NaughtyAmerica.py
@@ -1,5 +1,5 @@
 # NaughtyAmerica plugin by AliAbdul
-from Podcast import Podcast
+from .Podcast import Podcast
 
 ##################################################
 
--- a/porncenter/src/Additions/Plugin.py
+++ b/porncenter/src/Additions/Plugin.py
@@ -6,7 +6,7 @@
 from Tools.Import import my_import
 from Tools.LoadPixmap import LoadPixmap
 from twisted.web.client import downloadPage, getPage
-import urllib2
+import urllib.request, urllib.error, urllib.parse
 
 ##################################################
 
@@ -43,8 +43,8 @@
 		self.thumb = None
 		if thumb:
 			try:
-				req = urllib2.Request(thumb)
-				url_handle = urllib2.urlopen(req)
+				req = urllib.request.Request(thumb)
+				url_handle = urllib.request.urlopen(req)
 				headers = url_handle.info()
 				contentType = headers.getheader("content-type")
 			except:
@@ -62,7 +62,7 @@
 				downloadPage(thumb, self.thumbnailFile).addCallback(self.decodeThumbnail).addErrback(self.error)
 
 	def error(self, error=None):
-		if error: print error
+		if error: print(error)
 
 	def decodeThumbnail(self, str=None):
 		self.picload = ePicLoad()
@@ -107,7 +107,7 @@
 
 	def getPageError(self, error=None):
 		if error:
-			print "[%s] Error: %s" % (self.name, error)
+			print("[%s] Error: %s" % (self.name, error))
 
 ##################################################
 
@@ -115,21 +115,21 @@
 	try:
 		files = listdir(resolveFilename(SCOPE_PLUGINS)+"/Extensions/PornCenter/Additions")
 		files.sort()
-	except Exception, exc:
-		print "[PornCenter] failed to search for plugins:", exc
+	except Exception as exc:
+		print("[PornCenter] failed to search for plugins:", exc)
 		files = []
 	plugins = []
 	for file in files:
 		if file.endswith(".py") and not file in ["__init__.py", "Plugin.py", "Podcast.py"]:
 			try:
 				plugin = my_import('.'.join(["Plugins", "Extensions", "PornCenter", "Additions", file[:-3]]))
-				if not plugin.__dict__.has_key("getPlugin"):
-					print "Plugin %s doesn't have 'getPlugin'-call." % file
+				if "getPlugin" not in plugin.__dict__:
+					print("Plugin %s doesn't have 'getPlugin'-call." % file)
 					continue
 				p = plugin.getPlugin()
 				if p:
 					plugins.append(p)
-			except Exception, exc:
-				print "Plugin %s failed to load: %s" % (file, exc)
+			except Exception as exc:
+				print("Plugin %s failed to load: %s" % (file, exc))
 				continue
 	return plugins
--- a/porncenter/src/Additions/Podcast.py
+++ b/porncenter/src/Additions/Podcast.py
@@ -1,5 +1,5 @@
 # podcast plugin by AliAbdul
-from Plugin import Movie, Plugin
+from .Plugin import Movie, Plugin
 import re
 
 ##################################################
@@ -54,4 +54,4 @@
 		self.callback(movies)
 
 	def getPageError(self, error=None):
-		if error: print error
+		if error: print(error)
--- a/porncenter/src/Additions/Pornabees.py
+++ b/porncenter/src/Additions/Pornabees.py
@@ -1,5 +1,5 @@
 # Pornabees plugin by AliAbdul
-from Podcast import Podcast
+from .Podcast import Podcast
 
 ##################################################
 
--- a/porncenter/src/Additions/SuicideGirls.py
+++ b/porncenter/src/Additions/SuicideGirls.py
@@ -1,5 +1,5 @@
 # SuicideGirls plugin by AliAbdul
-from Podcast import Podcast
+from .Podcast import Podcast
 
 ##################################################
 
--- a/porncenter/src/Additions/bangyoulater.py
+++ b/porncenter/src/Additions/bangyoulater.py
@@ -1,6 +1,6 @@
 # bangyoulater plugin by AliAbdul
-from Plugin import Movie, Plugin
-import re, urllib2
+from .Plugin import Movie, Plugin
+import re, urllib.request, urllib.error, urllib.parse
 
 ##################################################
 
@@ -30,7 +30,7 @@
 
 	def getPageError(self, error=None):
 		if error and self.currPage == 1:
-			print "[%s] Error: %s" % (self.name, error)
+			print("[%s] Error: %s" % (self.name, error))
 		else:
 			self.moreEntries = False
 
@@ -54,7 +54,7 @@
 		self.callback(plugins)
 
 	def getPageError(self, error=None):
-		if error: print "[%s] Error: %s" % (self.name, error)
+		if error: print("[%s] Error: %s" % (self.name, error))
 
 ##################################################
 
--- a/porncenter/src/Additions/mXVideos.py
+++ b/porncenter/src/Additions/mXVideos.py
@@ -1,6 +1,6 @@
 # mXVideos plugin by AliAbdul
-from Plugin import Movie, Plugin
-import re, urllib2
+from .Plugin import Movie, Plugin
+import re, urllib.request, urllib.error, urllib.parse
 
 ##################################################
 
@@ -10,7 +10,7 @@
 
 	def getVideoUrl(self):
 		try:
-			data = urllib2.urlopen(self.url).read()
+			data = urllib.request.urlopen(self.url).read()
 		except:
 			data = ""
 		reonecat = re.compile(r'Watch Video: <a href="(.+?)">MP4</a>')
@@ -46,7 +46,7 @@
 
 	def getPageError(self, error=None):
 		if error and self.currPage == 1:
-			print "[%s] Error: %s" % (self.name, error)
+			print("[%s] Error: %s" % (self.name, error))
 		else:
 			self.moreEntries = False
 
@@ -74,7 +74,7 @@
 		self.callback(plugins)
 
 	def getPageError(self, error=None):
-		if error: print "[%s] Error: %s" % (self.name, error)
+		if error: print("[%s] Error: %s" % (self.name, error))
 
 ##################################################
 
--- a/porncenter/src/Additions/mp4porn.py
+++ b/porncenter/src/Additions/mp4porn.py
@@ -1,6 +1,6 @@
 # mp4porn plugin by AliAbdul
-from Plugin import Movie, Plugin
-import re, urllib2
+from .Plugin import Movie, Plugin
+import re, urllib.request, urllib.error, urllib.parse
 
 ##################################################
 
@@ -10,7 +10,7 @@
 
 	def getVideoUrl(self):
 		try:
-			data = urllib2.urlopen(self.url).read()
+			data = urllib.request.urlopen(self.url).read()
 		except:
 			data = ""
 		reonecat = re.compile(r'\| <a href="(.+?).m4v"')
@@ -45,7 +45,7 @@
 
 	def getPageError(self, error=None):
 		if error and self.currPage == 1:
-			print "[%s] Error: %s" % (self.name, error)
+			print("[%s] Error: %s" % (self.name, error))
 		else:
 			self.moreEntries = False
 
--- a/porncenter/src/Additions/pornrabbit.py
+++ b/porncenter/src/Additions/pornrabbit.py
@@ -1,6 +1,6 @@
 # pornrabbit plugin by AliAbdul
-from Plugin import Movie, Plugin
-import re, urllib2
+from .Plugin import Movie, Plugin
+import re, urllib.request, urllib.error, urllib.parse
 
 ##################################################
 
@@ -10,7 +10,7 @@
 
 	def getVideoUrl(self):
 		try:
-			data = urllib2.urlopen(self.url).read()
+			data = urllib.request.urlopen(self.url).read()
 		except:
 			data = ""
 		reonecat = re.compile(r'<span class="download"><a href="(.+?).mp4"')
@@ -66,7 +66,7 @@
 
 	def getPageError(self, error=None):
 		if error and self.currPage == 1:
-			print "[%s] Error: %s" % (self.name, error)
+			print("[%s] Error: %s" % (self.name, error))
 		else:
 			self.moreEntries = False
 
@@ -100,7 +100,7 @@
 		self.callback(plugins)
 
 	def getPageError(self, error=None):
-		if error: print "[%s] Error: %s" % (self.name, error)
+		if error: print("[%s] Error: %s" % (self.name, error))
 
 ##################################################
 
--- a/porncenter/src/Additions/videarn.py
+++ b/porncenter/src/Additions/videarn.py
@@ -1,6 +1,6 @@
 # videarn plugin by AliAbdul
-from Plugin import Movie, Plugin
-import re, urllib2
+from .Plugin import Movie, Plugin
+import re, urllib.request, urllib.error, urllib.parse
 
 ##################################################
 
@@ -10,7 +10,7 @@
 
 	def getVideoUrl(self):
 		try:
-			data = urllib2.urlopen(self.url).read()
+			data = urllib.request.urlopen(self.url).read()
 		except:
 			data = ""
 		reonecat = re.compile(r"<source src='(.+?)' type='video/mp4;'>")
@@ -49,7 +49,7 @@
 
 	def getPageError(self, error=None):
 		if error and self.currPage == 1:
-			print "[%s] Error: %s" % (self.name, error)
+			print("[%s] Error: %s" % (self.name, error))
 		else:
 			self.moreEntries = False
 
@@ -76,7 +76,7 @@
 		self.callback(plugins)
 
 	def getPageError(self, error=None):
-		if error: print "[%s] Error: %s" % (self.name, error)
+		if error: print("[%s] Error: %s" % (self.name, error))
 
 ##################################################
 
--- a/porncenter/src/Additions/xPodClips.py
+++ b/porncenter/src/Additions/xPodClips.py
@@ -1,5 +1,5 @@
 # xPodClips plugin by AliAbdul
-from Podcast import Podcast
+from .Podcast import Podcast
 
 ##################################################
 
--- a/porncenter/src/Additions/xxx4pods.py
+++ b/porncenter/src/Additions/xxx4pods.py
@@ -1,5 +1,5 @@
 # xxx4pods plugin by AliAbdul
-from Podcast import Podcast
+from .Podcast import Podcast
 
 ##################################################
 
--- a/quickbutton/src/__init__.py
+++ b/quickbutton/src/__init__.py
@@ -10,7 +10,7 @@
 def _(txt):
 	t = gettext.dgettext("Quickbutton", txt)
 	if t == txt:
-		print "[Quickbutton] fallback to default translation for", txt
+		print("[Quickbutton] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/quickbutton/src/plugin.py
+++ b/quickbutton/src/plugin.py
@@ -122,7 +122,7 @@
 				from Plugins.Extensions.MediaPlayer.plugin import MediaPlayer
 				self.session.open(MediaPlayer)
 				no_plugin = False
-			except Exception, e:
+			except Exception as e:
 				msgText = _("Error!\nError Text: %s"%e)
 		elif pname == _("Plugin browser"):
 			from Screens.PluginBrowser import PluginBrowser
@@ -150,7 +150,7 @@
 				try:
 					self.runPlugin(plugin)
 					no_plugin = False
-				except Exception, e:
+				except Exception as e:
 					msgText = _("Error!\nError Text: %s"%e)
 			else: 
 				msgText = _("Plugin not found!")
--- a/quickepg/src/plugin.py
+++ b/quickepg/src/plugin.py
@@ -44,7 +44,7 @@
 
 def autostart(reason,**kwargs):
     if reason == 0:
-        print "[QUICKEPG] no autostart"
+        print("[QUICKEPG] no autostart")
 
 def Plugins(path,**kwargs):
     return [PluginDescriptor(
--- a/remotetimer/src/plugin.py
+++ b/remotetimer/src/plugin.py
@@ -40,7 +40,7 @@
 from xml.etree.cElementTree import fromstring as cElementTree_fromstring
 from base64 import encodestring
 
-import urllib
+import urllib.request, urllib.parse, urllib.error
 #------------------------------------------------------------------------------------------
 
 config.plugins.remoteTimer = ConfigSubsection()
@@ -126,14 +126,14 @@
 		self["text"].setText(info)
 
 	def errorLoad(self, error):
-		print "[RemoteTimer] errorLoad ERROR:", error.getErrorMessage()
+		print("[RemoteTimer] errorLoad ERROR:", error.getErrorMessage())
 
 	def clean(self):
 		try:
 			url = "http://%s/web/timercleanup?cleanup=true" % (self.remoteurl)
 			localGetPage(url).addCallback(self.getInfo).addErrback(self.errorLoad)
 		except:
-			print "[RemoteTimer] ERROR Cleanup"
+			print("[RemoteTimer] ERROR Cleanup")
 
 	def delete(self):
 		sel = self["timerlist"].getCurrent()
@@ -159,8 +159,8 @@
 	def generateTimerE2(self, data):
 		try:
 			root = cElementTree_fromstring(data)
-		except Exception, e:
-			print "[RemoteTimer] error: %s", e
+		except Exception as e:
+			print("[RemoteTimer] error: %s", e)
 			self["text"].setText(_("error parsing incoming data."))
 		else:
 			return [
@@ -311,8 +311,8 @@
 		if end < begin:
 			end += 86400
 
-		rt_name = urllib.quote(self.timerentry_name.value.decode('utf8').encode('utf8','ignore'))
-		rt_description = urllib.quote(self.timerentry_description.value.decode('utf8').encode('utf8','ignore'))
+		rt_name = urllib.parse.quote(self.timerentry_name.value.decode('utf8').encode('utf8','ignore'))
+		rt_description = urllib.parse.quote(self.timerentry_description.value.decode('utf8').encode('utf8','ignore'))
 		rt_disabled = 0 # XXX: do we really want to hardcode this? why do we offer this option then?
 		rt_repeated = 0 # XXX: same here
 
@@ -343,7 +343,7 @@
 			rt_afterEvent,
 			rt_repeated
 		)
-		print "[RemoteTimer] debug remote", remoteurl
+		print("[RemoteTimer] debug remote", remoteurl)
 
 		defer = localGetPage(remoteurl)
 		defer.addCallback(boundFunction(_gotPageLoad, self.session, self))
@@ -392,7 +392,7 @@
 			if config.plugins.remoteTimer.httpip.value:
 				timerInit()
 		except:
-			print "[RemoteTimer] NO remoteTimer.httpip.value"
+			print("[RemoteTimer] NO remoteTimer.httpip.value")
 
 def main(session, **kwargs):
 	session.open(RemoteTimerScreen)
--- a/rsdownloader/src/plugin.py
+++ b/rsdownloader/src/plugin.py
@@ -14,7 +14,7 @@
 from Components.MenuList import MenuList
 from Components.MultiContent import MultiContentEntryText, MultiContentEntryPixmapAlphaTest
 from Components.ScrollLabel import ScrollLabel
-from container.decrypt import decrypt
+from .container.decrypt import decrypt
 from enigma import eListboxPythonMultiContent, eTimer, gFont, RT_HALIGN_CENTER, RT_HALIGN_RIGHT
 from os import environ, listdir, remove, system
 from Plugins.Plugin import PluginDescriptor
@@ -30,10 +30,10 @@
 from twisted.internet import reactor
 from twisted.python import failure
 from twisted.web.client import getPage
-from urllib2 import Request
-from urlparse import urlparse, urlunparse
+from urllib.request import Request
+from urllib.parse import urlparse, urlunparse
 from xml.etree.cElementTree import parse
-import gettext, re, socket, sys, urllib, urllib2
+import gettext, re, socket, sys, urllib.request, urllib.parse, urllib.error, urllib.request, urllib.error, urllib.parse
 
 ##############################################################################
 
@@ -127,7 +127,7 @@
 			basicAuth = encodestring("%s:%s"%(username, password))
 			authHeader = "Basic " + basicAuth.strip()
 			AuthHeaders = {"Authorization": authHeader}
-			if kwargs.has_key("headers"):
+			if "headers" in kwargs:
 				kwargs["headers"].update(AuthHeaders)
 			else:
 				kwargs["headers"] = AuthHeaders
@@ -147,14 +147,14 @@
 
 def get(url):
 	try:
-		data = urllib2.urlopen(url)
+		data = urllib.request.urlopen(url)
 		return data.read()
 	except:
 		return ""
    
 def post(url, data):
 	try:
-		return urllib2.urlopen(url, data).read()
+		return urllib.request.urlopen(url, data).read()
 	except:
 		return ""
 
@@ -337,8 +337,8 @@
 			if downloadLink:
 				self.status = _("Downloading")
 				writeLog("Downloading video: %s"%downloadLink)
-				req = urllib2.Request(downloadLink)
-				url_handle = urllib2.urlopen(req)
+				req = urllib.request.Request(downloadLink)
+				url_handle = urllib.request.urlopen(req)
 				headers = url_handle.info()
 				if headers.getheader("content-type") == "video/mp4":
 					ext = "mp4"
@@ -455,7 +455,7 @@
 		watch_url = "http://www.youtube.com/watch?v="+video_id
 		watchrequest = Request(watch_url, None, std_headers)
 		try:
-			watchvideopage = urllib2.urlopen(watchrequest).read()
+			watchvideopage = urllib.request.urlopen(watchrequest).read()
 		except:
 			watchvideopage = ""
 		if "isHDAvailable = true" in watchvideopage:
@@ -463,12 +463,12 @@
 		info_url = 'http://www.youtube.com/get_video_info?&video_id=%s&el=detailpage&ps=default&eurl=&gl=US&hl=en'%video_id
 		inforequest = Request(info_url, None, std_headers)
 		try:
-			infopage = urllib2.urlopen(inforequest).read()
+			infopage = urllib.request.urlopen(inforequest).read()
 		except:
 			infopage = ""
 		mobj = re.search(r'(?m)&token=([^&]+)(?:&|$)', infopage)
 		if mobj:
-			token = urllib.unquote(mobj.group(1))
+			token = urllib.parse.unquote(mobj.group(1))
 			myurl = 'http://www.youtube.com/get_video?video_id=%s&t=%s&eurl=&el=detailpage&ps=default&gl=US&hl=en'%(video_id, token)
 			if isHDAvailable is True:
 				mrl = '%s&fmt=%s'%(myurl, '22')
@@ -1075,7 +1075,7 @@
 			f.write(result)
 			f.close()
 		except:
-			print "[RS Downloader] Result of unrar:", result
+			print("[RS Downloader] Result of unrar:", result)
 		self.finishCallback(self.name)
 
 	def allDownloaded(self):
@@ -1163,7 +1163,7 @@
 
 	def decode_charset(self, str, charset):
 		try:
-			uni = unicode(str, charset, 'strict')
+			uni = str(str, charset, 'strict')
 		except:
 			uni = str
 		return uni
--- a/rsdownloader/src/container/MultipartPostHandler.py
+++ b/rsdownloader/src/container/MultipartPostHandler.py
@@ -41,11 +41,11 @@
   then uploads it to the W3C validator.
 """
 
-import urllib
-import urllib2
+import urllib.request, urllib.parse, urllib.error
+import urllib.request, urllib.error, urllib.parse
 import mimetools, mimetypes
 import os, stat
-from cStringIO import StringIO
+from io import StringIO
 
 class Callable:
     def __init__(self, anycallable):
@@ -55,8 +55,8 @@
 #  assigning a sequence.
 doseq = 1
 
-class MultipartPostHandler(urllib2.BaseHandler):
-    handler_order = urllib2.HTTPHandler.handler_order - 10 # needs to run first
+class MultipartPostHandler(urllib.request.BaseHandler):
+    handler_order = urllib.request.HTTPHandler.handler_order - 10 # needs to run first
 
     def http_request(self, request):
         data = request.get_data()
@@ -64,24 +64,24 @@
             v_files = []
             v_vars = []
             try:
-                 for(key, value) in data.items():
+                 for(key, value) in list(data.items()):
                      if type(value) == file:
                          v_files.append((key, value))
                      else:
                          v_vars.append((key, value))
             except TypeError:
                 systype, value, traceback = sys.exc_info()
-                raise TypeError, "not a valid non-string sequence or mapping object", traceback
+                raise TypeError("not a valid non-string sequence or mapping object").with_traceback(traceback)
 
             if len(v_files) == 0:
-                data = urllib.urlencode(v_vars, doseq)
+                data = urllib.parse.urlencode(v_vars, doseq)
             else:
                 boundary, data = self.multipart_encode(v_vars, v_files)
 
                 contenttype = 'multipart/form-data; boundary=%s' % boundary
                 if(request.has_header('Content-Type')
                    and request.get_header('Content-Type').find('multipart/form-data') != 0):
-                    print "Replacing %s with %s" % (request.get_header('content-type'), 'multipart/form-data')
+                    print("Replacing %s with %s" % (request.get_header('content-type'), 'multipart/form-data'))
                 request.add_unredirected_header('Content-Type', contenttype)
 
             request.add_data(data)
@@ -118,7 +118,7 @@
     import tempfile, sys
 
     validatorURL = "http://validator.w3.org/check"
-    opener = urllib2.build_opener(MultipartPostHandler)
+    opener = urllib.request.build_opener(MultipartPostHandler)
 
     def validateFile(url):
         temp = tempfile.mkstemp(suffix=".html")
@@ -126,7 +126,7 @@
         params = { "ss" : "0",            # show source
                    "doctype" : "Inline",
                    "uploaded_file" : open(temp[1], "rb") }
-        print opener.open(validatorURL, params).read()
+        print(opener.open(validatorURL, params).read())
         os.remove(temp[1])
 
     if len(sys.argv[1:]) > 0:
--- a/sambaserver/src/plugin.py
+++ b/sambaserver/src/plugin.py
@@ -47,9 +47,9 @@
 			for line in f.readlines():
 				self.settings.append(line)
 			f.close()
-			print "[SambaServer] load settings"
+			print("[SambaServer] load settings")
 		except:
-			print "[SambaServer] ERROR in open configuration file"
+			print("[SambaServer] ERROR in open configuration file")
 		if self.settings:
 			for line in self.settings:
 				line = line.replace(' ', '').replace('\t', '')
@@ -179,9 +179,9 @@
 			f = open("/etc/samba/smb.conf", "w")
 			f.write(settings)
 			f.close()
-			print "[SambaServer] save settings"
+			print("[SambaServer] save settings")
 		except:
-			print "[SambaServer] ERROR in save settings"
+			print("[SambaServer] ERROR in save settings")
 
 	def Cancel(self):
 		ConfigListScreen.keyCancel(self)
@@ -190,10 +190,10 @@
 		if self.settings:
 			if config.plugins.SambaServer.Start.value:
 				self.SaveConfig()
-				print "[SambaServer] restart samba"
+				print("[SambaServer] restart samba")
 				Console().ePopen("/etc/init.d/samba restart")
 			else:
-				print "[SambaServer] stop samba"
+				print("[SambaServer] stop samba")
 				Console().ePopen("/etc/init.d/samba stop")
 		ConfigListScreen.keySave(self)
 
@@ -206,13 +206,13 @@
 		if reason == 0: # Enigma start
 			try:
 				Console().ePopen("/etc/init.d/samba start")
-				print "[SambaServer] start samba"
+				print("[SambaServer] start samba")
 			except:
 				pass
 		elif reason == 1: # Enigma stop
 			try:
 				Console().ePopen("/etc/init.d/samba stop")
-				print "[SambaServer] stop samba"
+				print("[SambaServer] stop samba")
 			except:
 				pass
 
--- a/seekbar/src/plugin.py
+++ b/seekbar/src/plugin.py
@@ -191,9 +191,9 @@
 	if not instance.bound:
 		for ctx in instance.contexts:
 			if ctx == "InfobarSeekActions":
-				if instance.actions.has_key("seekFwdManual"):
+				if "seekFwdManual" in instance.actions:
 					instance.actions["seekbarRight"] = instance.actions["seekFwdManual"]
-				if instance.actions.has_key("seekBackManual"):
+				if "seekBackManual" in instance.actions:
 					instance.actions["seekbarLeft"] = instance.actions["seekBackManual"]
 			DoBind(instance)
 
--- a/serienfilm/src/MovieInfo.py
+++ b/serienfilm/src/MovieInfo.py
@@ -2,7 +2,7 @@
 from Components.Element import cached, ElementError
 from enigma import iServiceInformation, eServiceReference
 from ServiceReference import ServiceReference
-from MovieList import MovieList
+from .MovieList import MovieList
 
 class MovieInfo(Converter, object):
 	MOVIE_SHORT_DESCRIPTION = 0 # meta description when available.. when not .eit short description
--- a/serienfilm/src/MovieList.py
+++ b/serienfilm/src/MovieList.py
@@ -322,7 +322,7 @@
 		parent = None
 		info = self.serviceHandler.info(root)
 		pwd = info and info.getName(root)
-		print "[SF-Plugin] MovieList.realDirUp: pwd = >%s<" % (str(pwd))
+		print("[SF-Plugin] MovieList.realDirUp: pwd = >%s<" % (str(pwd)))
 		if pwd and os.path.exists(pwd) and not os.path.samefile(pwd, defaultMoviePath()):
 			parentdir = pwd[:pwd.rfind("/", 0, -1)] + "/"
 			parent = eServiceReference("2:0:1:0:0:0:0:0:0:0:" + parentdir)
@@ -351,7 +351,7 @@
 		self.root = root
 		list = self.serviceHandler.list(root)
 		if list is None:
-			print "[SF-Plugin] listing of movies failed"
+			print("[SF-Plugin] listing of movies failed")
 			list = [ ]	
 			return
 		tags = set()
--- a/serienfilm/src/MovieSelection.py
+++ b/serienfilm/src/MovieSelection.py
@@ -6,7 +6,7 @@
 from Components.Button import Button
 from Components.ActionMap import HelpableActionMap, ActionMap
 from Components.MenuList import MenuList
-from MovieList import MovieList
+from .MovieList import MovieList
 from Components.DiskInfo import DiskInfo
 from Components.Pixmap import Pixmap
 from Components.Label import Label
@@ -26,7 +26,7 @@
 from Tools.BoundFunction import boundFunction
 
 from enigma import eServiceReference, eServiceCenter, eTimer, eSize, iServiceInformation
-from SerienFilm import EpiSepCfg
+from .SerienFilm import EpiSepCfg
 
 config.movielist.sfmoviesort = ConfigInteger(default=MovieList.SORT_RECORDED)
 config.movielist.sflisttype = ConfigInteger(default=MovieList.LISTTYPE_MINIMAL)
@@ -38,13 +38,13 @@
 	try:
 		if preferredTagEditor == None:
 			preferredTagEditor = te
-			print "Preferred tag editor changed to ", preferredTagEditor
-		else:
-			print "Preferred tag editor already set to ", preferredTagEditor
-			print "ignoring ", te
+			print("Preferred tag editor changed to ", preferredTagEditor)
+		else:
+			print("Preferred tag editor already set to ", preferredTagEditor)
+			print("ignoring ", te)
 	except:
 		preferredTagEditor = te
-		print "Preferred tag editor set to ", preferredTagEditor
+		print("Preferred tag editor set to ", preferredTagEditor)
 
 def getPreferredTagEditor():
 	global preferredTagEditor
@@ -193,7 +193,7 @@
 
 class SelectionEventInfo:
 	def __init__(self):
-		print "[SF-Plugin] SF:SelectionEventInfo init"
+		print("[SF-Plugin] SF:SelectionEventInfo init")
 		self["Service"] = ServiceEvent()
 		self.list.connectSelChanged(self.__selectionChanged)
 		self.timer = eTimer()
--- a/serienfilm/src/SerienFilm.py
+++ b/serienfilm/src/SerienFilm.py
@@ -24,7 +24,7 @@
 		</screen>"""
 
 	def __init__(self, session, args = None):
-		print "[SF-Plugin] SerienFilmCfg init"
+		print("[SF-Plugin] SerienFilmCfg init")
 		self.session = session
 		Screen.__init__(self, session)
 		self["myLabel"] = Label(_x("This plugin is configured by the MENU key in the movielist\n\nApplication details provides the HELP key in the movielist"))
--- a/serienfilm/src/plugin.py
+++ b/serienfilm/src/plugin.py
@@ -4,19 +4,19 @@
 from . import _x
 
 from Plugins.Plugin import PluginDescriptor
-from SerienFilm import SerienFilmVersion, SerienFilmCfg
+from .SerienFilm import SerienFilmVersion, SerienFilmCfg
 from traceback import print_exc
 from sys import stdout, exc_info
 from Screens.InfoBar import MoviePlayer
-from MovieSelection import MovieSelection
+from .MovieSelection import MovieSelection
 
 
 def pluginConfig(session, **kwargs):
-	print "[SF-Plugin] Config\n"
+	print("[SF-Plugin] Config\n")
 	try:
 		session.open(SerienFilmCfg)
-	except Exception, e:
-		print "[SF-Plugin] pluginConfig Config exception:\n" + str(e)
+	except Exception as e:
+		print("[SF-Plugin] pluginConfig Config exception:\n" + str(e))
 
 
 gLeavePlayerConfirmed = None
@@ -25,8 +25,8 @@
 	try:
 #		print "[SF-Plugin] showMoviesSF.InfoBar"
 		self.session.openWithCallback(self.movieSelected, MovieSelection)
-	except Exception, e:
-		print "[SF-Plugin] showMoviesSF exception:\n" + str(e)
+	except Exception as e:
+		print("[SF-Plugin] showMoviesSF exception:\n" + str(e))
 
 def showMoviesMP(self):
 	ref = self.session.nav.getCurrentlyPlayingServiceReference()
@@ -54,12 +54,12 @@
 	try:
 		dlg = self.create(screen, arguments, **kwargs)
 	except:
-		print 'EXCEPTION IN DIALOG INIT CODE, ABORTING:'
-		print '-'*60
+		print('EXCEPTION IN DIALOG INIT CODE, ABORTING:')
+		print('-'*60)
 		print_exc(file=stdout)
 		from enigma import quitMainloop
 		quitMainloop(5)
-		print '-'*60
+		print('-'*60)
 
 	if dlg is None:
 		return
@@ -81,10 +81,10 @@
 def autostart(reason, **kwargs):
 	if RUNPLUGIN != 1: return
 	if reason == 0: # start
-		if kwargs.has_key("session"):
+		if "session" in kwargs:
 			global gLeavePlayerConfirmed
 			Session = kwargs["session"]
-			print "[SF-Plugin] autostart, Session = " +  str(Session) + "\n"
+			print("[SF-Plugin] autostart, Session = " +  str(Session) + "\n")
 			try:
 				from Screens.InfoBar import InfoBar
 				InfoBar.showMovies = showMoviesSF
@@ -93,15 +93,15 @@
 					gLeavePlayerConfirmed = MoviePlayer.leavePlayerConfirmed
 				MoviePlayer.leavePlayerConfirmed = leavePlayerConfirmedMP
 
-				Session.doInstantiateDialog.im_class.doInstantiateDialog = doInstantiateDialogSF
+				Session.doInstantiateDialog.__self__.__class__.doInstantiateDialog = doInstantiateDialogSF
 				modname = Session.doInstantiateDialog.__module__
-				print "[SF-Plugin] mytest.Session.doInstantiateDialog modname = %s = %s" % (str(type(modname)), str(modname))
+				print("[SF-Plugin] mytest.Session.doInstantiateDialog modname = %s = %s" % (str(type(modname)), str(modname)))
 				
-			except Exception, e:
-				print "[SF-Plugin] autostart MovieList launch override exception:\n" + str(e)
+			except Exception as e:
+				print("[SF-Plugin] autostart MovieList launch override exception:\n" + str(e))
 
 		else:
-			print "[SF-Plugin] autostart without session\n"
+			print("[SF-Plugin] autostart without session\n")
 
 
 def Plugins(**kwargs):
@@ -112,5 +112,5 @@
 		icon = "SerienFilm.png",
 		where = PluginDescriptor.WHERE_PLUGINMENU,
 		fnc = pluginConfig) )
-	print "[SF-Plugin] autostart descriptors = " + str(descriptors)
+	print("[SF-Plugin] autostart descriptors = " + str(descriptors))
 	return descriptors
--- a/setpasswd/src/__init__.py
+++ b/setpasswd/src/__init__.py
@@ -12,7 +12,7 @@
 def _(txt):
         t = gettext.dgettext(PluginLanguageDomain, txt)
         if t == txt:
-                print "[SetPasswd] fallback to default translation for", txt
+                print("[SetPasswd] fallback to default translation for", txt)
                 t = gettext.gettext(txt)
         return t
 
--- a/setpasswd/src/plugin.py
+++ b/setpasswd/src/plugin.py
@@ -15,7 +15,7 @@
 from Components.Sources.List import List
 from Plugins.Plugin import PluginDescriptor
 
-from __init__ import _
+from .__init__ import _
 
 import string
 import sys 
@@ -79,7 +79,7 @@
 		return ''.join(Random().sample(passwdChars, passwdLength)) 
 
 	def SetPasswd(self):
-		print "Changing password for %s to %s" % (self.user,self.password) 
+		print("Changing password for %s to %s" % (self.user,self.password)) 
 		self.container = eConsoleAppContainer()
 		self.container.appClosed.append(self.runFinished)
 		self.container.dataAvail.append(self.dataAvail)
--- a/shoutcast/src/plugin.py
+++ b/shoutcast/src/plugin.py
@@ -45,7 +45,7 @@
 from Screens.MessageBox import MessageBox
 from Components.GUIComponent import GUIComponent
 from Components.Sources.StaticText import StaticText
-from urllib import quote
+from urllib.parse import quote
 from twisted.web.client import downloadPage
 from Screens.ChoiceBox import ChoiceBox
 from Screens.VirtualKeyBoard import VirtualKeyBoard
@@ -109,11 +109,11 @@
 	def clientConnectionLost(self, connector, reason):
 		lostreason=("Connection was closed cleanly" in vars(reason))
 		if lostreason==None:
-			print"[SHOUTcast] Lost connection, reason: %s ,trying to reconnect!" %reason
+			print("[SHOUTcast] Lost connection, reason: %s ,trying to reconnect!" %reason)
 			connector.connect()
 
 	def clientConnectionFailed(self, connector, reason):
-		print"[SHOUTcast] connection failed, reason: %s,trying to reconnect!" %reason
+		print("[SHOUTcast] connection failed, reason: %s,trying to reconnect!" %reason)
 		connector.connect()
 
 def sendUrlCommand(url, contextFactory=None, timeout=60, *args, **kwargs):
@@ -150,7 +150,7 @@
 
 	sz_w = getDesktop(0).size().width()
 	sz_h = getDesktop(0).size().height() - 95
-	print "[SHOUTcast] desktop size %dx%d\n" % (sz_w+90, sz_h+100)
+	print("[SHOUTcast] desktop size %dx%d\n" % (sz_w+90, sz_h+100))
 	if sz_h < 500:
 		sz_h += 4
 		skin = """
@@ -435,7 +435,7 @@
 		except: return []
 		data = root.find("data")
 		if data == None:
-			print "[SHOUTcast] could not find data tag, assume flat listing\n"
+			print("[SHOUTcast] could not find data tag, assume flat listing\n")
 			return [SHOUTcastGenre(name=childs.get("name")) for childs in root.findall("genre")]
 		for glist in data.findall("genrelist"):
 			for childs in glist.findall("genre"):
@@ -579,7 +579,7 @@
 		config_bitrate = int(config.plugins.shoutcast.streamingrate.value)
 		data = root.find("data")
 		if data == None:
-			print "[SHOUTcast] could not find data tag\n"
+			print("[SHOUTcast] could not find data tag\n")
 			return []
 		for slist in data.findall("stationlist"):
 			for childs in slist.findall("tunein"):
@@ -756,12 +756,12 @@
 			url=result[foundPos+14:foundPos2]
 			if len(url)>15:
 				url= url.replace(" ", "%20")
-				print "download url: %s " % url
+				print("download url: %s " % url)
 				upperl = url.upper()
 				validurl = (".JPG" in upperl) or (".PNG" in upperl) or (".GIF" in upperl) or (".JPEG" in upperl)
 			else:
 				validurl = False
-				print "[SHOUTcast] invalid cover url or pictureformat!"
+				print("[SHOUTcast] invalid cover url or pictureformat!")
 				if config.plugins.shoutcast.showcover.value:
 					self["cover"].doHide()
 			if validurl:
@@ -771,30 +771,30 @@
 				except:
 					pass
 				coverfile = coverfiles[self.currentcoverfile]
-				print "[SHOUTcast] downloading cover from %s to %s" % (url, coverfile)
+				print("[SHOUTcast] downloading cover from %s to %s" % (url, coverfile))
 				downloadPage(url, coverfile).addCallback(self.coverDownloadFinished, coverfile).addErrback(self.coverDownloadFailed)
 
 	def coverDownloadFailed(self,result):
-		print "[SHOUTcast] cover download failed:", result
+		print("[SHOUTcast] cover download failed:", result)
 		if config.plugins.shoutcast.showcover.value:
 			self["statustext"].setText(_("Error downloading cover..."))
 			self["cover"].doHide()
 
 	def coverDownloadFinished(self, result, coverfile):
 		if config.plugins.shoutcast.showcover.value:
-			print "[SHOUTcast] cover download finished:", coverfile
+			print("[SHOUTcast] cover download finished:", coverfile)
 			self["statustext"].setText("")
 			self["cover"].updateIcon(coverfile)
 			self["cover"].doShow()
 		
 	def __event(self, ev):
 		if ev != 17:
-			print "[SHOUTcast] EVENT ==>", ev
+			print("[SHOUTcast] EVENT ==>", ev)
 		if ev == 1 or ev == 4:
-			print "[SHOUTcast] Tuned in, playing now!"
+			print("[SHOUTcast] Tuned in, playing now!")
 		if ev == 3 or ev == 7:
 			self["statustext"].setText(_("Stream stopped playing, playback of stream stopped!"))
-			print "[SHOUTcast] Stream stopped playing, playback of stream stopped!"
+			print("[SHOUTcast] Stream stopped playing, playback of stream stopped!")
 			self.session.nav.stopService()
 		if ev == 5:
 			if not self.currPlay:
@@ -809,7 +809,7 @@
 						url = "http://images.google.com/search?tbm=isch&q=%s%s&biw=%s&bih=%s&ift=jpg&ift=gif&ift=png" % (quote(searchpara), quote(sTitle), config.plugins.shoutcast.coverwidth.value, config.plugins.shoutcast.coverheight.value)
 					else:
 						url = "http://images.google.com/search?tbm=isch&q=notavailable&biw=%s&bih=%s&ift=jpg&ift=gif&ift=png" % (config.plugins.shoutcast.coverwidth.value, config.plugins.shoutcast.coverheight.value)
-					print "[SHOUTcast] coverurl = %s " % url
+					print("[SHOUTcast] coverurl = %s " % url)
 					if self.currentGoogle:
 						self.nextGoogle = url
 					else:
@@ -818,11 +818,11 @@
 				if len(sTitle) == 0:
 					sTitle = "n/a"
 				title = _("Title: %s") % sTitle
-				print "[SHOUTcast] Title: %s " % title
+				print("[SHOUTcast] Title: %s " % title)
 				self["titel"].setText(title)
 				self.summaries.setText(title)
 			else:
-				print "[SHOUTcast] Ignoring useless updated info provided by streamengine!"
+				print("[SHOUTcast] Ignoring useless updated info provided by streamengine!")
 		#if ev == 6 or (ev > 8 and ev != 17):
 		#	print "[SHOUTcast] Abnormal event %s from stream, so stop playing!" % ev
 		#	self["statustext"].setText(_("Abnormal event from stream, aborting!"))
@@ -837,7 +837,7 @@
 		try:
 			self.session.nav.playService(sref)
 		except:
-			print "[SHOUTcast] Could not play %s" % sref
+			print("[SHOUTcast] Could not play %s" % sref)
 		self.currPlay = self.session.nav.getCurrentService()
 		self.currentStreamingURL = url
 		self["titel"].setText(_("Title: n/a"))
@@ -884,13 +884,13 @@
 	def doShow(self):
 		if not self.visible == 1:
 			self.visible = 1
-			print "[SHOUTcast] cover visible %s self.show" % self.visible
+			print("[SHOUTcast] cover visible %s self.show" % self.visible)
 			self.show()
 
 	def doHide(self):
 		if not self.visible == 0:
 			self.visible = 0
-			print "[SHOUTcast] cover visible %s self.hide" % self.visible
+			print("[SHOUTcast] cover visible %s self.hide" % self.visible)
 			self.hide()
 
 	def onShow(self):
@@ -913,7 +913,7 @@
 			self.decoding = self.decodeNext
 			self.decodeNext = None
 			if self.picload.startDecode(self.decoding) != 0:
-				print "[Shoutcast] Failed to start decoding next image"
+				print("[Shoutcast] Failed to start decoding next image")
 				self.decoding = None
 		else:
 			self.decoding = None
@@ -925,7 +925,7 @@
 			if self.picload.startDecode(filename) == 0:
 				self.decoding = filename
 			else:
-				print "[Shoutcast] Failed to start decoding image"
+				print("[Shoutcast] Failed to start decoding image")
 				self.decoding = None
 
 class SHOUTcastList(GUIComponent, object):
@@ -933,7 +933,7 @@
 		width = self.l.getItemSize().width()
 		res = [ None ]
 		if self.mode == 0: # GENRELIST
-			print "[SHOUTcast] list name=%s haschilds=%s opened=%s\n" % (item.name, item.haschilds, item.opened)
+			print("[SHOUTcast] list name=%s haschilds=%s opened=%s\n" % (item.name, item.haschilds, item.opened))
 			if item.parentid == "0": # main genre
 				if item.haschilds == "true":
 					if item.opened == "true":
--- a/showclock/src/plugin.py
+++ b/showclock/src/plugin.py
@@ -80,7 +80,7 @@
 height = getDesktop(0).size().height()
 config.plugins.ShowClock.position_x = ConfigNumber(default = int(width * 0.7))
 config.plugins.ShowClock.position_y = ConfigNumber(default=45)
-if debug: print pluginPrintname, "Clock X,Y position: %d,%d" %(config.plugins.ShowClock.position_x.value, config.plugins.ShowClock.position_y.value)
+if debug: print(pluginPrintname, "Clock X,Y position: %d,%d" %(config.plugins.ShowClock.position_x.value, config.plugins.ShowClock.position_y.value))
 
 ##############################################################################
 
@@ -206,7 +206,7 @@
 			MessageBox.TYPE_INFO)
 		
 	def keyMove(self):            
-		if debug: print pluginPrintname, "Move Clock"
+		if debug: print(pluginPrintname, "Move Clock")
 		self.hideKeypad() # close help window if open
 		self.session.openWithCallback(
 			self.startPositioner, MessageBox,
@@ -238,7 +238,7 @@
 	def setPosition(self):
 		self.pos = (config.plugins.ShowClock.position_x.value, config.plugins.ShowClock.position_y.value)
 		self.limit = (width - self.instance.size().width(), height - self.instance.size().height())
-		if debug: print pluginPrintname, "Clock X,Y limit: %d,%d" %(self.limit[0], self.limit[1])	
+		if debug: print(pluginPrintname, "Clock X,Y limit: %d,%d" %(self.limit[0], self.limit[1]))	
 		self.instance.move(ePoint(min(self.pos[0], self.limit[0]), min(self.pos[1], self.limit[1]))) # ensure clock visabilty even if resolution has changed
 	
 	def moveRelative(self, x = 0, y = 0):
@@ -358,8 +358,8 @@
 	try: # try to import DateToText converter (GP3 component) to check for its existence
 		from Components.Converter.DateToText import DateToText # change converter to obtain localized weekdays
 		currentSkin = currentSkin.replace('<convert type="ClockToText">Format:%A, %d.%m.%Y</convert>', '<convert type="DateToText">NNNN, DD.MM.YYYY</convert>')
-	except ImportError, ie:
-		print pluginPrintname, "DateToText converter not installed:", ie
+	except ImportError as ie:
+		print(pluginPrintname, "DateToText converter not installed:", ie)
 	return currentSkin
 	
 ##############################################################################
@@ -372,13 +372,13 @@
 	try:	
 	 	session.open(ShowClockSetup)
 	except:
-		print pluginPrintname, "Pluginexecution failed"
+		print(pluginPrintname, "Pluginexecution failed")
 
 ##############################################################################
 
 def Plugins(**kwargs):
 	
-	if debug: print pluginPrintname, "Setting entry points"
+	if debug: print(pluginPrintname, "Setting entry points")
 
 	list = [
 		PluginDescriptor(where=[PluginDescriptor.WHERE_SESSIONSTART], fnc=sessionstart)
--- a/simplerss/src/GoogleReader.py
+++ b/simplerss/src/GoogleReader.py
@@ -1,11 +1,11 @@
-from __future__ import print_function
+
 try:
-	from urllib import urlencode
+	from urllib.parse import urlencode
 except ImportError as ie:
 	from urllib.parse import urlencode
 
 from twisted.web.client import getPage
-from RSSFeed import UniversalFeed
+from .RSSFeed import UniversalFeed
 from twisted.internet.defer import Deferred
 from xml.etree.cElementTree import fromstring as cet_fromstring
 
--- a/simplerss/src/RSSFeed.py
+++ b/simplerss/src/RSSFeed.py
@@ -1,4 +1,4 @@
-from TagStrip import strip, strip_readable
+from .TagStrip import strip, strip_readable
 from Components.Scanner import ScanFile
 
 NS_RDF = "{http://www.w3.org/1999/02/22-rdf-syntax-ns#}"
@@ -82,9 +82,9 @@
 		return self
 
 	def __next__(self):
-		return self.next()
-
-	def next(self):
+		return next(self)
+
+	def __next__(self):
 		idx = self.idx
 		if idx > self.len:
 			raise StopIteration
--- a/simplerss/src/RSSPoller.py
+++ b/simplerss/src/RSSPoller.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # for localized messages
 from . import _
@@ -9,12 +9,12 @@
 from Tools.Notifications import AddPopup
 from Screens.MessageBox import MessageBox
 
-from RSSFeed import BaseFeed, UniversalFeed
+from .RSSFeed import BaseFeed, UniversalFeed
 
 from twisted.web.client import getPage
 from xml.etree.cElementTree import fromstring as cElementTree_fromstring
 
-from GoogleReader import GoogleReader
+from .GoogleReader import GoogleReader
 
 NOTIFICATIONID = 'SimpleRSSUpdateNotification'
 
@@ -176,7 +176,7 @@
 				# Inform User
 				update_notification_value = config.plugins.simpleRSS.update_notification.value
 				if update_notification_value == "preview":
-					from RSSScreens import RSSFeedView
+					from .RSSScreens import RSSFeedView
 
 					from Tools.Notifications import AddNotificationWithID, RemovePopup
 
@@ -196,7 +196,7 @@
 						NOTIFICATIONID
 					)
 				elif update_notification_value == "ticker":
-					from RSSTickerView import tickerView
+					from .RSSTickerView import tickerView
 					if not tickerView:
 						print("[SimpleRSS] missing ticker instance, something with my code is wrong :-/")
 					else:
--- a/simplerss/src/RSSScreens.py
+++ b/simplerss/src/RSSScreens.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 # for localized messages
 from . import _
@@ -13,7 +13,7 @@
 from Components.Sources.List import List
 from Components.Sources.StaticText import StaticText
 
-from RSSList import RSSFeedList
+from .RSSList import RSSFeedList
 
 class RSSSummary(Screen):
 	skin = """
@@ -134,7 +134,7 @@
 			"yellow": self.selectEnclosure,
 			"up": self.up,
 			"down": self.down,
-			"right": self.next,
+			"right": self.__next__,
 			"left": self.previous,
 			"nextBouquet": self.nextFeed,
 			"prevBouquet": self.previousFeed,
@@ -163,7 +163,7 @@
 	def down(self):
 		self["content"].pageDown()
 
-	def next(self):
+	def __next__(self):
 		if self.parent is not None:
 			(self.data, self.cur_idx, self.entries) = self.parent.nextEntry()
 			self.setContent()
@@ -176,7 +176,7 @@
 	def nextFeed(self):
 		# Show next Feed
 		if self.parent is not None:
-			result = self.parent.next()
+			result = next(self.parent)
 			self.feedTitle = result[0]
 			self.entries = len(result[1])
 			if self.entries:
@@ -254,7 +254,7 @@
 			{
 				"ok": self.showCurrentEntry,
 				"cancel": self.close,
-				"nextBouquet": self.next,
+				"nextBouquet": self.__next__,
 				"prevBouquet": self.previous,
 				"menu": self.menu,
 				"yellow": self.selectEnclosure,
@@ -338,7 +338,7 @@
 		self["content"].selectPrevious()
 		return (self["content"].current, self["content"].index, len(self.feed.history))
 
-	def next(self):
+	def __next__(self):
 		# Show next Feed
 		if self.parent is not None:
 			(self.feed, self.id) = self.parent.nextFeed()
@@ -479,7 +479,7 @@
 				if cur_idx > 0:
 					self.singleUpdate(cur_idx-1)
 			elif result[1] == "setup":
-				from RSSSetup import RSSSetup
+				from .RSSSetup import RSSSetup
 
 				self.session.openWithCallback(
 					self.refresh,
--- a/simplerss/src/RSSSetup.py
+++ b/simplerss/src/RSSSetup.py
@@ -126,7 +126,7 @@
 		self["config"].setList(self.list)
 
 	def notificationChanged(self, instance):
-		import RSSTickerView as tv
+		from . import RSSTickerView as tv
 		if instance and instance.value == "ticker":
 			if tv.tickerView is None:
 				print("[SimpleRSS] Ticker instantiated on startup")
--- a/simplerss/src/TagStrip.py
+++ b/simplerss/src/TagStrip.py
@@ -2,12 +2,12 @@
 from re import sub, finditer
 
 try:
-	import htmlentitydefs
-	iteritems = lambda d: d.iteritems()
+	import html.entities
+	iteritems = lambda d: iter(d.items())
 except ImportError as ie:
 	from html import entities as htmlentitydefs
-	iteritems = lambda d: d.items()
-	unichr = chr
+	iteritems = lambda d: list(d.items())
+	chr = chr
 
 def strip_readable(html):
 	# Newlines are rendered as whitespace in html
@@ -43,7 +43,7 @@
 	for x in entities:
 		key = x.group(0)
 		if key not in entitydict:
-			entitydict[key] = htmlentitydefs.name2codepoint[x.group(1)]
+			entitydict[key] = html.entities.name2codepoint[x.group(1)]
 
 	entities = finditer('&#x([0-9A-Fa-f]{2,2}?);', html)
 	for x in entities:
@@ -58,7 +58,7 @@
 			entitydict[key] = x.group(1)
 
 	for key, codepoint in iteritems(entitydict):
-		html = html.replace(key, unichr(int(codepoint)))
+		html = html.replace(key, chr(int(codepoint)))
 
 	# Return result with leading/trailing whitespaces removed
 	return html.strip()
--- a/simplerss/src/plugin.py
+++ b/simplerss/src/plugin.py
@@ -48,16 +48,16 @@
 
 	# Create one if we have none (no autostart)
 	if rssPoller is None:
-		from RSSPoller import RSSPoller
+		from .RSSPoller import RSSPoller
 		rssPoller = RSSPoller()
 
 	# Show Overview when we have feeds (or retrieving them from google)
 	if rssPoller.feeds or config.plugins.simpleRSS.enable_google_reader.value:
-		from RSSScreens import RSSOverview
+		from .RSSScreens import RSSOverview
 		session.openWithCallback(closed, RSSOverview, rssPoller)
 	# Show Setup otherwise
 	else:
-		from RSSSetup import RSSSetup
+		from .RSSSetup import RSSSetup
 		session.openWithCallback(closed, RSSSetup, rssPoller)
 
 # Plugin window has been closed
@@ -77,7 +77,7 @@
 	global rssPoller
 
 	if "session" in kwargs and config.plugins.simpleRSS.update_notification.value == "ticker":
-		import RSSTickerView as tv
+		from . import RSSTickerView as tv
 		if tv.tickerView is None:
 			tv.tickerView = kwargs["session"].instantiateDialog(tv.RSSTickerView)
 
@@ -85,7 +85,7 @@
 	if reason == 0 and config.plugins.simpleRSS.autostart.value and \
 		(not plugins.firstRun or "session" in kwargs):
 
-		from RSSPoller import RSSPoller
+		from .RSSPoller import RSSPoller
 		rssPoller = RSSPoller()
 	elif reason == 1:
 		if rssPoller is not None:
@@ -94,7 +94,7 @@
 
 # Filescan
 def filescan_open(item, session, **kwargs):
-	from RSSSetup import addFeed
+	from .RSSSetup import addFeed
 
 	# Add earch feed
 	for each in item:
--- a/startupservice/src/__init__.py
+++ b/startupservice/src/__init__.py
@@ -10,7 +10,7 @@
 def _(txt):
 	t = gettext.dgettext("StartUpService", txt)
 	if t == txt:
-		print "[StartUpService] fallback to default translation for", txt
+		print("[StartUpService] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/startuptostandby/src/plugin.py
+++ b/startuptostandby/src/plugin.py
@@ -2,19 +2,19 @@
 from Plugins.Plugin import PluginDescriptor
 from Components.config import config, ConfigSubsection, ConfigEnableDisable
 from Screens.Standby import Standby
-from StartupToStandbyConfiguration import StartupToStandbyConfiguration
+from .StartupToStandbyConfiguration import StartupToStandbyConfiguration
 from Tools import Notifications
 
 config.plugins.startuptostandby = ConfigSubsection()
 config.plugins.startuptostandby.enabled = ConfigEnableDisable(default = False)
 
 def main(session, **kwargs):
-	print "[StartupToStandby] Open Config Screen"
+	print("[StartupToStandby] Open Config Screen")
 	session.open(StartupToStandbyConfiguration)
 
 # sessionstart
 def sessionstart(reason, session = None):
-	print "[StartupToStandby] autostart"
+	print("[StartupToStandby] autostart")
 	if config.plugins.startuptostandby.enabled.value and reason == 0:
 		Notifications.AddNotification(Standby)
 
--- a/subsdownloader2/src/plugin.py
+++ b/subsdownloader2/src/plugin.py
@@ -347,7 +347,7 @@
 		comend self["subsList"].setList(self.serverAvailableSubtitles)"""
 		self.serverAvailableSubtitles=[]
 		position = 0
-		if serverList[0].has_key('no_files'):
+		if 'no_files' in serverList[0]:
 			for x  in serverList:
 				self.serverAvailableSubtitles.append(("["+str(x['language_name'])+"]_"+str(x['no_files'])+"cd__"+str(x['filename']), position))
 				position = position +1			
@@ -495,7 +495,7 @@
 			self.movie_filename = self["fileList"].getCurrentDirectory() + self["fileList"].getFilename()
 			if self.return_media_kind(self.return_extention(self.movie_filename))=="movie":
 				if config.plugins.subsdownloader.subtitleserver.value in PERISCOPE_PLUGINS: #== "OpenSubtitle":
-					exec('from Plugins.Extensions.SubsDownloader2.SourceCode.periscope.services.%s.services import %s as SERVICE') % (config.plugins.subsdownloader.subtitleserver.value,config.plugins.subsdownloader.subtitleserver.value)
+					exec(('from Plugins.Extensions.SubsDownloader2.SourceCode.periscope.services.%s.services import %s as SERVICE') % (config.plugins.subsdownloader.subtitleserver.value,config.plugins.subsdownloader.subtitleserver.value))
 					self.subtitles = SERVICE(None,Subtitle_Downloader_temp_dir)
 					#try:
 					self.subtitle_database=self.subtitles.process(self.movie_filename,[config.plugins.subsdownloader.SubsDownloader1stLang.value,config.plugins.subsdownloader.SubsDownloader2ndLang.value,config.plugins.subsdownloader.SubsDownloader3rdLang.value])
@@ -626,7 +626,7 @@
 		"""Creare media patern to file browser based on self.textEXTENSIONS from this module
 		and EXTENSIONS fron FileList module"""
 		self.textEXTENSIONS.update(EXTENSIONS)
-		return "^.*\.(" + str.join('|',self.textEXTENSIONS.keys()) + ")"
+		return "^.*\.(" + str.join('|',list(self.textEXTENSIONS.keys())) + ")"
 	
 	def return_extention(self, file_path):
 		"""get filename and return file extention"""
@@ -797,7 +797,7 @@
 						try:
 							os.remove(self.subtitles.ZipFilePath) #remove downloaded zip file
 						except:
-							print "Can't delete file: %s" % self.subtitles.ZipFilePath
+							print("Can't delete file: %s" % self.subtitles.ZipFilePath)
 				
 				if type(subtitle_filename) == type("string"):
 					self.convert_subtitle_to_movie(self.movie_filename, subtitle_filename)	
@@ -826,7 +826,7 @@
 				
 	def closeApplication(self):
 		os.system('rm -r %s' % Subtitle_Downloader_temp_dir)
-		print "\n[SubsDownloaderApplication] cancel\n"
+		print("\n[SubsDownloaderApplication] cancel\n")
 		self.session.nav.playService(self.altservice)
 		if config.plugins.subsdownloader.pathSave.value == True:
 			config.plugins.subsdownloader.path.value = self["fileList"].getCurrentDirectory()
@@ -1240,7 +1240,7 @@
 ###########################################################################
 
 def main(session, **kwargs):
-	print "\n[SubsDownloaderApplication] start\n"	
+	print("\n[SubsDownloaderApplication] start\n")	
 	if config.plugins.subsdownloader.AutoUpdate.value == True:
 		session.open(SubsDownloaderApplication)
 		autoupdate = IsNewVersionCheck()
--- a/subsdownloader2/src/pluginOnlineContent.py
+++ b/subsdownloader2/src/pluginOnlineContent.py
@@ -1,5 +1,5 @@
 import threading
-import urllib
+import urllib.request, urllib.parse, urllib.error
 import os
 from Screens.Console import Console
 from Screens.Screen import Screen
@@ -28,14 +28,14 @@
             current_vestion_data = open(self.__installed_version_info_file, "r")
             current_verion = current_vestion_data.readline()
             current_vestion_data.close()
-            print "Current version: %s" % str(current_verion)
+            print("Current version: %s" % str(current_verion))
         except:
             error_detected = 1        
         try:
-            latest_vestion_data = urllib.urlopen(self.__latest_version_info_url)
+            latest_vestion_data = urllib.request.urlopen(self.__latest_version_info_url)
             latest_verion = latest_vestion_data.readlines()
             latest_vestion_data.close()
-            print "Latest version: %s" % str(latest_verion[0])
+            print("Latest version: %s" % str(latest_verion[0]))
         #else:
         except:
             #latest_vestion_data.close()
@@ -45,10 +45,10 @@
             return False
         else:
             if latest_verion[0] > current_verion:
-                print "Jest nowa wersja pluginu" 
+                print("Jest nowa wersja pluginu") 
                 return latest_verion[1]
             else:
-                print "Posiadasz najnowsza wersje pluginu"
+                print("Posiadasz najnowsza wersje pluginu")
                 return False
 
 
@@ -111,7 +111,7 @@
 		
 		
 def flagcounetr(CallBackFunction):
-    flag = urllib.urlopen(flag_counter_url,)
+    flag = urllib.request.urlopen(flag_counter_url,)
     Subtitle_Downloader_temp_dir = '/tmp/SubsDownloader_cache/' # Sprawdzac czy sciezka jest taka sama jak w plugin.py
     picture_file = open(Subtitle_Downloader_temp_dir+"plugin_users.png", "wb")
     picture_file.write(flag.read())
--- a/subsdownloader2/src/SourceCode/BeautifulSoup.py
+++ b/subsdownloader2/src/SourceCode/BeautifulSoup.py
@@ -76,7 +76,7 @@
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE, DAMMIT.
 
 """
-from __future__ import generators
+
 
 __author__ = "Leonard Richardson (leonardr@segfault.org)"
 __version__ = "3.2.0"
@@ -85,12 +85,13 @@
 
 from sgmllib import SGMLParser, SGMLParseError
 import codecs
-import markupbase
+import _markupbase
 import types
 import re
 import sgmllib
+import collections
 try:
-  from htmlentitydefs import name2codepoint
+  from html.entities import name2codepoint
 except ImportError:
   name2codepoint = {}
 try:
@@ -100,7 +101,7 @@
 
 #These hacks make Beautiful Soup able to parse XML with namespaces
 sgmllib.tagfind = re.compile('[a-zA-Z][-_.:a-zA-Z0-9]*')
-markupbase._declname_match = re.compile(r'[a-zA-Z][-_.:a-zA-Z0-9]*\s*').match
+_markupbase._declname_match = re.compile(r'[a-zA-Z][-_.:a-zA-Z0-9]*\s*').match
 
 DEFAULT_OUTPUT_ENCODING = "utf-8"
 
@@ -162,7 +163,7 @@
         #this element (and any children) hadn't been parsed. Connect
         #the two.
         lastChild = self._lastRecursiveChild()
-        nextElement = lastChild.next
+        nextElement = lastChild.__next__
 
         if self.previous:
             self.previous.next = nextElement
@@ -187,7 +188,7 @@
         return lastChild
 
     def insert(self, position, newChild):
-        if isinstance(newChild, basestring) \
+        if isinstance(newChild, str) \
             and not isinstance(newChild, NavigableString):
             newChild = NavigableString(newChild)
 
@@ -241,7 +242,7 @@
                 newChild.nextSibling.previousSibling = newChild
             newChildsLastElement.next = nextChild
 
-        if newChildsLastElement.next:
+        if newChildsLastElement.__next__:
             newChildsLastElement.next.previous = newChildsLastElement
         self.contents.insert(position, newChild)
 
@@ -342,7 +343,7 @@
                 return [element for element in generator()
                         if isinstance(element, Tag)]
             # findAll*('tag-name')
-            elif isinstance(name, basestring):
+            elif isinstance(name, str):
                 return [element for element in generator()
                         if isinstance(element, Tag) and
                         element.name == name]
@@ -355,7 +356,7 @@
         g = generator()
         while True:
             try:
-                i = g.next()
+                i = next(g)
             except StopIteration:
                 break
             if i:
@@ -371,7 +372,7 @@
     def nextGenerator(self):
         i = self
         while i is not None:
-            i = i.next
+            i = i.__next__
             yield i
 
     def nextSiblingGenerator(self):
@@ -406,22 +407,22 @@
     def toEncoding(self, s, encoding=None):
         """Encodes an object to a string in some encoding, or to Unicode.
         ."""
-        if isinstance(s, unicode):
+        if isinstance(s, str):
             if encoding:
                 s = s.encode(encoding)
         elif isinstance(s, str):
             if encoding:
                 s = s.encode(encoding)
             else:
-                s = unicode(s)
+                s = str(s)
         else:
             if encoding:
                 s  = self.toEncoding(str(s), encoding)
             else:
-                s = unicode(s)
+                s = str(s)
         return s
 
-class NavigableString(unicode, PageElement):
+class NavigableString(str, PageElement):
 
     def __new__(cls, value):
         """Create a new NavigableString.
@@ -431,9 +432,9 @@
         passed in to the superclass's __new__ or the superclass won't know
         how to handle non-ASCII characters.
         """
-        if isinstance(value, unicode):
-            return unicode.__new__(cls, value)
-        return unicode.__new__(cls, value, DEFAULT_OUTPUT_ENCODING)
+        if isinstance(value, str):
+            return str.__new__(cls, value)
+        return str.__new__(cls, value, DEFAULT_OUTPUT_ENCODING)
 
     def __getnewargs__(self):
         return (NavigableString.__str__(self),)
@@ -445,7 +446,7 @@
         if attr == 'string':
             return self
         else:
-            raise AttributeError, "'%s' object has no attribute '%s'" % (self.__class__.__name__, attr)
+            raise AttributeError("'%s' object has no attribute '%s'" % (self.__class__.__name__, attr))
 
     def __unicode__(self):
         return str(self).decode(DEFAULT_OUTPUT_ENCODING)
@@ -483,7 +484,7 @@
     def _invert(h):
         "Cheap function to invert a hash."
         i = {}
-        for k,v in h.items():
+        for k,v in list(h.items()):
             i[v] = k
         return i
 
@@ -502,23 +503,23 @@
         escaped."""
         x = match.group(1)
         if self.convertHTMLEntities and x in name2codepoint:
-            return unichr(name2codepoint[x])
+            return chr(name2codepoint[x])
         elif x in self.XML_ENTITIES_TO_SPECIAL_CHARS:
             if self.convertXMLEntities:
                 return self.XML_ENTITIES_TO_SPECIAL_CHARS[x]
             else:
-                return u'&%s;' % x
+                return '&%s;' % x
         elif len(x) > 0 and x[0] == '#':
             # Handle numeric entities
             if len(x) > 1 and x[1] == 'x':
-                return unichr(int(x[2:], 16))
+                return chr(int(x[2:], 16))
             else:
-                return unichr(int(x[1:]))
+                return chr(int(x[1:]))
 
         elif self.escapeUnrecognizedEntities:
-            return u'&amp;%s;' % x
+            return '&amp;%s;' % x
         else:
-            return u'&%s;' % x
+            return '&%s;' % x
 
     def __init__(self, parser, name, attrs=None, parent=None,
                  previous=None):
@@ -532,7 +533,7 @@
         if attrs is None:
             attrs = []
         elif isinstance(attrs, dict):
-            attrs = attrs.items()
+            attrs = list(attrs.items())
         self.attrs = attrs
         self.contents = []
         self.setup(parent, previous)
@@ -543,11 +544,11 @@
         self.escapeUnrecognizedEntities = parser.escapeUnrecognizedEntities
 
         # Convert any HTML, XML, or numeric entities in the attribute values.
-        convert = lambda(k, val): (k,
+        convert = lambda k_val: (k_val[0],
                                    re.sub("&(#\d+|#x[0-9a-fA-F]+|\w+);",
                                           self._convertEntities,
-                                          val))
-        self.attrs = map(convert, self.attrs)
+                                          k_val[1]))
+        self.attrs = list(map(convert, self.attrs))
 
     def getString(self):
         if (len(self.contents) == 1
@@ -561,16 +562,16 @@
 
     string = property(getString, setString)
 
-    def getText(self, separator=u""):
+    def getText(self, separator=""):
         if not len(self.contents):
-            return u""
-        stopNode = self._lastRecursiveChild().next
+            return ""
+        stopNode = self._lastRecursiveChild().__next__
         strings = []
         current = self.contents[0]
         while current is not stopNode:
             if isinstance(current, NavigableString):
                 strings.append(current.strip())
-            current = current.next
+            current = current.__next__
         return separator.join(strings)
 
     text = property(getText)
@@ -593,7 +594,7 @@
         raise ValueError("Tag.index: element not in tag")
 
     def has_key(self, key):
-        return self._getAttrMap().has_key(key)
+        return key in self._getAttrMap()
 
     def __getitem__(self, key):
         """tag[key] returns the value of the 'key' attribute for the tag,
@@ -611,7 +612,7 @@
     def __contains__(self, x):
         return x in self.contents
 
-    def __nonzero__(self):
+    def __bool__(self):
         "A tag is non-None even if it has no contents."
         return True
 
@@ -637,14 +638,14 @@
                 #We don't break because bad HTML can define the same
                 #attribute multiple times.
             self._getAttrMap()
-            if self.attrMap.has_key(key):
+            if key in self.attrMap:
                 del self.attrMap[key]
 
     def __call__(self, *args, **kwargs):
         """Calling a tag like a function is the same as calling its
         findAll() method. Eg. tag('a') returns a list of all the A tags
         found within this tag."""
-        return apply(self.findAll, args, kwargs)
+        return self.findAll(*args, **kwargs)
 
     def __getattr__(self, tag):
         #print "Getattr %s.%s" % (self.__class__, tag)
@@ -652,7 +653,7 @@
             return self.find(tag[:-3])
         elif tag.find('__') != 0:
             return self.find(tag)
-        raise AttributeError, "'%s' object has no attribute '%s'" % (self.__class__, tag)
+        raise AttributeError("'%s' object has no attribute '%s'" % (self.__class__, tag))
 
     def __eq__(self, other):
         """Returns true iff this tag has the same name, the same attributes,
@@ -705,7 +706,7 @@
         if self.attrs:
             for key, val in self.attrs:
                 fmt = '%s="%s"'
-                if isinstance(val, basestring):
+                if isinstance(val, str):
                     if self.containsSubstitutions and '%SOUP-ENCODING%' in val:
                         val = self.substituteEncoding(val, encoding)
 
@@ -782,7 +783,7 @@
             return
         current = self.contents[0]
         while current is not None:
-            next = current.next
+            next = current.__next__
             if isinstance(current, Tag):
                 del current.contents[:]
             current.parent = None
@@ -875,11 +876,11 @@
     def recursiveChildGenerator(self):
         if not len(self.contents):
             raise StopIteration
-        stopNode = self._lastRecursiveChild().next
+        stopNode = self._lastRecursiveChild().__next__
         current = self.contents[0]
         while current is not stopNode:
             yield current
-            current = current.next
+            current = current.__next__
 
 
 # Next, a couple classes to represent queries and their results.
@@ -889,7 +890,7 @@
 
     def __init__(self, name=None, attrs={}, text=None, **kwargs):
         self.name = name
-        if isinstance(attrs, basestring):
+        if isinstance(attrs, str):
             kwargs['class'] = _match_css_class(attrs)
             attrs = None
         if kwargs:
@@ -913,7 +914,7 @@
         if isinstance(markupName, Tag):
             markup = markupName
             markupAttrs = markup
-        callFunctionWithTagData = callable(self.name) \
+        callFunctionWithTagData = isinstance(self.name, collections.Callable) \
                                 and not isinstance(markupName, Tag)
 
         if (not self.name) \
@@ -925,7 +926,7 @@
             else:
                 match = True
                 markupAttrMap = None
-                for attr, matchAgainst in self.attrs.items():
+                for attr, matchAgainst in list(self.attrs.items()):
                     if not markupAttrMap:
                          if hasattr(markupAttrs, 'get'):
                             markupAttrMap = markupAttrs
@@ -963,12 +964,12 @@
                 found = self.searchTag(markup)
         # If it's text, make sure the text matches.
         elif isinstance(markup, NavigableString) or \
-                 isinstance(markup, basestring):
+                 isinstance(markup, str):
             if self._matches(markup, self.text):
                 found = markup
         else:
-            raise Exception, "I don't know how to match against a %s" \
-                  % markup.__class__
+            raise Exception("I don't know how to match against a %s" \
+                  % markup.__class__)
         return found
 
     def _matches(self, markup, matchAgainst):
@@ -976,15 +977,15 @@
         result = False
         if matchAgainst is True:
             result = markup is not None
-        elif callable(matchAgainst):
+        elif isinstance(matchAgainst, collections.Callable):
             result = matchAgainst(markup)
         else:
             #Custom match methods take the tag as an argument, but all
             #other ways of matching match the tag name as a string.
             if isinstance(markup, Tag):
                 markup = markup.name
-            if markup and not isinstance(markup, basestring):
-                markup = unicode(markup)
+            if markup and not isinstance(markup, str):
+                markup = str(markup)
             #Now we know that chunk is either a string, or None.
             if hasattr(matchAgainst, 'match'):
                 # It's a regexp object.
@@ -992,10 +993,10 @@
             elif hasattr(matchAgainst, '__iter__'): # list-like
                 result = markup in matchAgainst
             elif hasattr(matchAgainst, 'items'):
-                result = markup.has_key(matchAgainst)
-            elif matchAgainst and isinstance(markup, basestring):
-                if isinstance(markup, unicode):
-                    matchAgainst = unicode(matchAgainst)
+                result = matchAgainst in markup
+            elif matchAgainst and isinstance(markup, str):
+                if isinstance(markup, str):
+                    matchAgainst = str(matchAgainst)
                 else:
                     matchAgainst = str(matchAgainst)
 
@@ -1020,7 +1021,7 @@
     for portion in args:
         if hasattr(portion, 'items'):
             #It's a map. Merge it.
-            for k,v in portion.items():
+            for k,v in list(portion.items()):
                 built[k] = v
         elif hasattr(portion, '__iter__'): # is a list
             #It's a list. Map each item to the default.
@@ -1063,7 +1064,7 @@
                        lambda x: '<!' + x.group(1) + '>')
                       ]
 
-    ROOT_TAG_NAME = u'[document]'
+    ROOT_TAG_NAME = '[document]'
 
     HTML_ENTITIES = "html"
     XML_ENTITIES = "xml"
@@ -1159,14 +1160,14 @@
     def _feed(self, inDocumentEncoding=None, isHTML=False):
         # Convert the document to Unicode.
         markup = self.markup
-        if isinstance(markup, unicode):
+        if isinstance(markup, str):
             if not hasattr(self, 'originalEncoding'):
                 self.originalEncoding = None
         else:
             dammit = UnicodeDammit\
                      (markup, [self.fromEncoding, inDocumentEncoding],
                       smartQuotesTo=self.smartQuotesTo, isHTML=isHTML)
-            markup = dammit.unicode
+            markup = dammit.str
             self.originalEncoding = dammit.originalEncoding
             self.declaredHTMLEncoding = dammit.declaredHTMLEncoding
         if markup:
@@ -1205,8 +1206,8 @@
     def isSelfClosingTag(self, name):
         """Returns true iff the given string is the name of a
         self-closing tag according to this parser."""
-        return self.SELF_CLOSING_TAGS.has_key(name) \
-               or self.instanceSelfClosingTags.has_key(name)
+        return name in self.SELF_CLOSING_TAGS \
+               or name in self.instanceSelfClosingTags
 
     def reset(self):
         Tag.__init__(self, self, self.ROOT_TAG_NAME)
@@ -1235,7 +1236,7 @@
 
     def endData(self, containerClass=NavigableString):
         if self.currentData:
-            currentData = u''.join(self.currentData)
+            currentData = ''.join(self.currentData)
             if (currentData.translate(self.STRIP_ASCII_SPACES) == '' and
                 not set([tag.name for tag in self.tagStack]).intersection(
                     self.PRESERVE_WHITESPACE_TAGS)):
@@ -1298,7 +1299,7 @@
 
         nestingResetTriggers = self.NESTABLE_TAGS.get(name)
         isNestable = nestingResetTriggers != None
-        isResetNesting = self.RESET_NESTING_TAGS.has_key(name)
+        isResetNesting = name in self.RESET_NESTING_TAGS
         popTo = None
         inclusive = True
         for i in range(len(self.tagStack)-1, 0, -1):
@@ -1311,7 +1312,7 @@
             if (nestingResetTriggers is not None
                 and p.name in nestingResetTriggers) \
                 or (nestingResetTriggers is None and isResetNesting
-                    and self.RESET_NESTING_TAGS.has_key(p.name)):
+                    and p.name in self.RESET_NESTING_TAGS):
 
                 #If we encounter one of the nesting reset triggers
                 #peculiar to this tag, or we encounter another tag
@@ -1382,7 +1383,7 @@
         object, possibly one with a %SOUP-ENCODING% slot into which an
         encoding will be plugged later."""
         if text[:3] == "xml":
-            text = u"xml version='1.0' encoding='%SOUP-ENCODING%'"
+            text = "xml version='1.0' encoding='%SOUP-ENCODING%'"
         self._toStringSubclass(text, ProcessingInstruction)
 
     def handle_comment(self, text):
@@ -1392,7 +1393,7 @@
     def handle_charref(self, ref):
         "Handle character references as data."
         if self.convertEntities:
-            data = unichr(int(ref))
+            data = chr(int(ref))
         else:
             data = '&#%s;' % ref
         self.handle_data(data)
@@ -1404,7 +1405,7 @@
         data = None
         if self.convertHTMLEntities:
             try:
-                data = unichr(name2codepoint[ref])
+                data = chr(name2codepoint[ref])
             except KeyError:
                 pass
 
@@ -1513,7 +1514,7 @@
     BeautifulStoneSoup before writing your own subclass."""
 
     def __init__(self, *args, **kwargs):
-        if not kwargs.has_key('smartQuotesTo'):
+        if 'smartQuotesTo' not in kwargs:
             kwargs['smartQuotesTo'] = self.HTML_ENTITIES
         kwargs['isHTML'] = True
         BeautifulStoneSoup.__init__(self, *args, **kwargs)
@@ -1696,7 +1697,7 @@
             parent._getAttrMap()
             if (isinstance(tag, Tag) and len(tag.contents) == 1 and
                 isinstance(tag.contents[0], NavigableString) and
-                not parent.attrMap.has_key(tag.name)):
+                tag.name not in parent.attrMap):
                 parent[tag.name] = tag.contents[0]
         BeautifulStoneSoup.popTag(self)
 
@@ -1732,7 +1733,7 @@
 # Autodetects character encodings.
 # Download from http://chardet.feedparser.org/
 try:
-    import chardet
+    from . import chardet
 #    import chardet.constants
 #    chardet.constants._debug = 1
 except ImportError:
@@ -1770,9 +1771,9 @@
                      self._detectEncoding(markup, isHTML)
         self.smartQuotesTo = smartQuotesTo
         self.triedEncodings = []
-        if markup == '' or isinstance(markup, unicode):
+        if markup == '' or isinstance(markup, str):
             self.originalEncoding = None
-            self.unicode = unicode(markup)
+            self.str = str(markup)
             return
 
         u = None
@@ -1785,7 +1786,7 @@
                 if u: break
 
         # If no luck and we have auto-detection library, try that:
-        if not u and chardet and not isinstance(self.markup, unicode):
+        if not u and chardet and not isinstance(self.markup, str):
             u = self._convertFrom(chardet.detect(self.markup)['encoding'])
 
         # As a last resort, try utf-8 and windows-1252:
@@ -1794,7 +1795,7 @@
                 u = self._convertFrom(proposed_encoding)
                 if u: break
 
-        self.unicode = u
+        self.str = u
         if not u: self.originalEncoding = None
 
     def _subMSChar(self, orig):
@@ -1821,7 +1822,7 @@
                                                       "iso-8859-1",
                                                       "iso-8859-2"):
             markup = re.compile("([\x80-\x9f])").sub \
-                     (lambda(x): self._subMSChar(x.group(1)),
+                     (lambda x: self._subMSChar(x.group(1)),
                       markup)
 
         try:
@@ -1829,7 +1830,7 @@
             u = self._toUnicode(markup, proposed)
             self.markup = u
             self.originalEncoding = proposed
-        except Exception, e:
+        except Exception as e:
             # print "That didn't work!"
             # print e
             return None
@@ -1858,7 +1859,7 @@
         elif data[:4] == '\xff\xfe\x00\x00':
             encoding = 'utf-32le'
             data = data[4:]
-        newdata = unicode(data, encoding)
+        newdata = str(data, encoding)
         return newdata
 
     def _detectEncoding(self, xml_data, isHTML=False):
@@ -1871,41 +1872,41 @@
             elif xml_data[:4] == '\x00\x3c\x00\x3f':
                 # UTF-16BE
                 sniffed_xml_encoding = 'utf-16be'
-                xml_data = unicode(xml_data, 'utf-16be').encode('utf-8')
+                xml_data = str(xml_data, 'utf-16be').encode('utf-8')
             elif (len(xml_data) >= 4) and (xml_data[:2] == '\xfe\xff') \
                      and (xml_data[2:4] != '\x00\x00'):
                 # UTF-16BE with BOM
                 sniffed_xml_encoding = 'utf-16be'
-                xml_data = unicode(xml_data[2:], 'utf-16be').encode('utf-8')
+                xml_data = str(xml_data[2:], 'utf-16be').encode('utf-8')
             elif xml_data[:4] == '\x3c\x00\x3f\x00':
                 # UTF-16LE
                 sniffed_xml_encoding = 'utf-16le'
-                xml_data = unicode(xml_data, 'utf-16le').encode('utf-8')
+                xml_data = str(xml_data, 'utf-16le').encode('utf-8')
             elif (len(xml_data) >= 4) and (xml_data[:2] == '\xff\xfe') and \
                      (xml_data[2:4] != '\x00\x00'):
                 # UTF-16LE with BOM
                 sniffed_xml_encoding = 'utf-16le'
-                xml_data = unicode(xml_data[2:], 'utf-16le').encode('utf-8')
+                xml_data = str(xml_data[2:], 'utf-16le').encode('utf-8')
             elif xml_data[:4] == '\x00\x00\x00\x3c':
                 # UTF-32BE
                 sniffed_xml_encoding = 'utf-32be'
-                xml_data = unicode(xml_data, 'utf-32be').encode('utf-8')
+                xml_data = str(xml_data, 'utf-32be').encode('utf-8')
             elif xml_data[:4] == '\x3c\x00\x00\x00':
                 # UTF-32LE
                 sniffed_xml_encoding = 'utf-32le'
-                xml_data = unicode(xml_data, 'utf-32le').encode('utf-8')
+                xml_data = str(xml_data, 'utf-32le').encode('utf-8')
             elif xml_data[:4] == '\x00\x00\xfe\xff':
                 # UTF-32BE with BOM
                 sniffed_xml_encoding = 'utf-32be'
-                xml_data = unicode(xml_data[4:], 'utf-32be').encode('utf-8')
+                xml_data = str(xml_data[4:], 'utf-32be').encode('utf-8')
             elif xml_data[:4] == '\xff\xfe\x00\x00':
                 # UTF-32LE with BOM
                 sniffed_xml_encoding = 'utf-32le'
-                xml_data = unicode(xml_data[4:], 'utf-32le').encode('utf-8')
+                xml_data = str(xml_data[4:], 'utf-32le').encode('utf-8')
             elif xml_data[:3] == '\xef\xbb\xbf':
                 # UTF-8 with BOM
                 sniffed_xml_encoding = 'utf-8'
-                xml_data = unicode(xml_data[3:], 'utf-8').encode('utf-8')
+                xml_data = str(xml_data[3:], 'utf-8').encode('utf-8')
             else:
                 sniffed_xml_encoding = 'ascii'
                 pass
@@ -1968,7 +1969,7 @@
                     250,251,252,253,254,255)
             import string
             c.EBCDIC_TO_ASCII_MAP = string.maketrans( \
-            ''.join(map(chr, range(256))), ''.join(map(chr, emap)))
+            ''.join(map(chr, list(range(256)))), ''.join(map(chr, emap)))
         return s.translate(c.EBCDIC_TO_ASCII_MAP)
 
     MS_CHARS = { '\x80' : ('euro', '20AC'),
@@ -2011,4 +2012,4 @@
 if __name__ == '__main__':
     import sys
     soup = BeautifulSoup(sys.stdin)
-    print soup.prettify()
+    print(soup.prettify())
--- a/subsdownloader2/src/SourceCode/MediaInfoDLL.py
+++ b/subsdownloader2/src/SourceCode/MediaInfoDLL.py
@@ -54,16 +54,16 @@
 
 
 class Stream:
-	General, Video, Audio, Text, Chapters, Image, Menu, Max = range(8)
+	General, Video, Audio, Text, Chapters, Image, Menu, Max = list(range(8))
 
 class Info:
-	Name, Text, Measure, Options, Name_Text, Measure_Text, Info, HowTo, Max = range(9)
+	Name, Text, Measure, Options, Name_Text, Measure_Text, Info, HowTo, Max = list(range(9))
 
 class InfoOption:
-	ShowInInform, Reserved, ShowInSupported, TypeOfValue, Max = range(5)
+	ShowInInform, Reserved, ShowInSupported, TypeOfValue, Max = list(range(5))
 
 class FileOptions:
-	Nothing, Recursive, CloseAll, xxNonexx_3, Max = range(5)
+	Nothing, Recursive, CloseAll, xxNonexx_3, Max = list(range(5))
 
 
 
@@ -208,25 +208,25 @@
 	#General information
 	def Inform(self):
 		if MustUseAnsi:
-			return unicode(self.MediaInfoA_Inform(self.Handle, 0), "utf_8") 
+			return str(self.MediaInfoA_Inform(self.Handle, 0), "utf_8") 
 		else:
 			return self.MediaInfo_Inform(self.Handle, 0)
 	def Get(self, StreamKind, StreamNumber, Parameter, InfoKind=Info.Text, SearchKind=Info.Name):
 		if type(Parameter)==str:
-			return unicode(self.MediaInfoA_Get(self.Handle, StreamKind, StreamNumber, Parameter, InfoKind, SearchKind), "utf_8") 
+			return str(self.MediaInfoA_Get(self.Handle, StreamKind, StreamNumber, Parameter, InfoKind, SearchKind), "utf_8") 
 		elif MustUseAnsi:
-			return unicode(self.MediaInfoA_Get(self.Handle, StreamKind, StreamNumber, Parameter.encode("utf-8"), InfoKind, SearchKind), "utf_8") 
+			return str(self.MediaInfoA_Get(self.Handle, StreamKind, StreamNumber, Parameter.encode("utf-8"), InfoKind, SearchKind), "utf_8") 
 		else:
 			return self.MediaInfo_Get(self.Handle, StreamKind, StreamNumber, Parameter, InfoKind, SearchKind)
 	def GetI(self, StreamKind, StreamNumber, Parameter, InfoKind=Info.Text):
 		if MustUseAnsi:
-			return unicode(self.MediaInfoA_GetI(self.Handle, StreamKind, StreamNumber, Parameter, InfoKind), "utf_8") 
+			return str(self.MediaInfoA_GetI(self.Handle, StreamKind, StreamNumber, Parameter, InfoKind), "utf_8") 
 		else:
 			return self.MediaInfo_GetI(self.Handle, StreamKind, StreamNumber, Parameter, InfoKind)
-	def Set(self, ToSet, StreamKind, StreamNumber, Parameter, OldParameter=u""):
-		if type(Parameter)==str and type(OldParameter)==unicode:
+	def Set(self, ToSet, StreamKind, StreamNumber, Parameter, OldParameter=""):
+		if type(Parameter)==str and type(OldParameter)==str:
 			Parameter=Parameter.decode("utf-8")
-		if type(Parameter)==unicode and type(OldParameter)==str:
+		if type(Parameter)==str and type(OldParameter)==str:
 			OldParameter=OldParameter.decode("utf-8")
 		if type(Parameter)==str:
 			return self.MediaInfoA_Set(self.Handle, ToSet, StreamKind, StreamNumber, Parameter, OldParameter)
@@ -241,26 +241,26 @@
 			return self.MediaInfo_SetI(self.Handle, ToSet, StreamKind, StreamNumber, Parameter, OldValue)
 
 	#Options
-	def Option(self, Option, Value=u""):
-		if type(Option)==str and type(Value)==unicode:
+	def Option(self, Option, Value=""):
+		if type(Option)==str and type(Value)==str:
 			Option=Option.decode("utf-8")
-		if type(Option)==unicode and type(Value)==str:
+		if type(Option)==str and type(Value)==str:
 			Value=Value.decode("utf-8")
 		if type(Option)==str:
-			return unicode(self.MediaInfoA_Option(self.Handle, Option.encode("utf-8"), Value.encode("utf-8")), "utf_8") 
+			return str(self.MediaInfoA_Option(self.Handle, Option.encode("utf-8"), Value.encode("utf-8")), "utf_8") 
 		elif MustUseAnsi:
-			return unicode(self.MediaInfoA_Option(self.Handle, Option.encode("utf-8"), Value.encode("utf-8")), "utf_8") 
+			return str(self.MediaInfoA_Option(self.Handle, Option.encode("utf-8"), Value.encode("utf-8")), "utf_8") 
 		else:
 			return self.MediaInfo_Option(self.Handle, Option, Value)
-	def Option_Static(self, Option, Value=u""):
-		if type(Option)==str and type(Value)==unicode:
+	def Option_Static(self, Option, Value=""):
+		if type(Option)==str and type(Value)==str:
 			Option=Option.decode("utf-8")
-		if type(Option)==unicode and type(Value)==str:
+		if type(Option)==str and type(Value)==str:
 			Value=Value.decode("utf-8")
 		if type(Option)==str:
-			return unicode(self.MediaInfoA_Option(None, Option, Value), "utf_8") 
+			return str(self.MediaInfoA_Option(None, Option, Value), "utf_8") 
 		elif MustUseAnsi:
-			return unicode(self.MediaInfoA_Option(None, Option.encode("utf-8"), Value.encode("utf-8")), "utf_8") 
+			return str(self.MediaInfoA_Option(None, Option.encode("utf-8"), Value.encode("utf-8")), "utf_8") 
 		else:
 			return self.MediaInfo_Option(None, Option, Value)
 	def State_Get(self):
@@ -387,15 +387,15 @@
 		return MediaInfoList_GetI (self.Handle, FilePos, StreamKind, StreamNumber, Parameter, InfoKind)
 	def Get(self, FilePos, StreamKind, StreamNumber, Parameter, InfoKind=Info.Text, SearchKind=Info.Name):
 		return MediaInfoList_Get (self.Handle, FilePos, StreamKind, StreamNumber, (Parameter), InfoKind, SearchKind)
-	def SetI(self, ToSet, FilePos, StreamKind, StreamNumber, Parameter, OldParameter=u""):
+	def SetI(self, ToSet, FilePos, StreamKind, StreamNumber, Parameter, OldParameter=""):
 		return MediaInfoList_SetI (self, Handle, ToSet, FilePos, StreamKind, StreamNumber, Parameter, OldParameter)
-	def Set(self, ToSet, FilePos, StreamKind, StreamNumber, Parameter, OldParameter=u""):
+	def Set(self, ToSet, FilePos, StreamKind, StreamNumber, Parameter, OldParameter=""):
 		return MediaInfoList_Set (self.Handle, ToSet, FilePos, StreamKind, StreamNumber, Parameter, OldParameter)
 
 	#Options
-	def Option(self, Option, Value=u""):
+	def Option(self, Option, Value=""):
 		return MediaInfoList_Option (self.Handle, Option, Value)
-	def Option_Static(self, Option, Value=u""):
+	def Option_Static(self, Option, Value=""):
 		return MediaInfoList_Option(None, Option, Value)
 	def State_Get(self):
 		return MediaInfoList_State_Get (self.Handle)
--- a/subsdownloader2/src/SourceCode/NapiProjekt.py
+++ b/subsdownloader2/src/SourceCode/NapiProjekt.py
@@ -1,5 +1,5 @@
 import sys
-import urllib
+import urllib.request, urllib.parse, urllib.error
 import tempfile
 import time
 import os
@@ -43,7 +43,7 @@
         add = [   0, 0xd, 0x10, 0xb, 0x5 ]
         
         b = []
-        for i in xrange(len(idx)):
+        for i in range(len(idx)):
             a = add[i]
             m = mul[i]
             i = idx[i]
@@ -72,32 +72,32 @@
         while repeat > 0:
             repeat = repeat - 1
             try:
-                self.sub = urllib.urlopen(self.url)
+                self.sub = urllib.request.urlopen(self.url)
                 if hasattr(self.sub, 'getcode'):
                     http_code = self.sub.getcode() 
                     self.sub = self.sub.read()
                     self.error_ = 0
-            except (IOError, OSError), e:
-                print >> sys.stderr, "%s: %d/%d: Fetching subtitle failed: %s" % (prog, i, i_total, e)
+            except (IOError, OSError) as e:
+                print("%s: %d/%d: Fetching subtitle failed: %s" % (prog, i, i_total, e), file=sys.stderr)
                 time.sleep(0.5)
                 self.error_ = 1
                 continue
 
             if http_code != 200:
-                print >> sys.stderr, "%s: %d/%d: Fetching subtitle failed, HTTP code: %s" % (prog, i, i_total, str(http_code))
+                print("%s: %d/%d: Fetching subtitle failed, HTTP code: %s" % (prog, i, i_total, str(http_code)), file=sys.stderr)
                 time.sleep(0.5)
                 self.error_ = 1
                 continue
     
             if self.sub.startswith('NPc'):
-                print >> sys.stderr, "%s: %d/%d: Subtitle NOT FOUND" % (prog, i, i_total)
+                print("%s: %d/%d: Subtitle NOT FOUND" % (prog, i, i_total), file=sys.stderr)
                 repeat = -1
                 self.error_ = 1
                 continue
                 repeat = 0
 
             if self.sub is None or self.sub == "":
-                print >> sys.stderr, "%s: %d/%d: Subtitle download FAILED" % (prog, i, i_total)
+                print("%s: %d/%d: Subtitle download FAILED" % (prog, i, i_total), file=sys.stderr)
                 self.error_ = 1
                 continue
 
--- a/subsdownloader2/src/SourceCode/Napisy24_pl.py
+++ b/subsdownloader2/src/SourceCode/Napisy24_pl.py
@@ -1,9 +1,9 @@
-import httplib
+import http.client
 import xml.dom.minidom
 import time
 import re
 import os
-from urllib import quote
+from urllib.parse import quote
 from operator import itemgetter#, attrgetter
 from Plugins.Extensions.SubsDownloader2.SourceCode.archives_extractor import zip_extractor
 from Plugins.Extensions.SubsDownloader2.SourceCode.periscope import SubtitleDatabase
@@ -80,7 +80,7 @@
 	dir_count = 0
 	for x in dir_list:
 	    if x.split(".")[-1].lower()=="nfo":
-		print "find NFO in %i list" % dir_count
+		print("find NFO in %i list" % dir_count)
 		break
 	    dir_count=dir_count+1
 	try:	
@@ -105,7 +105,7 @@
 	    return buffor[IMDB_begining:IMDB_ending]	
 	#tutaj trzeba sprawdzienia IMDB numeru jesli jest oka to zwraca informacje jesli jest nie oka to zwraca blad
 	except:	    
-	    print "blad IMBN"
+	    print("blad IMBN")
 	    return False
     
     def __connect_with_server(self,get_operatoin,server_reuest_type):
@@ -116,17 +116,17 @@
 	self.XML_String = None
 	self.zip_string = None
 	try:
-	    conn = httplib.HTTPConnection(self.NAPISY24_url)
+	    conn = http.client.HTTPConnection(self.NAPISY24_url)
 	    conn.request("GET", get_operatoin)
 	    r1 = conn.getresponse()
-	    print r1.status, r1.reason
+	    print(r1.status, r1.reason)
 	    if what_is_downloaded == "downloada_subtitle_list_by_film_name" or what_is_downloaded == "downloada_subtitle_list_by_IMDB":
 		self.XML_String = r1.read()
 	    elif what_is_downloaded  == "download_subtilte_zip":		
 		self.zip_string = r1.read()
 	    return r1.status#, r1.reason
-	except (IOError, OSError), e:
-	    print >> sys.stderr, "Napisy24.pl server connection error."
+	except (IOError, OSError) as e:
+	    print("Napisy24.pl server connection error.", file=sys.stderr)
 	    time.sleep(0.5)
         
     def getNapisy24_SubtitleListXML(self, subtitle_list_reuest_type):
@@ -152,22 +152,22 @@
             repeat = repeat - 1
 	    r1_status = self.__connect_with_server(request_subtitle_list, "downloada_subtitle_list_by_film_name")            
             if r1_status != 200 and r1_status != 400:
-                print  "Fetching subtitle list failed, HTTP code: %s" % (str(r1_status))
+                print("Fetching subtitle list failed, HTTP code: %s" % (str(r1_status)))
                 time.sleep(0.5)
                 continue
 	    elif r1_status == 400:
-		print "Fetching subtitle list failed, HTTP code: %s \n Bad request in string: %s." % (str(r1_status), request_subtitle_list)
+		print("Fetching subtitle list failed, HTTP code: %s \n Bad request in string: %s." % (str(r1_status), request_subtitle_list))
 		repeat = -1
             else:
                 repeat = 0
     
             if self.XML_String == ('brak wynikow'):
-                print  "Subtitle list NOT FOUND"
+                print("Subtitle list NOT FOUND")
                 repeat = 0
                 continue
 
             if self.XML_String is None or self.XML_String == "":
-                print "Subtitle list download FAILED"
+                print("Subtitle list download FAILED")
                 continue
                 
         if r1_status != 200 or self.XML_String == 'brak wynikow' or self.XML_String == "" or self.XML_String is None:
@@ -198,10 +198,10 @@
 	    self.Correct_MultiRoot_XML()
 	    self.subtitle_dict = sorted(self.xmltodict(self.XML_String)['subtitle'],key=itemgetter('imdb','cd'))
 	    #self.subtitle_dict = self.xmltodict(self.XML_String)['subtitle']
-	    print "XML subtitle list downloaded and converted to dict"
+	    print("XML subtitle list downloaded and converted to dict")
 	    return True
 	except:
-	    print "XML subtitle list  not downloaded or converterd."
+	    print("XML subtitle list  not downloaded or converterd.")
 	    return False
 	    
     
@@ -225,11 +225,11 @@
 		zip_file = open(self.ZipFilePath,"wb")
 		zip_file.write(self.zip_string)
 		zip_file.close		
-		print "Zipfile: %s saved on hdd." % self.ZipFilePath
+		print("Zipfile: %s saved on hdd." % self.ZipFilePath)
 		del self.zip_string
 		return True
 	    except:
-		print "Problems with Zipfile: %s saveing on hdd." % self.ZipFilePath
+		print("Problems with Zipfile: %s saveing on hdd." % self.ZipFilePath)
 		return False
 	
     def download_subtitle_zip(self, dict_entry_to_download):
@@ -241,26 +241,26 @@
 	    #request_subtitle_list = "/libs/webapi.php?title=%s" % self.MovieName
 	    r1_status = self.__connect_with_server(request_subtitle_list, "download_subtilte_zip")            
             if r1_status != 302:
-                print  "Fetching subtitle failed, HTTP code: %s" % (str(r1_status))
+                print("Fetching subtitle failed, HTTP code: %s" % (str(r1_status)))
                 time.sleep(0.5)
                 continue
             else:
                 repeat = 0
     
             if self.zip_string == None:
-                print  "Subtitle NOT DOWNLOADED"
+                print("Subtitle NOT DOWNLOADED")
                 repeat = 0
                 continue
 
             if self.zip_string is None or self.zip_string == "":
-                print "Subtitle NOT DOWNLOADED"
+                print("Subtitle NOT DOWNLOADED")
                 continue
                 
         if self.zip_string[0:2] == 'PK':
-	    print "Success to download subtitle zip."
+	    print("Success to download subtitle zip.")
             return True
         else:
-	    print "Reild to download subtitle zip."
+	    print("Reild to download subtitle zip.")
             return False
 
 class GuessFileData_from_FileName(SubtitleDatabase.SubtitleDB):
@@ -341,33 +341,33 @@
             for y in subtitle_file_data:
                 wynik = 0
                 #Cause and effect for subtitle and movie guesseFileData results
-                if x[1].has_key('type') and y[1].has_key('type'):
+                if 'type' in x[1] and 'type' in y[1]:
                     if x[1]['type'] == y[1]['type']:
                         #wynik = wynik + 0.1600
 			wynik = wynik +0.0900
-                if x[1].has_key('name') and y[1].has_key('name'):
+                if 'name' in x[1] and 'name' in y[1]:
                     if x[1]['name'] == y[1]['name']:
                         #wynik = wynik +0.0900
 			wynik = wynik + 0.1600
-                if x[1].has_key('season') and y[1].has_key('season'):   
+                if 'season' in x[1] and 'season' in y[1]:   
                     if x[1]['season'] == y[1]['season']:
                         wynik = wynik +0.0225
-                if x[1].has_key('episode') and y[1].has_key('episode'):  
+                if 'episode' in x[1] and 'episode' in y[1]:  
                     if x[1]['episode'] == y[1]['episode']:
                         wynik = wynik +0.0225
-                if x[1].has_key('season') and y[1].has_key('part'): 
+                if 'season' in x[1] and 'part' in y[1]: 
                     if x[1]['season'] == y[1]['part']:
                         wynik = wynik +0.0060
-                if x[1].has_key('episode') and y[1].has_key('part'): 
+                if 'episode' in x[1] and 'part' in y[1]: 
                     if x[1]['episode'] == y[1]['part']:
                         wynik = wynik +0.0060
-                if x[1].has_key('part') and y[1].has_key('part'): 
+                if 'part' in x[1] and 'part' in y[1]: 
                     if x[1]['part'] == y[1]['part']:
                         wynik = wynik +0.0400
-                if x[1].has_key('teams') and y[1].has_key('teams'):
+                if 'teams' in x[1] and 'teams' in y[1]:
                     if x[1]['teams'] == y[1]['teams']:
                         wynik = wynik +0.0025
-                if x[1].has_key('year') and y[1].has_key('year'):
+                if 'year' in x[1] and 'year' in y[1]:
                     if x[1]['year'] == y[1]['year']:
                         wynik = wynik +0.0049
                 #Cause and effect for subtitle and movie guesseFileData results
--- a/subsdownloader2/src/SourceCode/anysub2srt.py
+++ b/subsdownloader2/src/SourceCode/anysub2srt.py
@@ -3,7 +3,7 @@
 import sys
 import hashlib
 #import shutil
-import urllib
+import urllib.request, urllib.parse, urllib.error
 import codecs
 #from Screens.MessageBox import MessageBox
 
@@ -47,7 +47,7 @@
                 return "mpl2" 
 	        break	    
 	    #becouse file is saved as mdvd returns mdvd value
-        print "Unsupported subtitle format appears. Please send this subtitle to developer."
+        print("Unsupported subtitle format appears. Please send this subtitle to developer.")
         ####################################################
         #"""KOMUNIKAT message box"""
         ####################################################
@@ -158,18 +158,18 @@
 		m = re1.match(list.pop(0), 0)
 		if m:
 		    time = int(m.group(1))*3600 + int(m.group(2))*60 + int(m.group(3))
-		    if subs.has_key(time) :
+		    if time in subs :
 			subs[time].extend(m.group(4).strip().split("|"))
 		    else:
 			subs[time] = m.group(4).strip().split("|")
 	    except:
 		sys.stderr.write("Warning: it seems like input file is damaged or too short.\n")
 		
-        times = subs.keys()
+        times = list(subs.keys())
         times.sort()
         for i in range(0,len(times)):
             next_time = 1;
-            while not subs.has_key(times[i]+next_time) and next_time < 4 :
+            while times[i]+next_time not in subs and next_time < 4 :
                 next_time = next_time + 1
             subt = [ times[i] , times[i] + next_time]
             subt.extend(subs[times[i]])
@@ -209,7 +209,7 @@
                     subtitles_standard_list[x][1] = (subtitles_standard_list[x][0] + subtitles_standard_list[x+1][0])/2
                 else:
                     subtitles_standard_list[x][1] = subtitles_standard_list[x][1] - 0.1
-                print "Subtitle end time error detected. Line no. %d was corrected" % x
+                print("Subtitle end time error detected. Line no. %d was corrected" % x)
             x = x+1
         return subtitles_standard_list
 
@@ -294,6 +294,6 @@
 	    dst.close()
 	    #self.___utf8_to_utf_8_BOM()
 	except :
-	    print "Can't save subtitles in file: %s" % file
-
-
+	    print("Can't save subtitles in file: %s" % file)
+
+
--- a/subsdownloader2/src/SourceCode/archives_extractor.py
+++ b/subsdownloader2/src/SourceCode/archives_extractor.py
@@ -29,7 +29,7 @@
                return zip_data, zip_file_list
                zip_data.close()
           except:
-               print "There is problem with %s reading" % zip__path
+               print("There is problem with %s reading" % zip__path)
                return False
 
      def zipped_file_list(self, zip_file_temp_list, extraction_filter = None):
@@ -54,14 +54,14 @@
                     extracted_files_path =[]
                     for x in extraction_file_list:
                          zip_data.extract(x, destination_dir)
-                         print "Files %s from zip %s extracted to dir: %s.\n" % (x,self.__zip__path,destination_dir)  
+                         print("Files %s from zip %s extracted to dir: %s.\n" % (x,self.__zip__path,destination_dir))  
                          extracted_files_path.append(destination_dir+"/"+x)
                     return extracted_files_path   
                except:
-                    print "Zip %s was not extracted to dir: %s" % (self.__zip__path,destination_dir) 
+                    print("Zip %s was not extracted to dir: %s" % (self.__zip__path,destination_dir)) 
                     return False
           else:
-               print "%s is not a zip file." % zip__path
+               print("%s is not a zip file." % zip__path)
                return False
 """ 
 class rar_extractor():
--- a/subsdownloader2/src/SourceCode/chardet_OutpuyTranslation.py
+++ b/subsdownloader2/src/SourceCode/chardet_OutpuyTranslation.py
@@ -33,7 +33,7 @@
 		UTF-32 BE, LE, 3412-ordered, or 2143-ordered (with a BOM)"""
 		#NOT SUPPORTED TET
 		#self.session.open(MessageBox,_("I can't manage encodeing: %s (probability %s). So I can't convert properly subtitles to UTF-8.\nTo chcange it in future please send to developer information about unsupported CodePage (or this screenshot)." % (recognizedCoding['encoding'], recognizedCoding['confidence'])), MessageBox.TYPE_INFO, timeout = 5)
-		print ("I can't manage encodeing: %s (probability %s). So I can't convert properly subtitles to UTF-8.\nTo chcange it in future please send to developer information about unsupported CodePage (or this screenshot)." % (recognizedCoding['encoding'], recognizedCoding['confidence']))
+		print(("I can't manage encodeing: %s (probability %s). So I can't convert properly subtitles to UTF-8.\nTo chcange it in future please send to developer information about unsupported CodePage (or this screenshot)." % (recognizedCoding['encoding'], recognizedCoding['confidence'])))
 		#TODO Email notyfication about error
 		#self.subtitle_codepade = "None"
 		return "None"
\
--- a/subsdownloader2/src/SourceCode/myFileList.py
+++ b/subsdownloader2/src/SourceCode/myFileList.py
@@ -73,7 +73,7 @@
 	else:
 		extension = name.split('.')
 		extension = extension[-1].lower()
-		if EXTENSIONS.has_key(extension):
+		if extension in EXTENSIONS:
 			png = LoadPixmap("/usr/lib/enigma2/python/Plugins/Extensions/SubsDownloader2/pic/res/" + EXTENSIONS[extension] + ".png")
 		else:
 			png = None
--- a/subsdownloader2/src/SourceCode/xmlrpclib.py
+++ b/subsdownloader2/src/SourceCode/xmlrpclib.py
@@ -144,9 +144,9 @@
 # Internal stuff
 
 try:
-    unicode
+    str
 except NameError:
-    unicode = None # unicode support not available
+    str = None # unicode support not available
 
 try:
     import datetime
@@ -160,8 +160,8 @@
 
 def _decode(data, encoding, is8bit=re.compile("[\x80-\xff]").search):
     # decode non-ascii string (if possible)
-    if unicode and encoding and is8bit(data):
-        data = unicode(data, encoding)
+    if str and encoding and is8bit(data):
+        data = str(data, encoding)
     return data
 
 def escape(s, replace=string.replace):
@@ -169,7 +169,7 @@
     s = replace(s, "<", "&lt;")
     return replace(s, ">", "&gt;",)
 
-if unicode:
+if str:
     def _stringify(string):
         # convert to 7-bit ascii if possible
         try:
@@ -183,8 +183,8 @@
 __version__ = "1.0.1"
 
 # xmlrpc integer limits
-MAXINT =  2L**31-1
-MININT = -2L**31
+MAXINT =  2**31-1
+MININT = -2**31
 
 # --------------------------------------------------------------------
 # Error constants (from Dan Libby's specification at
@@ -316,7 +316,7 @@
         def __int__(self):
             return self.value
 
-        def __nonzero__(self):
+        def __bool__(self):
             return self.value
 
     mod_dict['True'] = Boolean(1)
@@ -385,7 +385,7 @@
         elif datetime and isinstance(other, datetime.datetime):
             s = self.value
             o = other.strftime("%Y%m%dT%H:%M:%S")
-        elif isinstance(other, (str, unicode)):
+        elif isinstance(other, str):
             s = self.value
             o = other
         elif hasattr(other, "timetuple"):
@@ -468,9 +468,9 @@
 
 import base64
 try:
-    import cStringIO as StringIO
+    import io as StringIO
 except ImportError:
-    import StringIO
+    import io
 
 class Binary:
     """Wrapper for binary data."""
@@ -496,7 +496,7 @@
 
     def encode(self, out):
         out.write("<value><base64>\n")
-        base64.encode(StringIO.StringIO(self.data), out)
+        base64.encode(io.StringIO(self.data), out)
         out.write("</base64></value>\n")
 
 def _binary(data):
@@ -688,26 +688,26 @@
             try:
                 value.__dict__
             except:
-                raise TypeError, "cannot marshal %s objects" % type(value)
+                raise TypeError("cannot marshal %s objects" % type(value))
             # check if this class is a sub-class of a basic type,
             # because we don't know how to marshal these types
             # (e.g. a string sub-class)
             for type_ in type(value).__mro__:
-                if type_ in self.dispatch.keys():
-                    raise TypeError, "cannot marshal %s objects" % type(value)
+                if type_ in list(self.dispatch.keys()):
+                    raise TypeError("cannot marshal %s objects" % type(value))
             f = self.dispatch[InstanceType]
         f(self, value, write)
 
     def dump_nil (self, value, write):
         if not self.allow_none:
-            raise TypeError, "cannot marshal None unless allow_none is enabled"
+            raise TypeError("cannot marshal None unless allow_none is enabled")
         write("<value><nil/></value>")
     dispatch[NoneType] = dump_nil
 
     def dump_int(self, value, write):
         # in case ints are > 32 bits
         if value > MAXINT or value < MININT:
-            raise OverflowError, "int exceeds XML-RPC limits"
+            raise OverflowError("int exceeds XML-RPC limits")
         write("<value><int>")
         write(str(value))
         write("</int></value>\n")
@@ -722,7 +722,7 @@
 
     def dump_long(self, value, write):
         if value > MAXINT or value < MININT:
-            raise OverflowError, "long int exceeds XML-RPC limits"
+            raise OverflowError("long int exceeds XML-RPC limits")
         write("<value><int>")
         write(str(int(value)))
         write("</int></value>\n")
@@ -740,7 +740,7 @@
         write("</string></value>\n")
     dispatch[StringType] = dump_string
 
-    if unicode:
+    if str:
         def dump_unicode(self, value, write, escape=escape):
             value = value.encode(self.encoding)
             write("<value><string>")
@@ -751,7 +751,7 @@
     def dump_array(self, value, write):
         i = id(value)
         if i in self.memo:
-            raise TypeError, "cannot marshal recursive sequences"
+            raise TypeError("cannot marshal recursive sequences")
         self.memo[i] = None
         dump = self.__dump
         write("<value><array><data>\n")
@@ -765,17 +765,17 @@
     def dump_struct(self, value, write, escape=escape):
         i = id(value)
         if i in self.memo:
-            raise TypeError, "cannot marshal recursive dictionaries"
+            raise TypeError("cannot marshal recursive dictionaries")
         self.memo[i] = None
         dump = self.__dump
         write("<value><struct>\n")
-        for k, v in value.items():
+        for k, v in list(value.items()):
             write("<member>\n")
             if type(k) is not StringType:
-                if unicode and type(k) is UnicodeType:
+                if str and type(k) is UnicodeType:
                     k = k.encode(self.encoding)
                 else:
-                    raise TypeError, "dictionary key must be string"
+                    raise TypeError("dictionary key must be string")
             write("<name>%s</name>\n" % escape(k))
             dump(v, write)
             write("</member>\n")
@@ -828,7 +828,7 @@
         self.append = self._stack.append
         self._use_datetime = use_datetime
         if use_datetime and not datetime:
-            raise ValueError, "the datetime module is not available"
+            raise ValueError("the datetime module is not available")
 
     def close(self):
         # return response tuple and target method
@@ -895,7 +895,7 @@
         elif data == "1":
             self.append(True)
         else:
-            raise TypeError, "bad boolean value"
+            raise TypeError("bad boolean value")
         self._value = 0
     dispatch["boolean"] = end_boolean
 
@@ -1002,8 +1002,7 @@
         elif type(item) == type([]):
             return item[0]
         else:
-            raise ValueError,\
-                  "unexpected type in multicall result"
+            raise ValueError("unexpected type in multicall result")
 
 class MultiCall:
     """server -> a object used to boxcar method calls
@@ -1057,7 +1056,7 @@
     to an unmarshalling object.  Return both objects.
     """
     if use_datetime and not datetime:
-        raise ValueError, "the datetime module is not available"
+        raise ValueError("the datetime module is not available")
     if FastParser and FastUnmarshaller:
         if use_datetime:
             mkdatetime = _datetime_type
@@ -1277,12 +1276,12 @@
         if isinstance(host, TupleType):
             host, x509 = host
 
-        import urllib
-        auth, host = urllib.splituser(host)
+        import urllib.request, urllib.parse, urllib.error
+        auth, host = urllib.parse.splituser(host)
 
         if auth:
             import base64
-            auth = base64.encodestring(urllib.unquote(auth))
+            auth = base64.encodestring(urllib.parse.unquote(auth))
             auth = string.join(string.split(auth), "") # get rid of whitespace
             extra_headers = [
                 ("Authorization", "Basic " + auth)
@@ -1300,9 +1299,9 @@
 
     def make_connection(self, host):
         # create a HTTP connection object from a host descriptor
-        import httplib
+        import http.client
         host, extra_headers, x509 = self.get_host_info(host)
-        return httplib.HTTP(host)
+        return http.client.HTTP(host)
 
     ##
     # Send request header.
@@ -1325,7 +1324,7 @@
         connection.putheader("Host", host)
         if extra_headers:
             if isinstance(extra_headers, DictType):
-                extra_headers = extra_headers.items()
+                extra_headers = list(extra_headers.items())
             for key, value in extra_headers:
                 connection.putheader(key, value)
 
@@ -1383,7 +1382,7 @@
             if not response:
                 break
             if self.verbose:
-                print "body:", repr(response)
+                print("body:", repr(response))
             p.feed(response)
 
         file.close()
@@ -1402,10 +1401,10 @@
     def make_connection(self, host):
         # create a HTTPS connection object from a host descriptor
         # host may be a string, or a (host, x509-dict) tuple
-        import httplib
+        import http.client
         host, extra_headers, x509 = self.get_host_info(host)
         try:
-            HTTPS = httplib.HTTPS
+            HTTPS = http.client.HTTPS
         except AttributeError:
             raise NotImplementedError(
                 "your version of httplib doesn't support HTTPS"
@@ -1457,11 +1456,11 @@
         # establish a "logical" server connection
 
         # get the url
-        import urllib
-        type, uri = urllib.splittype(uri)
+        import urllib.request, urllib.parse, urllib.error
+        type, uri = urllib.parse.splittype(uri)
         if type not in ("http", "https"):
-            raise IOError, "unsupported XML-RPC protocol"
-        self.__host, self.__handler = urllib.splithost(uri)
+            raise IOError("unsupported XML-RPC protocol")
+        self.__host, self.__handler = urllib.parse.splithost(uri)
         if not self.__handler:
             self.__handler = "/RPC2"
 
@@ -1523,18 +1522,18 @@
     # server = ServerProxy("http://localhost:8000") # local server
     server = ServerProxy("http://time.xmlrpc.com/RPC2")
 
-    print server
+    print(server)
 
     try:
-        print server.currentTime.getCurrentTime()
-    except Error, v:
-        print "ERROR", v
+        print(server.currentTime.getCurrentTime())
+    except Error as v:
+        print("ERROR", v)
 
     multi = MultiCall(server)
     multi.currentTime.getCurrentTime()
     multi.currentTime.getCurrentTime()
     try:
         for response in multi():
-            print response
-    except Error, v:
-        print "ERROR", v
+            print(response)
+    except Error as v:
+        print("ERROR", v)
--- a/subsdownloader2/src/SourceCode/chardet/big5prober.py
+++ b/subsdownloader2/src/SourceCode/chardet/big5prober.py
@@ -1,41 +1,41 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-# 
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-# 
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from mbcharsetprober import MultiByteCharSetProber
-from codingstatemachine import CodingStateMachine
-from chardistribution import Big5DistributionAnalysis
-from mbcssm import Big5SMModel
-
-class Big5Prober(MultiByteCharSetProber):
-    def __init__(self):
-        MultiByteCharSetProber.__init__(self)
-        self._mCodingSM = CodingStateMachine(Big5SMModel)
-        self._mDistributionAnalyzer = Big5DistributionAnalysis()
-        self.reset()
-
-    def get_charset_name(self):
-        return "Big5"
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+# 
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+# 
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .mbcharsetprober import MultiByteCharSetProber
+from .codingstatemachine import CodingStateMachine
+from .chardistribution import Big5DistributionAnalysis
+from .mbcssm import Big5SMModel
+
+class Big5Prober(MultiByteCharSetProber):
+    def __init__(self):
+        MultiByteCharSetProber.__init__(self)
+        self._mCodingSM = CodingStateMachine(Big5SMModel)
+        self._mDistributionAnalyzer = Big5DistributionAnalysis()
+        self.reset()
+
+    def get_charset_name(self):
+        return "Big5"
--- a/subsdownloader2/src/SourceCode/chardet/chardistribution.py
+++ b/subsdownloader2/src/SourceCode/chardet/chardistribution.py
@@ -1,200 +1,200 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-# 
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-# 
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants
-from euctwfreq import EUCTWCharToFreqOrder, EUCTW_TABLE_SIZE, EUCTW_TYPICAL_DISTRIBUTION_RATIO
-from euckrfreq import EUCKRCharToFreqOrder, EUCKR_TABLE_SIZE, EUCKR_TYPICAL_DISTRIBUTION_RATIO
-from gb2312freq import GB2312CharToFreqOrder, GB2312_TABLE_SIZE, GB2312_TYPICAL_DISTRIBUTION_RATIO
-from big5freq import Big5CharToFreqOrder, BIG5_TABLE_SIZE, BIG5_TYPICAL_DISTRIBUTION_RATIO
-from jisfreq import JISCharToFreqOrder, JIS_TABLE_SIZE, JIS_TYPICAL_DISTRIBUTION_RATIO
-
-ENOUGH_DATA_THRESHOLD = 1024
-SURE_YES = 0.99
-SURE_NO = 0.01
-
-class CharDistributionAnalysis:
-    def __init__(self):
-        self._mCharToFreqOrder = None # Mapping table to get frequency order from char order (get from GetOrder())
-        self._mTableSize = None # Size of above table
-        self._mTypicalDistributionRatio = None # This is a constant value which varies from language to language, used in calculating confidence.  See http://www.mozilla.org/projects/intl/UniversalCharsetDetection.html for further detail.
-        self.reset()
-        
-    def reset(self):
-        """reset analyser, clear any state"""
-        self._mDone = constants.False # If this flag is set to constants.True, detection is done and conclusion has been made
-        self._mTotalChars = 0 # Total characters encountered
-        self._mFreqChars = 0 # The number of characters whose frequency order is less than 512
-
-    def feed(self, aStr, aCharLen):
-        """feed a character with known length"""
-        if aCharLen == 2:
-            # we only care about 2-bytes character in our distribution analysis
-            order = self.get_order(aStr)
-        else:
-            order = -1
-        if order >= 0:
-            self._mTotalChars += 1
-            # order is valid
-            if order < self._mTableSize:
-                if 512 > self._mCharToFreqOrder[order]:
-                    self._mFreqChars += 1
-
-    def get_confidence(self):
-        """return confidence based on existing data"""
-        # if we didn't receive any character in our consideration range, return negative answer
-        if self._mTotalChars <= 0:
-            return SURE_NO
-
-        if self._mTotalChars != self._mFreqChars:
-            r = self._mFreqChars / ((self._mTotalChars - self._mFreqChars) * self._mTypicalDistributionRatio)
-            if r < SURE_YES:
-                return r
-
-        # normalize confidence (we don't want to be 100% sure)
-        return SURE_YES
-
-    def got_enough_data(self):
-        # It is not necessary to receive all data to draw conclusion. For charset detection,
-        # certain amount of data is enough
-        return self._mTotalChars > ENOUGH_DATA_THRESHOLD
-
-    def get_order(self, aStr):
-        # We do not handle characters based on the original encoding string, but 
-        # convert this encoding string to a number, here called order.
-        # This allows multiple encodings of a language to share one frequency table.
-        return -1
-    
-class EUCTWDistributionAnalysis(CharDistributionAnalysis):
-    def __init__(self):
-        CharDistributionAnalysis.__init__(self)
-        self._mCharToFreqOrder = EUCTWCharToFreqOrder
-        self._mTableSize = EUCTW_TABLE_SIZE
-        self._mTypicalDistributionRatio = EUCTW_TYPICAL_DISTRIBUTION_RATIO
-
-    def get_order(self, aStr):
-        # for euc-TW encoding, we are interested 
-        #   first  byte range: 0xc4 -- 0xfe
-        #   second byte range: 0xa1 -- 0xfe
-        # no validation needed here. State machine has done that
-        if aStr[0] >= '\xC4':
-            return 94 * (ord(aStr[0]) - 0xC4) + ord(aStr[1]) - 0xA1
-        else:
-            return -1
-
-class EUCKRDistributionAnalysis(CharDistributionAnalysis):
-    def __init__(self):
-        CharDistributionAnalysis.__init__(self)
-        self._mCharToFreqOrder = EUCKRCharToFreqOrder
-        self._mTableSize = EUCKR_TABLE_SIZE
-        self._mTypicalDistributionRatio = EUCKR_TYPICAL_DISTRIBUTION_RATIO
-
-    def get_order(self, aStr):
-        # for euc-KR encoding, we are interested 
-        #   first  byte range: 0xb0 -- 0xfe
-        #   second byte range: 0xa1 -- 0xfe
-        # no validation needed here. State machine has done that
-        if aStr[0] >= '\xB0':
-            return 94 * (ord(aStr[0]) - 0xB0) + ord(aStr[1]) - 0xA1
-        else:
-            return -1;
-
-class GB2312DistributionAnalysis(CharDistributionAnalysis):
-    def __init__(self):
-        CharDistributionAnalysis.__init__(self)
-        self._mCharToFreqOrder = GB2312CharToFreqOrder
-        self._mTableSize = GB2312_TABLE_SIZE
-        self._mTypicalDistributionRatio = GB2312_TYPICAL_DISTRIBUTION_RATIO
-
-    def get_order(self, aStr):
-        # for GB2312 encoding, we are interested 
-        #  first  byte range: 0xb0 -- 0xfe
-        #  second byte range: 0xa1 -- 0xfe
-        # no validation needed here. State machine has done that
-        if (aStr[0] >= '\xB0') and (aStr[1] >= '\xA1'):
-            return 94 * (ord(aStr[0]) - 0xB0) + ord(aStr[1]) - 0xA1
-        else:
-            return -1;
-
-class Big5DistributionAnalysis(CharDistributionAnalysis):
-    def __init__(self):
-        CharDistributionAnalysis.__init__(self)
-        self._mCharToFreqOrder = Big5CharToFreqOrder
-        self._mTableSize = BIG5_TABLE_SIZE
-        self._mTypicalDistributionRatio = BIG5_TYPICAL_DISTRIBUTION_RATIO
-
-    def get_order(self, aStr):
-        # for big5 encoding, we are interested 
-        #   first  byte range: 0xa4 -- 0xfe
-        #   second byte range: 0x40 -- 0x7e , 0xa1 -- 0xfe
-        # no validation needed here. State machine has done that
-        if aStr[0] >= '\xA4':
-            if aStr[1] >= '\xA1':
-                return 157 * (ord(aStr[0]) - 0xA4) + ord(aStr[1]) - 0xA1 + 63
-            else:
-                return 157 * (ord(aStr[0]) - 0xA4) + ord(aStr[1]) - 0x40
-        else:
-            return -1
-
-class SJISDistributionAnalysis(CharDistributionAnalysis):
-    def __init__(self):
-        CharDistributionAnalysis.__init__(self)
-        self._mCharToFreqOrder = JISCharToFreqOrder
-        self._mTableSize = JIS_TABLE_SIZE
-        self._mTypicalDistributionRatio = JIS_TYPICAL_DISTRIBUTION_RATIO
-
-    def get_order(self, aStr):
-        # for sjis encoding, we are interested 
-        #   first  byte range: 0x81 -- 0x9f , 0xe0 -- 0xfe
-        #   second byte range: 0x40 -- 0x7e,  0x81 -- oxfe
-        # no validation needed here. State machine has done that
-        if (aStr[0] >= '\x81') and (aStr[0] <= '\x9F'):
-            order = 188 * (ord(aStr[0]) - 0x81)
-        elif (aStr[0] >= '\xE0') and (aStr[0] <= '\xEF'):
-            order = 188 * (ord(aStr[0]) - 0xE0 + 31)
-        else:
-            return -1;
-        order = order + ord(aStr[1]) - 0x40
-        if aStr[1] > '\x7F':
-            order =- 1
-        return order
-
-class EUCJPDistributionAnalysis(CharDistributionAnalysis):
-    def __init__(self):
-        CharDistributionAnalysis.__init__(self)
-        self._mCharToFreqOrder = JISCharToFreqOrder
-        self._mTableSize = JIS_TABLE_SIZE
-        self._mTypicalDistributionRatio = JIS_TYPICAL_DISTRIBUTION_RATIO
-
-    def get_order(self, aStr):
-        # for euc-JP encoding, we are interested 
-        #   first  byte range: 0xa0 -- 0xfe
-        #   second byte range: 0xa1 -- 0xfe
-        # no validation needed here. State machine has done that
-        if aStr[0] >= '\xA0':
-            return 94 * (ord(aStr[0]) - 0xA1) + ord(aStr[1]) - 0xa1
-        else:
-            return -1
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+# 
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+# 
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+from .euctwfreq import EUCTWCharToFreqOrder, EUCTW_TABLE_SIZE, EUCTW_TYPICAL_DISTRIBUTION_RATIO
+from .euckrfreq import EUCKRCharToFreqOrder, EUCKR_TABLE_SIZE, EUCKR_TYPICAL_DISTRIBUTION_RATIO
+from .gb2312freq import GB2312CharToFreqOrder, GB2312_TABLE_SIZE, GB2312_TYPICAL_DISTRIBUTION_RATIO
+from .big5freq import Big5CharToFreqOrder, BIG5_TABLE_SIZE, BIG5_TYPICAL_DISTRIBUTION_RATIO
+from .jisfreq import JISCharToFreqOrder, JIS_TABLE_SIZE, JIS_TYPICAL_DISTRIBUTION_RATIO
+
+ENOUGH_DATA_THRESHOLD = 1024
+SURE_YES = 0.99
+SURE_NO = 0.01
+
+class CharDistributionAnalysis:
+    def __init__(self):
+        self._mCharToFreqOrder = None # Mapping table to get frequency order from char order (get from GetOrder())
+        self._mTableSize = None # Size of above table
+        self._mTypicalDistributionRatio = None # This is a constant value which varies from language to language, used in calculating confidence.  See http://www.mozilla.org/projects/intl/UniversalCharsetDetection.html for further detail.
+        self.reset()
+        
+    def reset(self):
+        """reset analyser, clear any state"""
+        self._mDone = False # If this flag is set to True, detection is done and conclusion has been made
+        self._mTotalChars = 0 # Total characters encountered
+        self._mFreqChars = 0 # The number of characters whose frequency order is less than 512
+
+    def feed(self, aBuf, aCharLen):
+        """feed a character with known length"""
+        if aCharLen == 2:
+            # we only care about 2-bytes character in our distribution analysis
+            order = self.get_order(aBuf)
+        else:
+            order = -1
+        if order >= 0:
+            self._mTotalChars += 1
+            # order is valid
+            if order < self._mTableSize:
+                if 512 > self._mCharToFreqOrder[order]:
+                    self._mFreqChars += 1
+
+    def get_confidence(self):
+        """return confidence based on existing data"""
+        # if we didn't receive any character in our consideration range, return negative answer
+        if self._mTotalChars <= 0:
+            return SURE_NO
+
+        if self._mTotalChars != self._mFreqChars:
+            r = self._mFreqChars / ((self._mTotalChars - self._mFreqChars) * self._mTypicalDistributionRatio)
+            if r < SURE_YES:
+                return r
+
+        # normalize confidence (we don't want to be 100% sure)
+        return SURE_YES
+
+    def got_enough_data(self):
+        # It is not necessary to receive all data to draw conclusion. For charset detection,
+        # certain amount of data is enough
+        return self._mTotalChars > ENOUGH_DATA_THRESHOLD
+
+    def get_order(self, aBuf):
+        # We do not handle characters based on the original encoding string, but 
+        # convert this encoding string to a number, here called order.
+        # This allows multiple encodings of a language to share one frequency table.
+        return -1
+    
+class EUCTWDistributionAnalysis(CharDistributionAnalysis):
+    def __init__(self):
+        CharDistributionAnalysis.__init__(self)
+        self._mCharToFreqOrder = EUCTWCharToFreqOrder
+        self._mTableSize = EUCTW_TABLE_SIZE
+        self._mTypicalDistributionRatio = EUCTW_TYPICAL_DISTRIBUTION_RATIO
+
+    def get_order(self, aBuf):
+        # for euc-TW encoding, we are interested 
+        #   first  byte range: 0xc4 -- 0xfe
+        #   second byte range: 0xa1 -- 0xfe
+        # no validation needed here. State machine has done that
+        if aBuf[0] >= 0xC4:
+            return 94 * (aBuf[0] - 0xC4) + aBuf[1] - 0xA1
+        else:
+            return -1
+
+class EUCKRDistributionAnalysis(CharDistributionAnalysis):
+    def __init__(self):
+        CharDistributionAnalysis.__init__(self)
+        self._mCharToFreqOrder = EUCKRCharToFreqOrder
+        self._mTableSize = EUCKR_TABLE_SIZE
+        self._mTypicalDistributionRatio = EUCKR_TYPICAL_DISTRIBUTION_RATIO
+
+    def get_order(self, aBuf):
+        # for euc-KR encoding, we are interested 
+        #   first  byte range: 0xb0 -- 0xfe
+        #   second byte range: 0xa1 -- 0xfe
+        # no validation needed here. State machine has done that
+        if aBuf[0] >= 0xB0:
+            return 94 * (aBuf[0] - 0xB0) + aBuf[1] - 0xA1
+        else:
+            return -1;
+
+class GB2312DistributionAnalysis(CharDistributionAnalysis):
+    def __init__(self):
+        CharDistributionAnalysis.__init__(self)
+        self._mCharToFreqOrder = GB2312CharToFreqOrder
+        self._mTableSize = GB2312_TABLE_SIZE
+        self._mTypicalDistributionRatio = GB2312_TYPICAL_DISTRIBUTION_RATIO
+
+    def get_order(self, aBuf):
+        # for GB2312 encoding, we are interested 
+        #  first  byte range: 0xb0 -- 0xfe
+        #  second byte range: 0xa1 -- 0xfe
+        # no validation needed here. State machine has done that
+        if (aBuf[0] >= 0xB0) and (aBuf[1] >= 0xA1):
+            return 94 * (aBuf[0] - 0xB0) + aBuf[1] - 0xA1
+        else:
+            return -1;
+
+class Big5DistributionAnalysis(CharDistributionAnalysis):
+    def __init__(self):
+        CharDistributionAnalysis.__init__(self)
+        self._mCharToFreqOrder = Big5CharToFreqOrder
+        self._mTableSize = BIG5_TABLE_SIZE
+        self._mTypicalDistributionRatio = BIG5_TYPICAL_DISTRIBUTION_RATIO
+
+    def get_order(self, aBuf):
+        # for big5 encoding, we are interested 
+        #   first  byte range: 0xa4 -- 0xfe
+        #   second byte range: 0x40 -- 0x7e , 0xa1 -- 0xfe
+        # no validation needed here. State machine has done that
+        if aBuf[0] >= 0xA4:
+            if aBuf[1] >= 0xA1:
+                return 157 * (aBuf[0] - 0xA4) + aBuf[1] - 0xA1 + 63
+            else:
+                return 157 * (aBuf[0] - 0xA4) + aBuf[1] - 0x40
+        else:
+            return -1
+
+class SJISDistributionAnalysis(CharDistributionAnalysis):
+    def __init__(self):
+        CharDistributionAnalysis.__init__(self)
+        self._mCharToFreqOrder = JISCharToFreqOrder
+        self._mTableSize = JIS_TABLE_SIZE
+        self._mTypicalDistributionRatio = JIS_TYPICAL_DISTRIBUTION_RATIO
+
+    def get_order(self, aBuf):
+        # for sjis encoding, we are interested 
+        #   first  byte range: 0x81 -- 0x9f , 0xe0 -- 0xfe
+        #   second byte range: 0x40 -- 0x7e,  0x81 -- oxfe
+        # no validation needed here. State machine has done that
+        if (aBuf[0] >= 0x81) and (aBuf[0] <= 0x9F):
+            order = 188 * (aBuf[0] - 0x81)
+        elif (aBuf[0] >= 0xE0) and (aBuf[0] <= 0xEF):
+            order = 188 * (aBuf[0] - 0xE0 + 31)
+        else:
+            return -1;
+        order = order + aBuf[1] - 0x40
+        if aBuf[1] > 0x7F:
+            order =- 1
+        return order
+
+class EUCJPDistributionAnalysis(CharDistributionAnalysis):
+    def __init__(self):
+        CharDistributionAnalysis.__init__(self)
+        self._mCharToFreqOrder = JISCharToFreqOrder
+        self._mTableSize = JIS_TABLE_SIZE
+        self._mTypicalDistributionRatio = JIS_TYPICAL_DISTRIBUTION_RATIO
+
+    def get_order(self, aBuf):
+        # for euc-JP encoding, we are interested 
+        #   first  byte range: 0xa0 -- 0xfe
+        #   second byte range: 0xa1 -- 0xfe
+        # no validation needed here. State machine has done that
+        if aBuf[0] >= 0xA0:
+            return 94 * (aBuf[0] - 0xA1) + aBuf[1] - 0xa1
+        else:
+            return -1
--- a/subsdownloader2/src/SourceCode/chardet/charsetgroupprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/charsetgroupprober.py
@@ -1,96 +1,97 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-# 
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-# 
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants, sys
-from charsetprober import CharSetProber
-
-class CharSetGroupProber(CharSetProber):
-    def __init__(self):
-        CharSetProber.__init__(self)
-        self._mActiveNum = 0
-        self._mProbers = []
-        self._mBestGuessProber = None
-        
-    def reset(self):
-        CharSetProber.reset(self)
-        self._mActiveNum = 0
-        for prober in self._mProbers:
-            if prober:
-                prober.reset()
-                prober.active = constants.True
-                self._mActiveNum += 1
-        self._mBestGuessProber = None
-
-    def get_charset_name(self):
-        if not self._mBestGuessProber:
-            self.get_confidence()
-            if not self._mBestGuessProber: return None
-#                self._mBestGuessProber = self._mProbers[0]
-        return self._mBestGuessProber.get_charset_name()
-
-    def feed(self, aBuf):
-        for prober in self._mProbers:
-            if not prober: continue
-            if not prober.active: continue
-            st = prober.feed(aBuf)
-            if not st: continue
-            if st == constants.eFoundIt:
-                self._mBestGuessProber = prober
-                return self.get_state()
-            elif st == constants.eNotMe:
-                prober.active = constants.False
-                self._mActiveNum -= 1
-                if self._mActiveNum <= 0:
-                    self._mState = constants.eNotMe
-                    return self.get_state()
-        return self.get_state()
-
-    def get_confidence(self):
-        st = self.get_state()
-        if st == constants.eFoundIt:
-            return 0.99
-        elif st == constants.eNotMe:
-            return 0.01
-        bestConf = 0.0
-        self._mBestGuessProber = None
-        for prober in self._mProbers:
-            if not prober: continue
-            if not prober.active:
-                if constants._debug:
-                    sys.stderr.write(prober.get_charset_name() + ' not active\n')
-                continue
-            cf = prober.get_confidence()
-            if constants._debug:
-                sys.stderr.write('%s confidence = %s\n' % (prober.get_charset_name(), cf))
-            if bestConf < cf:
-                bestConf = cf
-                self._mBestGuessProber = prober
-        if not self._mBestGuessProber: return 0.0
-        return bestConf
-#        else:
-#            self._mBestGuessProber = self._mProbers[0]
-#            return self._mBestGuessProber.get_confidence()
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+# 
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+# 
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+import sys
+from .charsetprober import CharSetProber
+
+class CharSetGroupProber(CharSetProber):
+    def __init__(self):
+        CharSetProber.__init__(self)
+        self._mActiveNum = 0
+        self._mProbers = []
+        self._mBestGuessProber = None
+        
+    def reset(self):
+        CharSetProber.reset(self)
+        self._mActiveNum = 0
+        for prober in self._mProbers:
+            if prober:
+                prober.reset()
+                prober.active = True
+                self._mActiveNum += 1
+        self._mBestGuessProber = None
+
+    def get_charset_name(self):
+        if not self._mBestGuessProber:
+            self.get_confidence()
+            if not self._mBestGuessProber: return None
+#                self._mBestGuessProber = self._mProbers[0]
+        return self._mBestGuessProber.get_charset_name()
+
+    def feed(self, aBuf):
+        for prober in self._mProbers:
+            if not prober: continue
+            if not prober.active: continue
+            st = prober.feed(aBuf)
+            if not st: continue
+            if st == constants.eFoundIt:
+                self._mBestGuessProber = prober
+                return self.get_state()
+            elif st == constants.eNotMe:
+                prober.active = False
+                self._mActiveNum -= 1
+                if self._mActiveNum <= 0:
+                    self._mState = constants.eNotMe
+                    return self.get_state()
+        return self.get_state()
+
+    def get_confidence(self):
+        st = self.get_state()
+        if st == constants.eFoundIt:
+            return 0.99
+        elif st == constants.eNotMe:
+            return 0.01
+        bestConf = 0.0
+        self._mBestGuessProber = None
+        for prober in self._mProbers:
+            if not prober: continue
+            if not prober.active:
+                if constants._debug:
+                    sys.stderr.write(prober.get_charset_name() + ' not active\n')
+                continue
+            cf = prober.get_confidence()
+            if constants._debug:
+                sys.stderr.write('%s confidence = %s\n' % (prober.get_charset_name(), cf))
+            if bestConf < cf:
+                bestConf = cf
+                self._mBestGuessProber = prober
+        if not self._mBestGuessProber: return 0.0
+        return bestConf
+#        else:
+#            self._mBestGuessProber = self._mProbers[0]
+#            return self._mBestGuessProber.get_confidence()
--- a/subsdownloader2/src/SourceCode/chardet/charsetprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/charsetprober.py
@@ -26,7 +26,8 @@
 # 02110-1301  USA
 ######################### END LICENSE BLOCK #########################
 
-import constants, re
+from . import constants
+import re
 
 class CharSetProber:
     def __init__(self):
@@ -48,11 +49,11 @@
         return 0.0
 
     def filter_high_bit_only(self, aBuf):
-        aBuf = re.sub(r'([\x00-\x7F])+', ' ', aBuf)
+        aBuf = re.sub(b'([\x00-\x7F])+', b' ', aBuf)
         return aBuf
     
     def filter_without_english_letters(self, aBuf):
-        aBuf = re.sub(r'([A-Za-z])+', ' ', aBuf)
+        aBuf = re.sub(b'([A-Za-z])+', b' ', aBuf)
         return aBuf
         
     def filter_with_english_letters(self, aBuf):
--- a/subsdownloader2/src/SourceCode/chardet/codingstatemachine.py
+++ b/subsdownloader2/src/SourceCode/chardet/codingstatemachine.py
@@ -1,56 +1,57 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from constants import eStart, eError, eItsMe
-
-class CodingStateMachine:
-    def __init__(self, sm):
-        self._mModel = sm
-        self._mCurrentBytePos = 0
-        self._mCurrentCharLen = 0
-        self.reset()
-
-    def reset(self):
-        self._mCurrentState = eStart
-
-    def next_state(self, c):
-        # for each byte we get its class
-        # if it is first byte, we also get byte length
-        byteCls = self._mModel['classTable'][ord(c)]
-        if self._mCurrentState == eStart:
-            self._mCurrentBytePos = 0
-            self._mCurrentCharLen = self._mModel['charLenTable'][byteCls]
-        # from byte's class and stateTable, we get its next state
-        self._mCurrentState = self._mModel['stateTable'][self._mCurrentState * self._mModel['classFactor'] + byteCls]
-        self._mCurrentBytePos += 1
-        return self._mCurrentState
-
-    def get_current_charlen(self):
-        return self._mCurrentCharLen
-
-    def get_coding_state_machine(self):
-        return self._mModel['name']
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .constants import eStart, eError, eItsMe
+
+class CodingStateMachine:
+    def __init__(self, sm):
+        self._mModel = sm
+        self._mCurrentBytePos = 0
+        self._mCurrentCharLen = 0
+        self.reset()
+
+    def reset(self):
+        self._mCurrentState = eStart
+
+    def next_state(self, c):
+        # for each byte we get its class
+        # if it is first byte, we also get byte length
+        # PY3K: aBuf is a byte stream, so c is an int, not a byte
+        byteCls = self._mModel['classTable'][c]
+        if self._mCurrentState == eStart:
+            self._mCurrentBytePos = 0
+            self._mCurrentCharLen = self._mModel['charLenTable'][byteCls]
+        # from byte's class and stateTable, we get its next state
+        self._mCurrentState = self._mModel['stateTable'][self._mCurrentState * self._mModel['classFactor'] + byteCls]
+        self._mCurrentBytePos += 1
+        return self._mCurrentState
+
+    def get_current_charlen(self):
+        return self._mCurrentCharLen
+
+    def get_coding_state_machine(self):
+        return self._mModel['name']
--- a/subsdownloader2/src/SourceCode/chardet/constants.py
+++ b/subsdownloader2/src/SourceCode/chardet/constants.py
@@ -1,47 +1,39 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 2001
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#   Shy Shalom - original C code
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-_debug = 0
-
-eDetecting = 0
-eFoundIt = 1
-eNotMe = 2
-
-eStart = 0
-eError = 1
-eItsMe = 2
-
-SHORTCUT_THRESHOLD = 0.95
-
-import __builtin__
-if not hasattr(__builtin__, 'False'):
-    False = 0
-    True = 1
-else:
-    False = __builtin__.False
-    True = __builtin__.True
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 2001
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#   Shy Shalom - original C code
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+_debug = 0
+
+eDetecting = 0
+eFoundIt = 1
+eNotMe = 2
+
+eStart = 0
+eError = 1
+eItsMe = 2
+
+SHORTCUT_THRESHOLD = 0.95
--- a/subsdownloader2/src/SourceCode/chardet/escprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/escprober.py
@@ -1,79 +1,81 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants, sys
-from escsm import HZSMModel, ISO2022CNSMModel, ISO2022JPSMModel, ISO2022KRSMModel
-from charsetprober import CharSetProber
-from codingstatemachine import CodingStateMachine
-
-class EscCharSetProber(CharSetProber):
-    def __init__(self):
-        CharSetProber.__init__(self)
-        self._mCodingSM = [ \
-            CodingStateMachine(HZSMModel),
-            CodingStateMachine(ISO2022CNSMModel),
-            CodingStateMachine(ISO2022JPSMModel),
-            CodingStateMachine(ISO2022KRSMModel)
-            ]
-        self.reset()
-
-    def reset(self):
-        CharSetProber.reset(self)
-        for codingSM in self._mCodingSM:
-            if not codingSM: continue
-            codingSM.active = constants.True
-            codingSM.reset()
-        self._mActiveSM = len(self._mCodingSM)
-        self._mDetectedCharset = None
-
-    def get_charset_name(self):
-        return self._mDetectedCharset
-
-    def get_confidence(self):
-        if self._mDetectedCharset:
-            return 0.99
-        else:
-            return 0.00
-
-    def feed(self, aBuf):
-        for c in aBuf:
-            for codingSM in self._mCodingSM:
-                if not codingSM: continue
-                if not codingSM.active: continue
-                codingState = codingSM.next_state(c)
-                if codingState == constants.eError:
-                    codingSM.active = constants.False
-                    self._mActiveSM -= 1
-                    if self._mActiveSM <= 0:
-                        self._mState = constants.eNotMe
-                        return self.get_state()
-                elif codingState == constants.eItsMe:
-                    self._mState = constants.eFoundIt
-                    self._mDetectedCharset = codingSM.get_coding_state_machine()
-                    return self.get_state()
-                
-        return self.get_state()
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+import sys
+from .escsm import HZSMModel, ISO2022CNSMModel, ISO2022JPSMModel, ISO2022KRSMModel
+from .charsetprober import CharSetProber
+from .codingstatemachine import CodingStateMachine
+
+class EscCharSetProber(CharSetProber):
+    def __init__(self):
+        CharSetProber.__init__(self)
+        self._mCodingSM = [ \
+            CodingStateMachine(HZSMModel),
+            CodingStateMachine(ISO2022CNSMModel),
+            CodingStateMachine(ISO2022JPSMModel),
+            CodingStateMachine(ISO2022KRSMModel)
+            ]
+        self.reset()
+
+    def reset(self):
+        CharSetProber.reset(self)
+        for codingSM in self._mCodingSM:
+            if not codingSM: continue
+            codingSM.active = True
+            codingSM.reset()
+        self._mActiveSM = len(self._mCodingSM)
+        self._mDetectedCharset = None
+
+    def get_charset_name(self):
+        return self._mDetectedCharset
+
+    def get_confidence(self):
+        if self._mDetectedCharset:
+            return 0.99
+        else:
+            return 0.00
+
+    def feed(self, aBuf):
+        for c in aBuf:
+            # PY3K: aBuf is a byte array, so c is an int, not a byte
+            for codingSM in self._mCodingSM:
+                if not codingSM: continue
+                if not codingSM.active: continue
+                codingState = codingSM.next_state(c)
+                if codingState == constants.eError:
+                    codingSM.active = False
+                    self._mActiveSM -= 1
+                    if self._mActiveSM <= 0:
+                        self._mState = constants.eNotMe
+                        return self.get_state()
+                elif codingState == constants.eItsMe:
+                    self._mState = constants.eFoundIt
+                    self._mDetectedCharset = codingSM.get_coding_state_machine()
+                    return self.get_state()
+                
+        return self.get_state()
--- a/subsdownloader2/src/SourceCode/chardet/escsm.py
+++ b/subsdownloader2/src/SourceCode/chardet/escsm.py
@@ -1,240 +1,240 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from constants import eStart, eError, eItsMe
-
-HZ_cls = ( \
-1,0,0,0,0,0,0,0,  # 00 - 07 
-0,0,0,0,0,0,0,0,  # 08 - 0f 
-0,0,0,0,0,0,0,0,  # 10 - 17 
-0,0,0,1,0,0,0,0,  # 18 - 1f 
-0,0,0,0,0,0,0,0,  # 20 - 27 
-0,0,0,0,0,0,0,0,  # 28 - 2f 
-0,0,0,0,0,0,0,0,  # 30 - 37 
-0,0,0,0,0,0,0,0,  # 38 - 3f 
-0,0,0,0,0,0,0,0,  # 40 - 47 
-0,0,0,0,0,0,0,0,  # 48 - 4f 
-0,0,0,0,0,0,0,0,  # 50 - 57 
-0,0,0,0,0,0,0,0,  # 58 - 5f 
-0,0,0,0,0,0,0,0,  # 60 - 67 
-0,0,0,0,0,0,0,0,  # 68 - 6f 
-0,0,0,0,0,0,0,0,  # 70 - 77 
-0,0,0,4,0,5,2,0,  # 78 - 7f 
-1,1,1,1,1,1,1,1,  # 80 - 87 
-1,1,1,1,1,1,1,1,  # 88 - 8f 
-1,1,1,1,1,1,1,1,  # 90 - 97 
-1,1,1,1,1,1,1,1,  # 98 - 9f 
-1,1,1,1,1,1,1,1,  # a0 - a7 
-1,1,1,1,1,1,1,1,  # a8 - af 
-1,1,1,1,1,1,1,1,  # b0 - b7 
-1,1,1,1,1,1,1,1,  # b8 - bf 
-1,1,1,1,1,1,1,1,  # c0 - c7 
-1,1,1,1,1,1,1,1,  # c8 - cf 
-1,1,1,1,1,1,1,1,  # d0 - d7 
-1,1,1,1,1,1,1,1,  # d8 - df 
-1,1,1,1,1,1,1,1,  # e0 - e7 
-1,1,1,1,1,1,1,1,  # e8 - ef 
-1,1,1,1,1,1,1,1,  # f0 - f7 
-1,1,1,1,1,1,1,1,  # f8 - ff 
-)
-
-HZ_st = ( \
-eStart,eError,     3,eStart,eStart,eStart,eError,eError,# 00-07 
-eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,# 08-0f 
-eItsMe,eItsMe,eError,eError,eStart,eStart,     4,eError,# 10-17 
-     5,eError,     6,eError,     5,     5,     4,eError,# 18-1f 
-     4,eError,     4,     4,     4,eError,     4,eError,# 20-27 
-     4,eItsMe,eStart,eStart,eStart,eStart,eStart,eStart,# 28-2f 
-)
-
-HZCharLenTable = (0, 0, 0, 0, 0, 0)
-
-HZSMModel = {'classTable': HZ_cls,
-             'classFactor': 6,
-             'stateTable': HZ_st,
-             'charLenTable': HZCharLenTable,
-             'name': "HZ-GB-2312"}
-
-ISO2022CN_cls = ( \
-2,0,0,0,0,0,0,0,  # 00 - 07 
-0,0,0,0,0,0,0,0,  # 08 - 0f 
-0,0,0,0,0,0,0,0,  # 10 - 17 
-0,0,0,1,0,0,0,0,  # 18 - 1f 
-0,0,0,0,0,0,0,0,  # 20 - 27 
-0,3,0,0,0,0,0,0,  # 28 - 2f 
-0,0,0,0,0,0,0,0,  # 30 - 37 
-0,0,0,0,0,0,0,0,  # 38 - 3f 
-0,0,0,4,0,0,0,0,  # 40 - 47 
-0,0,0,0,0,0,0,0,  # 48 - 4f 
-0,0,0,0,0,0,0,0,  # 50 - 57 
-0,0,0,0,0,0,0,0,  # 58 - 5f 
-0,0,0,0,0,0,0,0,  # 60 - 67 
-0,0,0,0,0,0,0,0,  # 68 - 6f 
-0,0,0,0,0,0,0,0,  # 70 - 77 
-0,0,0,0,0,0,0,0,  # 78 - 7f 
-2,2,2,2,2,2,2,2,  # 80 - 87 
-2,2,2,2,2,2,2,2,  # 88 - 8f 
-2,2,2,2,2,2,2,2,  # 90 - 97 
-2,2,2,2,2,2,2,2,  # 98 - 9f 
-2,2,2,2,2,2,2,2,  # a0 - a7 
-2,2,2,2,2,2,2,2,  # a8 - af 
-2,2,2,2,2,2,2,2,  # b0 - b7 
-2,2,2,2,2,2,2,2,  # b8 - bf 
-2,2,2,2,2,2,2,2,  # c0 - c7 
-2,2,2,2,2,2,2,2,  # c8 - cf 
-2,2,2,2,2,2,2,2,  # d0 - d7 
-2,2,2,2,2,2,2,2,  # d8 - df 
-2,2,2,2,2,2,2,2,  # e0 - e7 
-2,2,2,2,2,2,2,2,  # e8 - ef 
-2,2,2,2,2,2,2,2,  # f0 - f7 
-2,2,2,2,2,2,2,2,  # f8 - ff 
-)
-
-ISO2022CN_st = ( \
-eStart,     3,eError,eStart,eStart,eStart,eStart,eStart,# 00-07 
-eStart,eError,eError,eError,eError,eError,eError,eError,# 08-0f 
-eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,# 10-17 
-eItsMe,eItsMe,eItsMe,eError,eError,eError,     4,eError,# 18-1f 
-eError,eError,eError,eItsMe,eError,eError,eError,eError,# 20-27 
-     5,     6,eError,eError,eError,eError,eError,eError,# 28-2f 
-eError,eError,eError,eItsMe,eError,eError,eError,eError,# 30-37 
-eError,eError,eError,eError,eError,eItsMe,eError,eStart,# 38-3f 
-)
-
-ISO2022CNCharLenTable = (0, 0, 0, 0, 0, 0, 0, 0, 0)
-
-ISO2022CNSMModel = {'classTable': ISO2022CN_cls,
-                    'classFactor': 9,
-                    'stateTable': ISO2022CN_st,
-                    'charLenTable': ISO2022CNCharLenTable,
-                    'name': "ISO-2022-CN"}
-
-ISO2022JP_cls = ( \
-2,0,0,0,0,0,0,0,  # 00 - 07 
-0,0,0,0,0,0,2,2,  # 08 - 0f 
-0,0,0,0,0,0,0,0,  # 10 - 17 
-0,0,0,1,0,0,0,0,  # 18 - 1f 
-0,0,0,0,7,0,0,0,  # 20 - 27 
-3,0,0,0,0,0,0,0,  # 28 - 2f 
-0,0,0,0,0,0,0,0,  # 30 - 37 
-0,0,0,0,0,0,0,0,  # 38 - 3f 
-6,0,4,0,8,0,0,0,  # 40 - 47 
-0,9,5,0,0,0,0,0,  # 48 - 4f 
-0,0,0,0,0,0,0,0,  # 50 - 57 
-0,0,0,0,0,0,0,0,  # 58 - 5f 
-0,0,0,0,0,0,0,0,  # 60 - 67 
-0,0,0,0,0,0,0,0,  # 68 - 6f 
-0,0,0,0,0,0,0,0,  # 70 - 77 
-0,0,0,0,0,0,0,0,  # 78 - 7f 
-2,2,2,2,2,2,2,2,  # 80 - 87 
-2,2,2,2,2,2,2,2,  # 88 - 8f 
-2,2,2,2,2,2,2,2,  # 90 - 97 
-2,2,2,2,2,2,2,2,  # 98 - 9f 
-2,2,2,2,2,2,2,2,  # a0 - a7 
-2,2,2,2,2,2,2,2,  # a8 - af 
-2,2,2,2,2,2,2,2,  # b0 - b7 
-2,2,2,2,2,2,2,2,  # b8 - bf 
-2,2,2,2,2,2,2,2,  # c0 - c7 
-2,2,2,2,2,2,2,2,  # c8 - cf 
-2,2,2,2,2,2,2,2,  # d0 - d7 
-2,2,2,2,2,2,2,2,  # d8 - df 
-2,2,2,2,2,2,2,2,  # e0 - e7 
-2,2,2,2,2,2,2,2,  # e8 - ef 
-2,2,2,2,2,2,2,2,  # f0 - f7 
-2,2,2,2,2,2,2,2,  # f8 - ff 
-)
-
-ISO2022JP_st = ( \
-eStart,     3,eError,eStart,eStart,eStart,eStart,eStart,# 00-07 
-eStart,eStart,eError,eError,eError,eError,eError,eError,# 08-0f 
-eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,# 10-17 
-eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eError,eError,# 18-1f 
-eError,     5,eError,eError,eError,     4,eError,eError,# 20-27 
-eError,eError,eError,     6,eItsMe,eError,eItsMe,eError,# 28-2f 
-eError,eError,eError,eError,eError,eError,eItsMe,eItsMe,# 30-37 
-eError,eError,eError,eItsMe,eError,eError,eError,eError,# 38-3f 
-eError,eError,eError,eError,eItsMe,eError,eStart,eStart,# 40-47 
-)
-
-ISO2022JPCharLenTable = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
-
-ISO2022JPSMModel = {'classTable': ISO2022JP_cls,
-                    'classFactor': 10,
-                    'stateTable': ISO2022JP_st,
-                    'charLenTable': ISO2022JPCharLenTable,
-                    'name': "ISO-2022-JP"}
-
-ISO2022KR_cls = ( \
-2,0,0,0,0,0,0,0,  # 00 - 07 
-0,0,0,0,0,0,0,0,  # 08 - 0f 
-0,0,0,0,0,0,0,0,  # 10 - 17 
-0,0,0,1,0,0,0,0,  # 18 - 1f 
-0,0,0,0,3,0,0,0,  # 20 - 27 
-0,4,0,0,0,0,0,0,  # 28 - 2f 
-0,0,0,0,0,0,0,0,  # 30 - 37 
-0,0,0,0,0,0,0,0,  # 38 - 3f 
-0,0,0,5,0,0,0,0,  # 40 - 47 
-0,0,0,0,0,0,0,0,  # 48 - 4f 
-0,0,0,0,0,0,0,0,  # 50 - 57 
-0,0,0,0,0,0,0,0,  # 58 - 5f 
-0,0,0,0,0,0,0,0,  # 60 - 67 
-0,0,0,0,0,0,0,0,  # 68 - 6f 
-0,0,0,0,0,0,0,0,  # 70 - 77 
-0,0,0,0,0,0,0,0,  # 78 - 7f 
-2,2,2,2,2,2,2,2,  # 80 - 87 
-2,2,2,2,2,2,2,2,  # 88 - 8f 
-2,2,2,2,2,2,2,2,  # 90 - 97 
-2,2,2,2,2,2,2,2,  # 98 - 9f 
-2,2,2,2,2,2,2,2,  # a0 - a7 
-2,2,2,2,2,2,2,2,  # a8 - af 
-2,2,2,2,2,2,2,2,  # b0 - b7 
-2,2,2,2,2,2,2,2,  # b8 - bf 
-2,2,2,2,2,2,2,2,  # c0 - c7 
-2,2,2,2,2,2,2,2,  # c8 - cf 
-2,2,2,2,2,2,2,2,  # d0 - d7 
-2,2,2,2,2,2,2,2,  # d8 - df 
-2,2,2,2,2,2,2,2,  # e0 - e7 
-2,2,2,2,2,2,2,2,  # e8 - ef 
-2,2,2,2,2,2,2,2,  # f0 - f7 
-2,2,2,2,2,2,2,2,  # f8 - ff 
-)
-
-ISO2022KR_st = ( \
-eStart,     3,eError,eStart,eStart,eStart,eError,eError,# 00-07 
-eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,# 08-0f 
-eItsMe,eItsMe,eError,eError,eError,     4,eError,eError,# 10-17 
-eError,eError,eError,eError,     5,eError,eError,eError,# 18-1f 
-eError,eError,eError,eItsMe,eStart,eStart,eStart,eStart,# 20-27 
-)
-
-ISO2022KRCharLenTable = (0, 0, 0, 0, 0, 0)
-
-ISO2022KRSMModel = {'classTable': ISO2022KR_cls,
-                    'classFactor': 6,
-                    'stateTable': ISO2022KR_st,
-                    'charLenTable': ISO2022KRCharLenTable,
-                    'name': "ISO-2022-KR"}
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .constants import eStart, eError, eItsMe
+
+HZ_cls = ( \
+1,0,0,0,0,0,0,0,  # 00 - 07 
+0,0,0,0,0,0,0,0,  # 08 - 0f 
+0,0,0,0,0,0,0,0,  # 10 - 17 
+0,0,0,1,0,0,0,0,  # 18 - 1f 
+0,0,0,0,0,0,0,0,  # 20 - 27 
+0,0,0,0,0,0,0,0,  # 28 - 2f 
+0,0,0,0,0,0,0,0,  # 30 - 37 
+0,0,0,0,0,0,0,0,  # 38 - 3f 
+0,0,0,0,0,0,0,0,  # 40 - 47 
+0,0,0,0,0,0,0,0,  # 48 - 4f 
+0,0,0,0,0,0,0,0,  # 50 - 57 
+0,0,0,0,0,0,0,0,  # 58 - 5f 
+0,0,0,0,0,0,0,0,  # 60 - 67 
+0,0,0,0,0,0,0,0,  # 68 - 6f 
+0,0,0,0,0,0,0,0,  # 70 - 77 
+0,0,0,4,0,5,2,0,  # 78 - 7f 
+1,1,1,1,1,1,1,1,  # 80 - 87 
+1,1,1,1,1,1,1,1,  # 88 - 8f 
+1,1,1,1,1,1,1,1,  # 90 - 97 
+1,1,1,1,1,1,1,1,  # 98 - 9f 
+1,1,1,1,1,1,1,1,  # a0 - a7 
+1,1,1,1,1,1,1,1,  # a8 - af 
+1,1,1,1,1,1,1,1,  # b0 - b7 
+1,1,1,1,1,1,1,1,  # b8 - bf 
+1,1,1,1,1,1,1,1,  # c0 - c7 
+1,1,1,1,1,1,1,1,  # c8 - cf 
+1,1,1,1,1,1,1,1,  # d0 - d7 
+1,1,1,1,1,1,1,1,  # d8 - df 
+1,1,1,1,1,1,1,1,  # e0 - e7 
+1,1,1,1,1,1,1,1,  # e8 - ef 
+1,1,1,1,1,1,1,1,  # f0 - f7 
+1,1,1,1,1,1,1,1,  # f8 - ff 
+)
+
+HZ_st = ( \
+eStart,eError,     3,eStart,eStart,eStart,eError,eError,# 00-07 
+eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,# 08-0f 
+eItsMe,eItsMe,eError,eError,eStart,eStart,     4,eError,# 10-17 
+     5,eError,     6,eError,     5,     5,     4,eError,# 18-1f 
+     4,eError,     4,     4,     4,eError,     4,eError,# 20-27 
+     4,eItsMe,eStart,eStart,eStart,eStart,eStart,eStart,# 28-2f 
+)
+
+HZCharLenTable = (0, 0, 0, 0, 0, 0)
+
+HZSMModel = {'classTable': HZ_cls,
+             'classFactor': 6,
+             'stateTable': HZ_st,
+             'charLenTable': HZCharLenTable,
+             'name': "HZ-GB-2312"}
+
+ISO2022CN_cls = ( \
+2,0,0,0,0,0,0,0,  # 00 - 07 
+0,0,0,0,0,0,0,0,  # 08 - 0f 
+0,0,0,0,0,0,0,0,  # 10 - 17 
+0,0,0,1,0,0,0,0,  # 18 - 1f 
+0,0,0,0,0,0,0,0,  # 20 - 27 
+0,3,0,0,0,0,0,0,  # 28 - 2f 
+0,0,0,0,0,0,0,0,  # 30 - 37 
+0,0,0,0,0,0,0,0,  # 38 - 3f 
+0,0,0,4,0,0,0,0,  # 40 - 47 
+0,0,0,0,0,0,0,0,  # 48 - 4f 
+0,0,0,0,0,0,0,0,  # 50 - 57 
+0,0,0,0,0,0,0,0,  # 58 - 5f 
+0,0,0,0,0,0,0,0,  # 60 - 67 
+0,0,0,0,0,0,0,0,  # 68 - 6f 
+0,0,0,0,0,0,0,0,  # 70 - 77 
+0,0,0,0,0,0,0,0,  # 78 - 7f 
+2,2,2,2,2,2,2,2,  # 80 - 87 
+2,2,2,2,2,2,2,2,  # 88 - 8f 
+2,2,2,2,2,2,2,2,  # 90 - 97 
+2,2,2,2,2,2,2,2,  # 98 - 9f 
+2,2,2,2,2,2,2,2,  # a0 - a7 
+2,2,2,2,2,2,2,2,  # a8 - af 
+2,2,2,2,2,2,2,2,  # b0 - b7 
+2,2,2,2,2,2,2,2,  # b8 - bf 
+2,2,2,2,2,2,2,2,  # c0 - c7 
+2,2,2,2,2,2,2,2,  # c8 - cf 
+2,2,2,2,2,2,2,2,  # d0 - d7 
+2,2,2,2,2,2,2,2,  # d8 - df 
+2,2,2,2,2,2,2,2,  # e0 - e7 
+2,2,2,2,2,2,2,2,  # e8 - ef 
+2,2,2,2,2,2,2,2,  # f0 - f7 
+2,2,2,2,2,2,2,2,  # f8 - ff 
+)
+
+ISO2022CN_st = ( \
+eStart,     3,eError,eStart,eStart,eStart,eStart,eStart,# 00-07 
+eStart,eError,eError,eError,eError,eError,eError,eError,# 08-0f 
+eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,# 10-17 
+eItsMe,eItsMe,eItsMe,eError,eError,eError,     4,eError,# 18-1f 
+eError,eError,eError,eItsMe,eError,eError,eError,eError,# 20-27 
+     5,     6,eError,eError,eError,eError,eError,eError,# 28-2f 
+eError,eError,eError,eItsMe,eError,eError,eError,eError,# 30-37 
+eError,eError,eError,eError,eError,eItsMe,eError,eStart,# 38-3f 
+)
+
+ISO2022CNCharLenTable = (0, 0, 0, 0, 0, 0, 0, 0, 0)
+
+ISO2022CNSMModel = {'classTable': ISO2022CN_cls,
+                    'classFactor': 9,
+                    'stateTable': ISO2022CN_st,
+                    'charLenTable': ISO2022CNCharLenTable,
+                    'name': "ISO-2022-CN"}
+
+ISO2022JP_cls = ( \
+2,0,0,0,0,0,0,0,  # 00 - 07 
+0,0,0,0,0,0,2,2,  # 08 - 0f 
+0,0,0,0,0,0,0,0,  # 10 - 17 
+0,0,0,1,0,0,0,0,  # 18 - 1f 
+0,0,0,0,7,0,0,0,  # 20 - 27 
+3,0,0,0,0,0,0,0,  # 28 - 2f 
+0,0,0,0,0,0,0,0,  # 30 - 37 
+0,0,0,0,0,0,0,0,  # 38 - 3f 
+6,0,4,0,8,0,0,0,  # 40 - 47 
+0,9,5,0,0,0,0,0,  # 48 - 4f 
+0,0,0,0,0,0,0,0,  # 50 - 57 
+0,0,0,0,0,0,0,0,  # 58 - 5f 
+0,0,0,0,0,0,0,0,  # 60 - 67 
+0,0,0,0,0,0,0,0,  # 68 - 6f 
+0,0,0,0,0,0,0,0,  # 70 - 77 
+0,0,0,0,0,0,0,0,  # 78 - 7f 
+2,2,2,2,2,2,2,2,  # 80 - 87 
+2,2,2,2,2,2,2,2,  # 88 - 8f 
+2,2,2,2,2,2,2,2,  # 90 - 97 
+2,2,2,2,2,2,2,2,  # 98 - 9f 
+2,2,2,2,2,2,2,2,  # a0 - a7 
+2,2,2,2,2,2,2,2,  # a8 - af 
+2,2,2,2,2,2,2,2,  # b0 - b7 
+2,2,2,2,2,2,2,2,  # b8 - bf 
+2,2,2,2,2,2,2,2,  # c0 - c7 
+2,2,2,2,2,2,2,2,  # c8 - cf 
+2,2,2,2,2,2,2,2,  # d0 - d7 
+2,2,2,2,2,2,2,2,  # d8 - df 
+2,2,2,2,2,2,2,2,  # e0 - e7 
+2,2,2,2,2,2,2,2,  # e8 - ef 
+2,2,2,2,2,2,2,2,  # f0 - f7 
+2,2,2,2,2,2,2,2,  # f8 - ff 
+)
+
+ISO2022JP_st = ( \
+eStart,     3,eError,eStart,eStart,eStart,eStart,eStart,# 00-07 
+eStart,eStart,eError,eError,eError,eError,eError,eError,# 08-0f 
+eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,# 10-17 
+eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eError,eError,# 18-1f 
+eError,     5,eError,eError,eError,     4,eError,eError,# 20-27 
+eError,eError,eError,     6,eItsMe,eError,eItsMe,eError,# 28-2f 
+eError,eError,eError,eError,eError,eError,eItsMe,eItsMe,# 30-37 
+eError,eError,eError,eItsMe,eError,eError,eError,eError,# 38-3f 
+eError,eError,eError,eError,eItsMe,eError,eStart,eStart,# 40-47 
+)
+
+ISO2022JPCharLenTable = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
+
+ISO2022JPSMModel = {'classTable': ISO2022JP_cls,
+                    'classFactor': 10,
+                    'stateTable': ISO2022JP_st,
+                    'charLenTable': ISO2022JPCharLenTable,
+                    'name': "ISO-2022-JP"}
+
+ISO2022KR_cls = ( \
+2,0,0,0,0,0,0,0,  # 00 - 07 
+0,0,0,0,0,0,0,0,  # 08 - 0f 
+0,0,0,0,0,0,0,0,  # 10 - 17 
+0,0,0,1,0,0,0,0,  # 18 - 1f 
+0,0,0,0,3,0,0,0,  # 20 - 27 
+0,4,0,0,0,0,0,0,  # 28 - 2f 
+0,0,0,0,0,0,0,0,  # 30 - 37 
+0,0,0,0,0,0,0,0,  # 38 - 3f 
+0,0,0,5,0,0,0,0,  # 40 - 47 
+0,0,0,0,0,0,0,0,  # 48 - 4f 
+0,0,0,0,0,0,0,0,  # 50 - 57 
+0,0,0,0,0,0,0,0,  # 58 - 5f 
+0,0,0,0,0,0,0,0,  # 60 - 67 
+0,0,0,0,0,0,0,0,  # 68 - 6f 
+0,0,0,0,0,0,0,0,  # 70 - 77 
+0,0,0,0,0,0,0,0,  # 78 - 7f 
+2,2,2,2,2,2,2,2,  # 80 - 87 
+2,2,2,2,2,2,2,2,  # 88 - 8f 
+2,2,2,2,2,2,2,2,  # 90 - 97 
+2,2,2,2,2,2,2,2,  # 98 - 9f 
+2,2,2,2,2,2,2,2,  # a0 - a7 
+2,2,2,2,2,2,2,2,  # a8 - af 
+2,2,2,2,2,2,2,2,  # b0 - b7 
+2,2,2,2,2,2,2,2,  # b8 - bf 
+2,2,2,2,2,2,2,2,  # c0 - c7 
+2,2,2,2,2,2,2,2,  # c8 - cf 
+2,2,2,2,2,2,2,2,  # d0 - d7 
+2,2,2,2,2,2,2,2,  # d8 - df 
+2,2,2,2,2,2,2,2,  # e0 - e7 
+2,2,2,2,2,2,2,2,  # e8 - ef 
+2,2,2,2,2,2,2,2,  # f0 - f7 
+2,2,2,2,2,2,2,2,  # f8 - ff 
+)
+
+ISO2022KR_st = ( \
+eStart,     3,eError,eStart,eStart,eStart,eError,eError,# 00-07 
+eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,# 08-0f 
+eItsMe,eItsMe,eError,eError,eError,     4,eError,eError,# 10-17 
+eError,eError,eError,eError,     5,eError,eError,eError,# 18-1f 
+eError,eError,eError,eItsMe,eStart,eStart,eStart,eStart,# 20-27 
+)
+
+ISO2022KRCharLenTable = (0, 0, 0, 0, 0, 0)
+
+ISO2022KRSMModel = {'classTable': ISO2022KR_cls,
+                    'classFactor': 6,
+                    'stateTable': ISO2022KR_st,
+                    'charLenTable': ISO2022KRCharLenTable,
+                    'name': "ISO-2022-KR"}
--- a/subsdownloader2/src/SourceCode/chardet/eucjpprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/eucjpprober.py
@@ -1,85 +1,87 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants, sys
-from constants import eStart, eError, eItsMe
-from mbcharsetprober import MultiByteCharSetProber
-from codingstatemachine import CodingStateMachine
-from chardistribution import EUCJPDistributionAnalysis
-from jpcntx import EUCJPContextAnalysis
-from mbcssm import EUCJPSMModel
-
-class EUCJPProber(MultiByteCharSetProber):
-    def __init__(self):
-        MultiByteCharSetProber.__init__(self)
-        self._mCodingSM = CodingStateMachine(EUCJPSMModel)
-        self._mDistributionAnalyzer = EUCJPDistributionAnalysis()
-        self._mContextAnalyzer = EUCJPContextAnalysis()
-        self.reset()
-
-    def reset(self):
-        MultiByteCharSetProber.reset(self)
-        self._mContextAnalyzer.reset()
-        
-    def get_charset_name(self):
-        return "EUC-JP"
-
-    def feed(self, aBuf):
-        aLen = len(aBuf)
-        for i in range(0, aLen):
-            codingState = self._mCodingSM.next_state(aBuf[i])
-            if codingState == eError:
-                if constants._debug:
-                    sys.stderr.write(self.get_charset_name() + ' prober hit error at byte ' + str(i) + '\n')
-                self._mState = constants.eNotMe
-                break
-            elif codingState == eItsMe:
-                self._mState = constants.eFoundIt
-                break
-            elif codingState == eStart:
-                charLen = self._mCodingSM.get_current_charlen()
-                if i == 0:
-                    self._mLastChar[1] = aBuf[0]
-                    self._mContextAnalyzer.feed(self._mLastChar, charLen)
-                    self._mDistributionAnalyzer.feed(self._mLastChar, charLen)
-                else:
-                    self._mContextAnalyzer.feed(aBuf[i-1:i+1], charLen)
-                    self._mDistributionAnalyzer.feed(aBuf[i-1:i+1], charLen)
-                    
-        self._mLastChar[0] = aBuf[aLen - 1]
-        
-        if self.get_state() == constants.eDetecting:
-            if self._mContextAnalyzer.got_enough_data() and \
-                   (self.get_confidence() > constants.SHORTCUT_THRESHOLD):
-                self._mState = constants.eFoundIt
-
-        return self.get_state()
-
-    def get_confidence(self):
-        contxtCf = self._mContextAnalyzer.get_confidence()
-        distribCf = self._mDistributionAnalyzer.get_confidence()
-        return max(contxtCf, distribCf)
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+import sys
+from .constants import eStart, eError, eItsMe
+from .mbcharsetprober import MultiByteCharSetProber
+from .codingstatemachine import CodingStateMachine
+from .chardistribution import EUCJPDistributionAnalysis
+from .jpcntx import EUCJPContextAnalysis
+from .mbcssm import EUCJPSMModel
+
+class EUCJPProber(MultiByteCharSetProber):
+    def __init__(self):
+        MultiByteCharSetProber.__init__(self)
+        self._mCodingSM = CodingStateMachine(EUCJPSMModel)
+        self._mDistributionAnalyzer = EUCJPDistributionAnalysis()
+        self._mContextAnalyzer = EUCJPContextAnalysis()
+        self.reset()
+
+    def reset(self):
+        MultiByteCharSetProber.reset(self)
+        self._mContextAnalyzer.reset()
+        
+    def get_charset_name(self):
+        return "EUC-JP"
+
+    def feed(self, aBuf):
+        aLen = len(aBuf)
+        for i in range(0, aLen):
+            # PY3K: aBuf is a byte array, so aBuf[i] is an int, not a byte
+            codingState = self._mCodingSM.next_state(aBuf[i])
+            if codingState == eError:
+                if constants._debug:
+                    sys.stderr.write(self.get_charset_name() + ' prober hit error at byte ' + str(i) + '\n')
+                self._mState = constants.eNotMe
+                break
+            elif codingState == eItsMe:
+                self._mState = constants.eFoundIt
+                break
+            elif codingState == eStart:
+                charLen = self._mCodingSM.get_current_charlen()
+                if i == 0:
+                    self._mLastChar[1] = aBuf[0]
+                    self._mContextAnalyzer.feed(self._mLastChar, charLen)
+                    self._mDistributionAnalyzer.feed(self._mLastChar, charLen)
+                else:
+                    self._mContextAnalyzer.feed(aBuf[i-1:i+1], charLen)
+                    self._mDistributionAnalyzer.feed(aBuf[i-1:i+1], charLen)
+                    
+        self._mLastChar[0] = aBuf[aLen - 1]
+        
+        if self.get_state() == constants.eDetecting:
+            if self._mContextAnalyzer.got_enough_data() and \
+                   (self.get_confidence() > constants.SHORTCUT_THRESHOLD):
+                self._mState = constants.eFoundIt
+
+        return self.get_state()
+
+    def get_confidence(self):
+        contxtCf = self._mContextAnalyzer.get_confidence()
+        distribCf = self._mDistributionAnalyzer.get_confidence()
+        return max(contxtCf, distribCf)
--- a/subsdownloader2/src/SourceCode/chardet/euckrprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/euckrprober.py
@@ -1,41 +1,41 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from mbcharsetprober import MultiByteCharSetProber
-from codingstatemachine import CodingStateMachine
-from chardistribution import EUCKRDistributionAnalysis
-from mbcssm import EUCKRSMModel
-
-class EUCKRProber(MultiByteCharSetProber):
-    def __init__(self):
-        MultiByteCharSetProber.__init__(self)
-        self._mCodingSM = CodingStateMachine(EUCKRSMModel)
-        self._mDistributionAnalyzer = EUCKRDistributionAnalysis()
-        self.reset()
-
-    def get_charset_name(self):
-        return "EUC-KR"
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .mbcharsetprober import MultiByteCharSetProber
+from .codingstatemachine import CodingStateMachine
+from .chardistribution import EUCKRDistributionAnalysis
+from .mbcssm import EUCKRSMModel
+
+class EUCKRProber(MultiByteCharSetProber):
+    def __init__(self):
+        MultiByteCharSetProber.__init__(self)
+        self._mCodingSM = CodingStateMachine(EUCKRSMModel)
+        self._mDistributionAnalyzer = EUCKRDistributionAnalysis()
+        self.reset()
+
+    def get_charset_name(self):
+        return "EUC-KR"
--- a/subsdownloader2/src/SourceCode/chardet/euctwprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/euctwprober.py
@@ -1,41 +1,41 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from mbcharsetprober import MultiByteCharSetProber
-from codingstatemachine import CodingStateMachine
-from chardistribution import EUCTWDistributionAnalysis
-from mbcssm import EUCTWSMModel
-
-class EUCTWProber(MultiByteCharSetProber):
-    def __init__(self):
-        MultiByteCharSetProber.__init__(self)
-        self._mCodingSM = CodingStateMachine(EUCTWSMModel)
-        self._mDistributionAnalyzer = EUCTWDistributionAnalysis()
-        self.reset()
-
-    def get_charset_name(self):
-        return "EUC-TW"
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .mbcharsetprober import MultiByteCharSetProber
+from .codingstatemachine import CodingStateMachine
+from .chardistribution import EUCTWDistributionAnalysis
+from .mbcssm import EUCTWSMModel
+
+class EUCTWProber(MultiByteCharSetProber):
+    def __init__(self):
+        MultiByteCharSetProber.__init__(self)
+        self._mCodingSM = CodingStateMachine(EUCTWSMModel)
+        self._mDistributionAnalyzer = EUCTWDistributionAnalysis()
+        self.reset()
+
+    def get_charset_name(self):
+        return "EUC-TW"
--- a/subsdownloader2/src/SourceCode/chardet/gb2312prober.py
+++ b/subsdownloader2/src/SourceCode/chardet/gb2312prober.py
@@ -1,41 +1,41 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from mbcharsetprober import MultiByteCharSetProber
-from codingstatemachine import CodingStateMachine
-from chardistribution import GB2312DistributionAnalysis
-from mbcssm import GB2312SMModel
-
-class GB2312Prober(MultiByteCharSetProber):
-    def __init__(self):
-        MultiByteCharSetProber.__init__(self)
-        self._mCodingSM = CodingStateMachine(GB2312SMModel)
-        self._mDistributionAnalyzer = GB2312DistributionAnalysis()
-        self.reset()
-
-    def get_charset_name(self):
-        return "GB2312"
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .mbcharsetprober import MultiByteCharSetProber
+from .codingstatemachine import CodingStateMachine
+from .chardistribution import GB2312DistributionAnalysis
+from .mbcssm import GB2312SMModel
+
+class GB2312Prober(MultiByteCharSetProber):
+    def __init__(self):
+        MultiByteCharSetProber.__init__(self)
+        self._mCodingSM = CodingStateMachine(GB2312SMModel)
+        self._mDistributionAnalyzer = GB2312DistributionAnalysis()
+        self.reset()
+
+    def get_charset_name(self):
+        return "GB2312"
--- a/subsdownloader2/src/SourceCode/chardet/hebrewprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/hebrewprober.py
@@ -1,269 +1,269 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-#          Shy Shalom
-# Portions created by the Initial Developer are Copyright (C) 2005
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from charsetprober import CharSetProber
-import constants
-
-# This prober doesn't actually recognize a language or a charset.
-# It is a helper prober for the use of the Hebrew model probers
-
-### General ideas of the Hebrew charset recognition ###
-#
-# Four main charsets exist in Hebrew:
-# "ISO-8859-8" - Visual Hebrew
-# "windows-1255" - Logical Hebrew 
-# "ISO-8859-8-I" - Logical Hebrew
-# "x-mac-hebrew" - ?? Logical Hebrew ??
-#
-# Both "ISO" charsets use a completely identical set of code points, whereas
-# "windows-1255" and "x-mac-hebrew" are two different proper supersets of 
-# these code points. windows-1255 defines additional characters in the range
-# 0x80-0x9F as some misc punctuation marks as well as some Hebrew-specific 
-# diacritics and additional 'Yiddish' ligature letters in the range 0xc0-0xd6.
-# x-mac-hebrew defines similar additional code points but with a different 
-# mapping.
-#
-# As far as an average Hebrew text with no diacritics is concerned, all four 
-# charsets are identical with respect to code points. Meaning that for the 
-# main Hebrew alphabet, all four map the same values to all 27 Hebrew letters 
-# (including final letters).
-#
-# The dominant difference between these charsets is their directionality.
-# "Visual" directionality means that the text is ordered as if the renderer is
-# not aware of a BIDI rendering algorithm. The renderer sees the text and 
-# draws it from left to right. The text itself when ordered naturally is read 
-# backwards. A buffer of Visual Hebrew generally looks like so:
-# "[last word of first line spelled backwards] [whole line ordered backwards
-# and spelled backwards] [first word of first line spelled backwards] 
-# [end of line] [last word of second line] ... etc' "
-# adding punctuation marks, numbers and English text to visual text is
-# naturally also "visual" and from left to right.
-# 
-# "Logical" directionality means the text is ordered "naturally" according to
-# the order it is read. It is the responsibility of the renderer to display 
-# the text from right to left. A BIDI algorithm is used to place general 
-# punctuation marks, numbers and English text in the text.
-#
-# Texts in x-mac-hebrew are almost impossible to find on the Internet. From 
-# what little evidence I could find, it seems that its general directionality
-# is Logical.
-#
-# To sum up all of the above, the Hebrew probing mechanism knows about two
-# charsets:
-# Visual Hebrew - "ISO-8859-8" - backwards text - Words and sentences are
-#    backwards while line order is natural. For charset recognition purposes
-#    the line order is unimportant (In fact, for this implementation, even 
-#    word order is unimportant).
-# Logical Hebrew - "windows-1255" - normal, naturally ordered text.
-#
-# "ISO-8859-8-I" is a subset of windows-1255 and doesn't need to be 
-#    specifically identified.
-# "x-mac-hebrew" is also identified as windows-1255. A text in x-mac-hebrew
-#    that contain special punctuation marks or diacritics is displayed with
-#    some unconverted characters showing as question marks. This problem might
-#    be corrected using another model prober for x-mac-hebrew. Due to the fact
-#    that x-mac-hebrew texts are so rare, writing another model prober isn't 
-#    worth the effort and performance hit.
-#
-#### The Prober ####
-#
-# The prober is divided between two SBCharSetProbers and a HebrewProber,
-# all of which are managed, created, fed data, inquired and deleted by the
-# SBCSGroupProber. The two SBCharSetProbers identify that the text is in
-# fact some kind of Hebrew, Logical or Visual. The final decision about which
-# one is it is made by the HebrewProber by combining final-letter scores
-# with the scores of the two SBCharSetProbers to produce a final answer.
-#
-# The SBCSGroupProber is responsible for stripping the original text of HTML
-# tags, English characters, numbers, low-ASCII punctuation characters, spaces
-# and new lines. It reduces any sequence of such characters to a single space.
-# The buffer fed to each prober in the SBCS group prober is pure text in
-# high-ASCII.
-# The two SBCharSetProbers (model probers) share the same language model:
-# Win1255Model.
-# The first SBCharSetProber uses the model normally as any other
-# SBCharSetProber does, to recognize windows-1255, upon which this model was
-# built. The second SBCharSetProber is told to make the pair-of-letter
-# lookup in the language model backwards. This in practice exactly simulates
-# a visual Hebrew model using the windows-1255 logical Hebrew model.
-#
-# The HebrewProber is not using any language model. All it does is look for
-# final-letter evidence suggesting the text is either logical Hebrew or visual
-# Hebrew. Disjointed from the model probers, the results of the HebrewProber
-# alone are meaningless. HebrewProber always returns 0.00 as confidence
-# since it never identifies a charset by itself. Instead, the pointer to the
-# HebrewProber is passed to the model probers as a helper "Name Prober".
-# When the Group prober receives a positive identification from any prober,
-# it asks for the name of the charset identified. If the prober queried is a
-# Hebrew model prober, the model prober forwards the call to the
-# HebrewProber to make the final decision. In the HebrewProber, the
-# decision is made according to the final-letters scores maintained and Both
-# model probers scores. The answer is returned in the form of the name of the
-# charset identified, either "windows-1255" or "ISO-8859-8".
-
-# windows-1255 / ISO-8859-8 code points of interest
-FINAL_KAF = '\xea'
-NORMAL_KAF = '\xeb'
-FINAL_MEM = '\xed'
-NORMAL_MEM = '\xee'
-FINAL_NUN = '\xef'
-NORMAL_NUN = '\xf0'
-FINAL_PE = '\xf3'
-NORMAL_PE = '\xf4'
-FINAL_TSADI = '\xf5'
-NORMAL_TSADI = '\xf6'
-
-# Minimum Visual vs Logical final letter score difference.
-# If the difference is below this, don't rely solely on the final letter score distance.
-MIN_FINAL_CHAR_DISTANCE = 5
-
-# Minimum Visual vs Logical model score difference.
-# If the difference is below this, don't rely at all on the model score distance.
-MIN_MODEL_DISTANCE = 0.01
-
-VISUAL_HEBREW_NAME = "ISO-8859-8"
-LOGICAL_HEBREW_NAME = "windows-1255"
-
-class HebrewProber(CharSetProber):
-    def __init__(self):
-        CharSetProber.__init__(self)
-        self._mLogicalProber = None
-        self._mVisualProber = None
-        self.reset()
-
-    def reset(self):
-        self._mFinalCharLogicalScore = 0
-        self._mFinalCharVisualScore = 0
-        # The two last characters seen in the previous buffer,
-        # mPrev and mBeforePrev are initialized to space in order to simulate a word 
-        # delimiter at the beginning of the data
-        self._mPrev = ' '
-        self._mBeforePrev = ' '
-        # These probers are owned by the group prober.
-        
-    def set_model_probers(self, logicalProber, visualProber):
-        self._mLogicalProber = logicalProber
-        self._mVisualProber = visualProber
-
-    def is_final(self, c):
-        return c in [FINAL_KAF, FINAL_MEM, FINAL_NUN, FINAL_PE, FINAL_TSADI]
-
-    def is_non_final(self, c):
-        # The normal Tsadi is not a good Non-Final letter due to words like 
-        # 'lechotet' (to chat) containing an apostrophe after the tsadi. This 
-        # apostrophe is converted to a space in FilterWithoutEnglishLetters causing 
-        # the Non-Final tsadi to appear at an end of a word even though this is not 
-        # the case in the original text.
-        # The letters Pe and Kaf rarely display a related behavior of not being a 
-        # good Non-Final letter. Words like 'Pop', 'Winamp' and 'Mubarak' for 
-        # example legally end with a Non-Final Pe or Kaf. However, the benefit of 
-        # these letters as Non-Final letters outweighs the damage since these words 
-        # are quite rare.
-        return c in [NORMAL_KAF, NORMAL_MEM, NORMAL_NUN, NORMAL_PE]
-    
-    def feed(self, aBuf):
-        # Final letter analysis for logical-visual decision.
-        # Look for evidence that the received buffer is either logical Hebrew or 
-        # visual Hebrew.
-        # The following cases are checked:
-        # 1) A word longer than 1 letter, ending with a final letter. This is an 
-        #    indication that the text is laid out "naturally" since the final letter 
-        #    really appears at the end. +1 for logical score.
-        # 2) A word longer than 1 letter, ending with a Non-Final letter. In normal
-        #    Hebrew, words ending with Kaf, Mem, Nun, Pe or Tsadi, should not end with
-        #    the Non-Final form of that letter. Exceptions to this rule are mentioned
-        #    above in isNonFinal(). This is an indication that the text is laid out
-        #    backwards. +1 for visual score
-        # 3) A word longer than 1 letter, starting with a final letter. Final letters 
-        #    should not appear at the beginning of a word. This is an indication that 
-        #    the text is laid out backwards. +1 for visual score.
-        # 
-        # The visual score and logical score are accumulated throughout the text and 
-        # are finally checked against each other in GetCharSetName().
-        # No checking for final letters in the middle of words is done since that case
-        # is not an indication for either Logical or Visual text.
-        # 
-        # We automatically filter out all 7-bit characters (replace them with spaces)
-        # so the word boundary detection works properly. [MAP]
-
-        if self.get_state() == constants.eNotMe:
-            # Both model probers say it's not them. No reason to continue.
-            return constants.eNotMe
-
-        aBuf = self.filter_high_bit_only(aBuf)
-        
-        for cur in aBuf:
-            if cur == ' ':
-                # We stand on a space - a word just ended
-                if self._mBeforePrev != ' ':
-                    # next-to-last char was not a space so self._mPrev is not a 1 letter word
-                    if self.is_final(self._mPrev):
-                        # case (1) [-2:not space][-1:final letter][cur:space]
-                        self._mFinalCharLogicalScore += 1
-                    elif self.is_non_final(self._mPrev):
-                        # case (2) [-2:not space][-1:Non-Final letter][cur:space]
-                        self._mFinalCharVisualScore += 1
-            else:
-                # Not standing on a space
-                if (self._mBeforePrev == ' ') and (self.is_final(self._mPrev)) and (cur != ' '):
-                    # case (3) [-2:space][-1:final letter][cur:not space]
-                    self._mFinalCharVisualScore += 1
-            self._mBeforePrev = self._mPrev
-            self._mPrev = cur
-
-        # Forever detecting, till the end or until both model probers return eNotMe (handled above)
-        return constants.eDetecting
-
-    def get_charset_name(self):
-        # Make the decision: is it Logical or Visual?
-        # If the final letter score distance is dominant enough, rely on it.
-        finalsub = self._mFinalCharLogicalScore - self._mFinalCharVisualScore
-        if finalsub >= MIN_FINAL_CHAR_DISTANCE:
-            return LOGICAL_HEBREW_NAME
-        if finalsub <= -MIN_FINAL_CHAR_DISTANCE:
-            return VISUAL_HEBREW_NAME
-
-        # It's not dominant enough, try to rely on the model scores instead.
-        modelsub = self._mLogicalProber.get_confidence() - self._mVisualProber.get_confidence()
-        if modelsub > MIN_MODEL_DISTANCE:
-            return LOGICAL_HEBREW_NAME
-        if modelsub < -MIN_MODEL_DISTANCE:
-            return VISUAL_HEBREW_NAME
-
-        # Still no good, back to final letter distance, maybe it'll save the day.
-        if finalsub < 0.0:
-            return VISUAL_HEBREW_NAME
-
-        # (finalsub > 0 - Logical) or (don't know what to do) default to Logical.
-        return LOGICAL_HEBREW_NAME
-
-    def get_state(self):
-        # Remain active as long as any of the model probers are active.
-        if (self._mLogicalProber.get_state() == constants.eNotMe) and \
-           (self._mVisualProber.get_state() == constants.eNotMe):
-            return constants.eNotMe
-        return constants.eDetecting
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+#          Shy Shalom
+# Portions created by the Initial Developer are Copyright (C) 2005
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .charsetprober import CharSetProber
+from . import constants
+
+# This prober doesn't actually recognize a language or a charset.
+# It is a helper prober for the use of the Hebrew model probers
+
+### General ideas of the Hebrew charset recognition ###
+#
+# Four main charsets exist in Hebrew:
+# "ISO-8859-8" - Visual Hebrew
+# "windows-1255" - Logical Hebrew 
+# "ISO-8859-8-I" - Logical Hebrew
+# "x-mac-hebrew" - ?? Logical Hebrew ??
+#
+# Both "ISO" charsets use a completely identical set of code points, whereas
+# "windows-1255" and "x-mac-hebrew" are two different proper supersets of 
+# these code points. windows-1255 defines additional characters in the range
+# 0x80-0x9F as some misc punctuation marks as well as some Hebrew-specific 
+# diacritics and additional 'Yiddish' ligature letters in the range 0xc0-0xd6.
+# x-mac-hebrew defines similar additional code points but with a different 
+# mapping.
+#
+# As far as an average Hebrew text with no diacritics is concerned, all four 
+# charsets are identical with respect to code points. Meaning that for the 
+# main Hebrew alphabet, all four map the same values to all 27 Hebrew letters 
+# (including final letters).
+#
+# The dominant difference between these charsets is their directionality.
+# "Visual" directionality means that the text is ordered as if the renderer is
+# not aware of a BIDI rendering algorithm. The renderer sees the text and 
+# draws it from left to right. The text itself when ordered naturally is read 
+# backwards. A buffer of Visual Hebrew generally looks like so:
+# "[last word of first line spelled backwards] [whole line ordered backwards
+# and spelled backwards] [first word of first line spelled backwards] 
+# [end of line] [last word of second line] ... etc' "
+# adding punctuation marks, numbers and English text to visual text is
+# naturally also "visual" and from left to right.
+# 
+# "Logical" directionality means the text is ordered "naturally" according to
+# the order it is read. It is the responsibility of the renderer to display 
+# the text from right to left. A BIDI algorithm is used to place general 
+# punctuation marks, numbers and English text in the text.
+#
+# Texts in x-mac-hebrew are almost impossible to find on the Internet. From 
+# what little evidence I could find, it seems that its general directionality
+# is Logical.
+#
+# To sum up all of the above, the Hebrew probing mechanism knows about two
+# charsets:
+# Visual Hebrew - "ISO-8859-8" - backwards text - Words and sentences are
+#    backwards while line order is natural. For charset recognition purposes
+#    the line order is unimportant (In fact, for this implementation, even 
+#    word order is unimportant).
+# Logical Hebrew - "windows-1255" - normal, naturally ordered text.
+#
+# "ISO-8859-8-I" is a subset of windows-1255 and doesn't need to be 
+#    specifically identified.
+# "x-mac-hebrew" is also identified as windows-1255. A text in x-mac-hebrew
+#    that contain special punctuation marks or diacritics is displayed with
+#    some unconverted characters showing as question marks. This problem might
+#    be corrected using another model prober for x-mac-hebrew. Due to the fact
+#    that x-mac-hebrew texts are so rare, writing another model prober isn't 
+#    worth the effort and performance hit.
+#
+#### The Prober ####
+#
+# The prober is divided between two SBCharSetProbers and a HebrewProber,
+# all of which are managed, created, fed data, inquired and deleted by the
+# SBCSGroupProber. The two SBCharSetProbers identify that the text is in
+# fact some kind of Hebrew, Logical or Visual. The final decision about which
+# one is it is made by the HebrewProber by combining final-letter scores
+# with the scores of the two SBCharSetProbers to produce a final answer.
+#
+# The SBCSGroupProber is responsible for stripping the original text of HTML
+# tags, English characters, numbers, low-ASCII punctuation characters, spaces
+# and new lines. It reduces any sequence of such characters to a single space.
+# The buffer fed to each prober in the SBCS group prober is pure text in
+# high-ASCII.
+# The two SBCharSetProbers (model probers) share the same language model:
+# Win1255Model.
+# The first SBCharSetProber uses the model normally as any other
+# SBCharSetProber does, to recognize windows-1255, upon which this model was
+# built. The second SBCharSetProber is told to make the pair-of-letter
+# lookup in the language model backwards. This in practice exactly simulates
+# a visual Hebrew model using the windows-1255 logical Hebrew model.
+#
+# The HebrewProber is not using any language model. All it does is look for
+# final-letter evidence suggesting the text is either logical Hebrew or visual
+# Hebrew. Disjointed from the model probers, the results of the HebrewProber
+# alone are meaningless. HebrewProber always returns 0.00 as confidence
+# since it never identifies a charset by itself. Instead, the pointer to the
+# HebrewProber is passed to the model probers as a helper "Name Prober".
+# When the Group prober receives a positive identification from any prober,
+# it asks for the name of the charset identified. If the prober queried is a
+# Hebrew model prober, the model prober forwards the call to the
+# HebrewProber to make the final decision. In the HebrewProber, the
+# decision is made according to the final-letters scores maintained and Both
+# model probers scores. The answer is returned in the form of the name of the
+# charset identified, either "windows-1255" or "ISO-8859-8".
+
+# windows-1255 / ISO-8859-8 code points of interest
+FINAL_KAF = '\xea'
+NORMAL_KAF = '\xeb'
+FINAL_MEM = '\xed'
+NORMAL_MEM = '\xee'
+FINAL_NUN = '\xef'
+NORMAL_NUN = '\xf0'
+FINAL_PE = '\xf3'
+NORMAL_PE = '\xf4'
+FINAL_TSADI = '\xf5'
+NORMAL_TSADI = '\xf6'
+
+# Minimum Visual vs Logical final letter score difference.
+# If the difference is below this, don't rely solely on the final letter score distance.
+MIN_FINAL_CHAR_DISTANCE = 5
+
+# Minimum Visual vs Logical model score difference.
+# If the difference is below this, don't rely at all on the model score distance.
+MIN_MODEL_DISTANCE = 0.01
+
+VISUAL_HEBREW_NAME = "ISO-8859-8"
+LOGICAL_HEBREW_NAME = "windows-1255"
+
+class HebrewProber(CharSetProber):
+    def __init__(self):
+        CharSetProber.__init__(self)
+        self._mLogicalProber = None
+        self._mVisualProber = None
+        self.reset()
+
+    def reset(self):
+        self._mFinalCharLogicalScore = 0
+        self._mFinalCharVisualScore = 0
+        # The two last characters seen in the previous buffer,
+        # mPrev and mBeforePrev are initialized to space in order to simulate a word 
+        # delimiter at the beginning of the data
+        self._mPrev = ' '
+        self._mBeforePrev = ' '
+        # These probers are owned by the group prober.
+        
+    def set_model_probers(self, logicalProber, visualProber):
+        self._mLogicalProber = logicalProber
+        self._mVisualProber = visualProber
+
+    def is_final(self, c):
+        return c in [FINAL_KAF, FINAL_MEM, FINAL_NUN, FINAL_PE, FINAL_TSADI]
+
+    def is_non_final(self, c):
+        # The normal Tsadi is not a good Non-Final letter due to words like 
+        # 'lechotet' (to chat) containing an apostrophe after the tsadi. This 
+        # apostrophe is converted to a space in FilterWithoutEnglishLetters causing 
+        # the Non-Final tsadi to appear at an end of a word even though this is not 
+        # the case in the original text.
+        # The letters Pe and Kaf rarely display a related behavior of not being a 
+        # good Non-Final letter. Words like 'Pop', 'Winamp' and 'Mubarak' for 
+        # example legally end with a Non-Final Pe or Kaf. However, the benefit of 
+        # these letters as Non-Final letters outweighs the damage since these words 
+        # are quite rare.
+        return c in [NORMAL_KAF, NORMAL_MEM, NORMAL_NUN, NORMAL_PE]
+    
+    def feed(self, aBuf):
+        # Final letter analysis for logical-visual decision.
+        # Look for evidence that the received buffer is either logical Hebrew or 
+        # visual Hebrew.
+        # The following cases are checked:
+        # 1) A word longer than 1 letter, ending with a final letter. This is an 
+        #    indication that the text is laid out "naturally" since the final letter 
+        #    really appears at the end. +1 for logical score.
+        # 2) A word longer than 1 letter, ending with a Non-Final letter. In normal
+        #    Hebrew, words ending with Kaf, Mem, Nun, Pe or Tsadi, should not end with
+        #    the Non-Final form of that letter. Exceptions to this rule are mentioned
+        #    above in isNonFinal(). This is an indication that the text is laid out
+        #    backwards. +1 for visual score
+        # 3) A word longer than 1 letter, starting with a final letter. Final letters 
+        #    should not appear at the beginning of a word. This is an indication that 
+        #    the text is laid out backwards. +1 for visual score.
+        # 
+        # The visual score and logical score are accumulated throughout the text and 
+        # are finally checked against each other in GetCharSetName().
+        # No checking for final letters in the middle of words is done since that case
+        # is not an indication for either Logical or Visual text.
+        # 
+        # We automatically filter out all 7-bit characters (replace them with spaces)
+        # so the word boundary detection works properly. [MAP]
+
+        if self.get_state() == constants.eNotMe:
+            # Both model probers say it's not them. No reason to continue.
+            return constants.eNotMe
+
+        aBuf = self.filter_high_bit_only(aBuf)
+        
+        for cur in aBuf:
+            if cur == ' ':
+                # We stand on a space - a word just ended
+                if self._mBeforePrev != ' ':
+                    # next-to-last char was not a space so self._mPrev is not a 1 letter word
+                    if self.is_final(self._mPrev):
+                        # case (1) [-2:not space][-1:final letter][cur:space]
+                        self._mFinalCharLogicalScore += 1
+                    elif self.is_non_final(self._mPrev):
+                        # case (2) [-2:not space][-1:Non-Final letter][cur:space]
+                        self._mFinalCharVisualScore += 1
+            else:
+                # Not standing on a space
+                if (self._mBeforePrev == ' ') and (self.is_final(self._mPrev)) and (cur != ' '):
+                    # case (3) [-2:space][-1:final letter][cur:not space]
+                    self._mFinalCharVisualScore += 1
+            self._mBeforePrev = self._mPrev
+            self._mPrev = cur
+
+        # Forever detecting, till the end or until both model probers return eNotMe (handled above)
+        return constants.eDetecting
+
+    def get_charset_name(self):
+        # Make the decision: is it Logical or Visual?
+        # If the final letter score distance is dominant enough, rely on it.
+        finalsub = self._mFinalCharLogicalScore - self._mFinalCharVisualScore
+        if finalsub >= MIN_FINAL_CHAR_DISTANCE:
+            return LOGICAL_HEBREW_NAME
+        if finalsub <= -MIN_FINAL_CHAR_DISTANCE:
+            return VISUAL_HEBREW_NAME
+
+        # It's not dominant enough, try to rely on the model scores instead.
+        modelsub = self._mLogicalProber.get_confidence() - self._mVisualProber.get_confidence()
+        if modelsub > MIN_MODEL_DISTANCE:
+            return LOGICAL_HEBREW_NAME
+        if modelsub < -MIN_MODEL_DISTANCE:
+            return VISUAL_HEBREW_NAME
+
+        # Still no good, back to final letter distance, maybe it'll save the day.
+        if finalsub < 0.0:
+            return VISUAL_HEBREW_NAME
+
+        # (finalsub > 0 - Logical) or (don't know what to do) default to Logical.
+        return LOGICAL_HEBREW_NAME
+
+    def get_state(self):
+        # Remain active as long as any of the model probers are active.
+        if (self._mLogicalProber.get_state() == constants.eNotMe) and \
+           (self._mVisualProber.get_state() == constants.eNotMe):
+            return constants.eNotMe
+        return constants.eDetecting
--- a/subsdownloader2/src/SourceCode/chardet/__init__.py
+++ b/subsdownloader2/src/SourceCode/chardet/__init__.py
@@ -1,26 +1,26 @@
-######################## BEGIN LICENSE BLOCK ########################
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-__version__ = "2.0.1"
-
-def detect(aBuf):
-    import universaldetector
-    u = universaldetector.UniversalDetector()
-    u.reset()
-    u.feed(aBuf)
-    u.close()
-    return u.result
+######################## BEGIN LICENSE BLOCK ########################
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+__version__ = "2.0.2"
+
+def detect(aBuf):
+    from . import universaldetector
+    u = universaldetector.UniversalDetector()
+    u.reset()
+    u.feed(aBuf)
+    u.close()
+    return u.result
--- a/subsdownloader2/src/SourceCode/chardet/jpcntx.py
+++ b/subsdownloader2/src/SourceCode/chardet/jpcntx.py
@@ -1,210 +1,210 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants
-
-NUM_OF_CATEGORY = 6
-DONT_KNOW = -1
-ENOUGH_REL_THRESHOLD = 100
-MAX_REL_THRESHOLD = 1000
-MINIMUM_DATA_THRESHOLD = 4
-
-# This is hiragana 2-char sequence table, the number in each cell represents its frequency category
-jp2CharContext = ( \
-(0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1),
-(2,4,0,4,0,3,0,4,0,3,4,4,4,2,4,3,3,4,3,2,3,3,4,2,3,3,3,2,4,1,4,3,3,1,5,4,3,4,3,4,3,5,3,0,3,5,4,2,0,3,1,0,3,3,0,3,3,0,1,1,0,4,3,0,3,3,0,4,0,2,0,3,5,5,5,5,4,0,4,1,0,3,4),
-(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2),
-(0,4,0,5,0,5,0,4,0,4,5,4,4,3,5,3,5,1,5,3,4,3,4,4,3,4,3,3,4,3,5,4,4,3,5,5,3,5,5,5,3,5,5,3,4,5,5,3,1,3,2,0,3,4,0,4,2,0,4,2,1,5,3,2,3,5,0,4,0,2,0,5,4,4,5,4,5,0,4,0,0,4,4),
-(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
-(0,3,0,4,0,3,0,3,0,4,5,4,3,3,3,3,4,3,5,4,4,3,5,4,4,3,4,3,4,4,4,4,5,3,4,4,3,4,5,5,4,5,5,1,4,5,4,3,0,3,3,1,3,3,0,4,4,0,3,3,1,5,3,3,3,5,0,4,0,3,0,4,4,3,4,3,3,0,4,1,1,3,4),
-(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
-(0,4,0,3,0,3,0,4,0,3,4,4,3,2,2,1,2,1,3,1,3,3,3,3,3,4,3,1,3,3,5,3,3,0,4,3,0,5,4,3,3,5,4,4,3,4,4,5,0,1,2,0,1,2,0,2,2,0,1,0,0,5,2,2,1,4,0,3,0,1,0,4,4,3,5,4,3,0,2,1,0,4,3),
-(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
-(0,3,0,5,0,4,0,2,1,4,4,2,4,1,4,2,4,2,4,3,3,3,4,3,3,3,3,1,4,2,3,3,3,1,4,4,1,1,1,4,3,3,2,0,2,4,3,2,0,3,3,0,3,1,1,0,0,0,3,3,0,4,2,2,3,4,0,4,0,3,0,4,4,5,3,4,4,0,3,0,0,1,4),
-(1,4,0,4,0,4,0,4,0,3,5,4,4,3,4,3,5,4,3,3,4,3,5,4,4,4,4,3,4,2,4,3,3,1,5,4,3,2,4,5,4,5,5,4,4,5,4,4,0,3,2,2,3,3,0,4,3,1,3,2,1,4,3,3,4,5,0,3,0,2,0,4,5,5,4,5,4,0,4,0,0,5,4),
-(0,5,0,5,0,4,0,3,0,4,4,3,4,3,3,3,4,0,4,4,4,3,4,3,4,3,3,1,4,2,4,3,4,0,5,4,1,4,5,4,4,5,3,2,4,3,4,3,2,4,1,3,3,3,2,3,2,0,4,3,3,4,3,3,3,4,0,4,0,3,0,4,5,4,4,4,3,0,4,1,0,1,3),
-(0,3,1,4,0,3,0,2,0,3,4,4,3,1,4,2,3,3,4,3,4,3,4,3,4,4,3,2,3,1,5,4,4,1,4,4,3,5,4,4,3,5,5,4,3,4,4,3,1,2,3,1,2,2,0,3,2,0,3,1,0,5,3,3,3,4,3,3,3,3,4,4,4,4,5,4,2,0,3,3,2,4,3),
-(0,2,0,3,0,1,0,1,0,0,3,2,0,0,2,0,1,0,2,1,3,3,3,1,2,3,1,0,1,0,4,2,1,1,3,3,0,4,3,3,1,4,3,3,0,3,3,2,0,0,0,0,1,0,0,2,0,0,0,0,0,4,1,0,2,3,2,2,2,1,3,3,3,4,4,3,2,0,3,1,0,3,3),
-(0,4,0,4,0,3,0,3,0,4,4,4,3,3,3,3,3,3,4,3,4,2,4,3,4,3,3,2,4,3,4,5,4,1,4,5,3,5,4,5,3,5,4,0,3,5,5,3,1,3,3,2,2,3,0,3,4,1,3,3,2,4,3,3,3,4,0,4,0,3,0,4,5,4,4,5,3,0,4,1,0,3,4),
-(0,2,0,3,0,3,0,0,0,2,2,2,1,0,1,0,0,0,3,0,3,0,3,0,1,3,1,0,3,1,3,3,3,1,3,3,3,0,1,3,1,3,4,0,0,3,1,1,0,3,2,0,0,0,0,1,3,0,1,0,0,3,3,2,0,3,0,0,0,0,0,3,4,3,4,3,3,0,3,0,0,2,3),
-(2,3,0,3,0,2,0,1,0,3,3,4,3,1,3,1,1,1,3,1,4,3,4,3,3,3,0,0,3,1,5,4,3,1,4,3,2,5,5,4,4,4,4,3,3,4,4,4,0,2,1,1,3,2,0,1,2,0,0,1,0,4,1,3,3,3,0,3,0,1,0,4,4,4,5,5,3,0,2,0,0,4,4),
-(0,2,0,1,0,3,1,3,0,2,3,3,3,0,3,1,0,0,3,0,3,2,3,1,3,2,1,1,0,0,4,2,1,0,2,3,1,4,3,2,0,4,4,3,1,3,1,3,0,1,0,0,1,0,0,0,1,0,0,0,0,4,1,1,1,2,0,3,0,0,0,3,4,2,4,3,2,0,1,0,0,3,3),
-(0,1,0,4,0,5,0,4,0,2,4,4,2,3,3,2,3,3,5,3,3,3,4,3,4,2,3,0,4,3,3,3,4,1,4,3,2,1,5,5,3,4,5,1,3,5,4,2,0,3,3,0,1,3,0,4,2,0,1,3,1,4,3,3,3,3,0,3,0,1,0,3,4,4,4,5,5,0,3,0,1,4,5),
-(0,2,0,3,0,3,0,0,0,2,3,1,3,0,4,0,1,1,3,0,3,4,3,2,3,1,0,3,3,2,3,1,3,0,2,3,0,2,1,4,1,2,2,0,0,3,3,0,0,2,0,0,0,1,0,0,0,0,2,2,0,3,2,1,3,3,0,2,0,2,0,0,3,3,1,2,4,0,3,0,2,2,3),
-(2,4,0,5,0,4,0,4,0,2,4,4,4,3,4,3,3,3,1,2,4,3,4,3,4,4,5,0,3,3,3,3,2,0,4,3,1,4,3,4,1,4,4,3,3,4,4,3,1,2,3,0,4,2,0,4,1,0,3,3,0,4,3,3,3,4,0,4,0,2,0,3,5,3,4,5,2,0,3,0,0,4,5),
-(0,3,0,4,0,1,0,1,0,1,3,2,2,1,3,0,3,0,2,0,2,0,3,0,2,0,0,0,1,0,1,1,0,0,3,1,0,0,0,4,0,3,1,0,2,1,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,2,2,3,1,0,3,0,0,0,1,4,4,4,3,0,0,4,0,0,1,4),
-(1,4,1,5,0,3,0,3,0,4,5,4,4,3,5,3,3,4,4,3,4,1,3,3,3,3,2,1,4,1,5,4,3,1,4,4,3,5,4,4,3,5,4,3,3,4,4,4,0,3,3,1,2,3,0,3,1,0,3,3,0,5,4,4,4,4,4,4,3,3,5,4,4,3,3,5,4,0,3,2,0,4,4),
-(0,2,0,3,0,1,0,0,0,1,3,3,3,2,4,1,3,0,3,1,3,0,2,2,1,1,0,0,2,0,4,3,1,0,4,3,0,4,4,4,1,4,3,1,1,3,3,1,0,2,0,0,1,3,0,0,0,0,2,0,0,4,3,2,4,3,5,4,3,3,3,4,3,3,4,3,3,0,2,1,0,3,3),
-(0,2,0,4,0,3,0,2,0,2,5,5,3,4,4,4,4,1,4,3,3,0,4,3,4,3,1,3,3,2,4,3,0,3,4,3,0,3,4,4,2,4,4,0,4,5,3,3,2,2,1,1,1,2,0,1,5,0,3,3,2,4,3,3,3,4,0,3,0,2,0,4,4,3,5,5,0,0,3,0,2,3,3),
-(0,3,0,4,0,3,0,1,0,3,4,3,3,1,3,3,3,0,3,1,3,0,4,3,3,1,1,0,3,0,3,3,0,0,4,4,0,1,5,4,3,3,5,0,3,3,4,3,0,2,0,1,1,1,0,1,3,0,1,2,1,3,3,2,3,3,0,3,0,1,0,1,3,3,4,4,1,0,1,2,2,1,3),
-(0,1,0,4,0,4,0,3,0,1,3,3,3,2,3,1,1,0,3,0,3,3,4,3,2,4,2,0,1,0,4,3,2,0,4,3,0,5,3,3,2,4,4,4,3,3,3,4,0,1,3,0,0,1,0,0,1,0,0,0,0,4,2,3,3,3,0,3,0,0,0,4,4,4,5,3,2,0,3,3,0,3,5),
-(0,2,0,3,0,0,0,3,0,1,3,0,2,0,0,0,1,0,3,1,1,3,3,0,0,3,0,0,3,0,2,3,1,0,3,1,0,3,3,2,0,4,2,2,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,1,0,1,0,0,0,1,3,1,2,0,0,0,1,0,0,1,4),
-(0,3,0,3,0,5,0,1,0,2,4,3,1,3,3,2,1,1,5,2,1,0,5,1,2,0,0,0,3,3,2,2,3,2,4,3,0,0,3,3,1,3,3,0,2,5,3,4,0,3,3,0,1,2,0,2,2,0,3,2,0,2,2,3,3,3,0,2,0,1,0,3,4,4,2,5,4,0,3,0,0,3,5),
-(0,3,0,3,0,3,0,1,0,3,3,3,3,0,3,0,2,0,2,1,1,0,2,0,1,0,0,0,2,1,0,0,1,0,3,2,0,0,3,3,1,2,3,1,0,3,3,0,0,1,0,0,0,0,0,2,0,0,0,0,0,2,3,1,2,3,0,3,0,1,0,3,2,1,0,4,3,0,1,1,0,3,3),
-(0,4,0,5,0,3,0,3,0,4,5,5,4,3,5,3,4,3,5,3,3,2,5,3,4,4,4,3,4,3,4,5,5,3,4,4,3,4,4,5,4,4,4,3,4,5,5,4,2,3,4,2,3,4,0,3,3,1,4,3,2,4,3,3,5,5,0,3,0,3,0,5,5,5,5,4,4,0,4,0,1,4,4),
-(0,4,0,4,0,3,0,3,0,3,5,4,4,2,3,2,5,1,3,2,5,1,4,2,3,2,3,3,4,3,3,3,3,2,5,4,1,3,3,5,3,4,4,0,4,4,3,1,1,3,1,0,2,3,0,2,3,0,3,0,0,4,3,1,3,4,0,3,0,2,0,4,4,4,3,4,5,0,4,0,0,3,4),
-(0,3,0,3,0,3,1,2,0,3,4,4,3,3,3,0,2,2,4,3,3,1,3,3,3,1,1,0,3,1,4,3,2,3,4,4,2,4,4,4,3,4,4,3,2,4,4,3,1,3,3,1,3,3,0,4,1,0,2,2,1,4,3,2,3,3,5,4,3,3,5,4,4,3,3,0,4,0,3,2,2,4,4),
-(0,2,0,1,0,0,0,0,0,1,2,1,3,0,0,0,0,0,2,0,1,2,1,0,0,1,0,0,0,0,3,0,0,1,0,1,1,3,1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,2,2,0,3,4,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1),
-(0,1,0,0,0,1,0,0,0,0,4,0,4,1,4,0,3,0,4,0,3,0,4,0,3,0,3,0,4,1,5,1,4,0,0,3,0,5,0,5,2,0,1,0,0,0,2,1,4,0,1,3,0,0,3,0,0,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0),
-(1,4,0,5,0,3,0,2,0,3,5,4,4,3,4,3,5,3,4,3,3,0,4,3,3,3,3,3,3,2,4,4,3,1,3,4,4,5,4,4,3,4,4,1,3,5,4,3,3,3,1,2,2,3,3,1,3,1,3,3,3,5,3,3,4,5,0,3,0,3,0,3,4,3,4,4,3,0,3,0,2,4,3),
-(0,1,0,4,0,0,0,0,0,1,4,0,4,1,4,2,4,0,3,0,1,0,1,0,0,0,0,0,2,0,3,1,1,1,0,3,0,0,0,1,2,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,3,0,0,0,0,3,2,0,2,2,0,1,0,0,0,2,3,2,3,3,0,0,0,0,2,1,0),
-(0,5,1,5,0,3,0,3,0,5,4,4,5,1,5,3,3,0,4,3,4,3,5,3,4,3,3,2,4,3,4,3,3,0,3,3,1,4,4,3,4,4,4,3,4,5,5,3,2,3,1,1,3,3,1,3,1,1,3,3,2,4,5,3,3,5,0,4,0,3,0,4,4,3,5,3,3,0,3,4,0,4,3),
-(0,5,0,5,0,3,0,2,0,4,4,3,5,2,4,3,3,3,4,4,4,3,5,3,5,3,3,1,4,0,4,3,3,0,3,3,0,4,4,4,4,5,4,3,3,5,5,3,2,3,1,2,3,2,0,1,0,0,3,2,2,4,4,3,1,5,0,4,0,3,0,4,3,1,3,2,1,0,3,3,0,3,3),
-(0,4,0,5,0,5,0,4,0,4,5,5,5,3,4,3,3,2,5,4,4,3,5,3,5,3,4,0,4,3,4,4,3,2,4,4,3,4,5,4,4,5,5,0,3,5,5,4,1,3,3,2,3,3,1,3,1,0,4,3,1,4,4,3,4,5,0,4,0,2,0,4,3,4,4,3,3,0,4,0,0,5,5),
-(0,4,0,4,0,5,0,1,1,3,3,4,4,3,4,1,3,0,5,1,3,0,3,1,3,1,1,0,3,0,3,3,4,0,4,3,0,4,4,4,3,4,4,0,3,5,4,1,0,3,0,0,2,3,0,3,1,0,3,1,0,3,2,1,3,5,0,3,0,1,0,3,2,3,3,4,4,0,2,2,0,4,4),
-(2,4,0,5,0,4,0,3,0,4,5,5,4,3,5,3,5,3,5,3,5,2,5,3,4,3,3,4,3,4,5,3,2,1,5,4,3,2,3,4,5,3,4,1,2,5,4,3,0,3,3,0,3,2,0,2,3,0,4,1,0,3,4,3,3,5,0,3,0,1,0,4,5,5,5,4,3,0,4,2,0,3,5),
-(0,5,0,4,0,4,0,2,0,5,4,3,4,3,4,3,3,3,4,3,4,2,5,3,5,3,4,1,4,3,4,4,4,0,3,5,0,4,4,4,4,5,3,1,3,4,5,3,3,3,3,3,3,3,0,2,2,0,3,3,2,4,3,3,3,5,3,4,1,3,3,5,3,2,0,0,0,0,4,3,1,3,3),
-(0,1,0,3,0,3,0,1,0,1,3,3,3,2,3,3,3,0,3,0,0,0,3,1,3,0,0,0,2,2,2,3,0,0,3,2,0,1,2,4,1,3,3,0,0,3,3,3,0,1,0,0,2,1,0,0,3,0,3,1,0,3,0,0,1,3,0,2,0,1,0,3,3,1,3,3,0,0,1,1,0,3,3),
-(0,2,0,3,0,2,1,4,0,2,2,3,1,1,3,1,1,0,2,0,3,1,2,3,1,3,0,0,1,0,4,3,2,3,3,3,1,4,2,3,3,3,3,1,0,3,1,4,0,1,1,0,1,2,0,1,1,0,1,1,0,3,1,3,2,2,0,1,0,0,0,2,3,3,3,1,0,0,0,0,0,2,3),
-(0,5,0,4,0,5,0,2,0,4,5,5,3,3,4,3,3,1,5,4,4,2,4,4,4,3,4,2,4,3,5,5,4,3,3,4,3,3,5,5,4,5,5,1,3,4,5,3,1,4,3,1,3,3,0,3,3,1,4,3,1,4,5,3,3,5,0,4,0,3,0,5,3,3,1,4,3,0,4,0,1,5,3),
-(0,5,0,5,0,4,0,2,0,4,4,3,4,3,3,3,3,3,5,4,4,4,4,4,4,5,3,3,5,2,4,4,4,3,4,4,3,3,4,4,5,5,3,3,4,3,4,3,3,4,3,3,3,3,1,2,2,1,4,3,3,5,4,4,3,4,0,4,0,3,0,4,4,4,4,4,1,0,4,2,0,2,4),
-(0,4,0,4,0,3,0,1,0,3,5,2,3,0,3,0,2,1,4,2,3,3,4,1,4,3,3,2,4,1,3,3,3,0,3,3,0,0,3,3,3,5,3,3,3,3,3,2,0,2,0,0,2,0,0,2,0,0,1,0,0,3,1,2,2,3,0,3,0,2,0,4,4,3,3,4,1,0,3,0,0,2,4),
-(0,0,0,4,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,1,0,2,0,1,0,0,0,0,0,3,1,3,0,3,2,0,0,0,1,0,3,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,2,0,0,0,0,0,0,2),
-(0,2,1,3,0,2,0,2,0,3,3,3,3,1,3,1,3,3,3,3,3,3,4,2,2,1,2,1,4,0,4,3,1,3,3,3,2,4,3,5,4,3,3,3,3,3,3,3,0,1,3,0,2,0,0,1,0,0,1,0,0,4,2,0,2,3,0,3,3,0,3,3,4,2,3,1,4,0,1,2,0,2,3),
-(0,3,0,3,0,1,0,3,0,2,3,3,3,0,3,1,2,0,3,3,2,3,3,2,3,2,3,1,3,0,4,3,2,0,3,3,1,4,3,3,2,3,4,3,1,3,3,1,1,0,1,1,0,1,0,1,0,1,0,0,0,4,1,1,0,3,0,3,1,0,2,3,3,3,3,3,1,0,0,2,0,3,3),
-(0,0,0,0,0,0,0,0,0,0,3,0,2,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,3,0,3,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,2,3,0,0,0,0,0,0,0,0,3),
-(0,2,0,3,1,3,0,3,0,2,3,3,3,1,3,1,3,1,3,1,3,3,3,1,3,0,2,3,1,1,4,3,3,2,3,3,1,2,2,4,1,3,3,0,1,4,2,3,0,1,3,0,3,0,0,1,3,0,2,0,0,3,3,2,1,3,0,3,0,2,0,3,4,4,4,3,1,0,3,0,0,3,3),
-(0,2,0,1,0,2,0,0,0,1,3,2,2,1,3,0,1,1,3,0,3,2,3,1,2,0,2,0,1,1,3,3,3,0,3,3,1,1,2,3,2,3,3,1,2,3,2,0,0,1,0,0,0,0,0,0,3,0,1,0,0,2,1,2,1,3,0,3,0,0,0,3,4,4,4,3,2,0,2,0,0,2,4),
-(0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3),
-(0,3,0,3,0,2,0,3,0,3,3,3,2,3,2,2,2,0,3,1,3,3,3,2,3,3,0,0,3,0,3,2,2,0,2,3,1,4,3,4,3,3,2,3,1,5,4,4,0,3,1,2,1,3,0,3,1,1,2,0,2,3,1,3,1,3,0,3,0,1,0,3,3,4,4,2,1,0,2,1,0,2,4),
-(0,1,0,3,0,1,0,2,0,1,4,2,5,1,4,0,2,0,2,1,3,1,4,0,2,1,0,0,2,1,4,1,1,0,3,3,0,5,1,3,2,3,3,1,0,3,2,3,0,1,0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,3,0,2,0,1,0,3,3,3,4,3,3,0,0,0,0,2,3),
-(0,0,0,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,0,0,3),
-(0,1,0,3,0,4,0,3,0,2,4,3,1,0,3,2,2,1,3,1,2,2,3,1,1,1,2,1,3,0,1,2,0,1,3,2,1,3,0,5,5,1,0,0,1,3,2,1,0,3,0,0,1,0,0,0,0,0,3,4,0,1,1,1,3,2,0,2,0,1,0,2,3,3,1,2,3,0,1,0,1,0,4),
-(0,0,0,1,0,3,0,3,0,2,2,1,0,0,4,0,3,0,3,1,3,0,3,0,3,0,1,0,3,0,3,1,3,0,3,3,0,0,1,2,1,1,1,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,2,2,1,2,0,0,2,0,0,0,0,2,3,3,3,3,0,0,0,0,1,4),
-(0,0,0,3,0,3,0,0,0,0,3,1,1,0,3,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,3,0,2,0,2,3,0,0,2,2,3,1,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,2,3),
-(2,4,0,5,0,5,0,4,0,3,4,3,3,3,4,3,3,3,4,3,4,4,5,4,5,5,5,2,3,0,5,5,4,1,5,4,3,1,5,4,3,4,4,3,3,4,3,3,0,3,2,0,2,3,0,3,0,0,3,3,0,5,3,2,3,3,0,3,0,3,0,3,4,5,4,5,3,0,4,3,0,3,4),
-(0,3,0,3,0,3,0,3,0,3,3,4,3,2,3,2,3,0,4,3,3,3,3,3,3,3,3,0,3,2,4,3,3,1,3,4,3,4,4,4,3,4,4,3,2,4,4,1,0,2,0,0,1,1,0,2,0,0,3,1,0,5,3,2,1,3,0,3,0,1,2,4,3,2,4,3,3,0,3,2,0,4,4),
-(0,3,0,3,0,1,0,0,0,1,4,3,3,2,3,1,3,1,4,2,3,2,4,2,3,4,3,0,2,2,3,3,3,0,3,3,3,0,3,4,1,3,3,0,3,4,3,3,0,1,1,0,1,0,0,0,4,0,3,0,0,3,1,2,1,3,0,4,0,1,0,4,3,3,4,3,3,0,2,0,0,3,3),
-(0,3,0,4,0,1,0,3,0,3,4,3,3,0,3,3,3,1,3,1,3,3,4,3,3,3,0,0,3,1,5,3,3,1,3,3,2,5,4,3,3,4,5,3,2,5,3,4,0,1,0,0,0,0,0,2,0,0,1,1,0,4,2,2,1,3,0,3,0,2,0,4,4,3,5,3,2,0,1,1,0,3,4),
-(0,5,0,4,0,5,0,2,0,4,4,3,3,2,3,3,3,1,4,3,4,1,5,3,4,3,4,0,4,2,4,3,4,1,5,4,0,4,4,4,4,5,4,1,3,5,4,2,1,4,1,1,3,2,0,3,1,0,3,2,1,4,3,3,3,4,0,4,0,3,0,4,4,4,3,3,3,0,4,2,0,3,4),
-(1,4,0,4,0,3,0,1,0,3,3,3,1,1,3,3,2,2,3,3,1,0,3,2,2,1,2,0,3,1,2,1,2,0,3,2,0,2,2,3,3,4,3,0,3,3,1,2,0,1,1,3,1,2,0,0,3,0,1,1,0,3,2,2,3,3,0,3,0,0,0,2,3,3,4,3,3,0,1,0,0,1,4),
-(0,4,0,4,0,4,0,0,0,3,4,4,3,1,4,2,3,2,3,3,3,1,4,3,4,0,3,0,4,2,3,3,2,2,5,4,2,1,3,4,3,4,3,1,3,3,4,2,0,2,1,0,3,3,0,0,2,0,3,1,0,4,4,3,4,3,0,4,0,1,0,2,4,4,4,4,4,0,3,2,0,3,3),
-(0,0,0,1,0,4,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,3,2,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2),
-(0,2,0,3,0,4,0,4,0,1,3,3,3,0,4,0,2,1,2,1,1,1,2,0,3,1,1,0,1,0,3,1,0,0,3,3,2,0,1,1,0,0,0,0,0,1,0,2,0,2,2,0,3,1,0,0,1,0,1,1,0,1,2,0,3,0,0,0,0,1,0,0,3,3,4,3,1,0,1,0,3,0,2),
-(0,0,0,3,0,5,0,0,0,0,1,0,2,0,3,1,0,1,3,0,0,0,2,0,0,0,1,0,0,0,1,1,0,0,4,0,0,0,2,3,0,1,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,3),
-(0,2,0,5,0,5,0,1,0,2,4,3,3,2,5,1,3,2,3,3,3,0,4,1,2,0,3,0,4,0,2,2,1,1,5,3,0,0,1,4,2,3,2,0,3,3,3,2,0,2,4,1,1,2,0,1,1,0,3,1,0,1,3,1,2,3,0,2,0,0,0,1,3,5,4,4,4,0,3,0,0,1,3),
-(0,4,0,5,0,4,0,4,0,4,5,4,3,3,4,3,3,3,4,3,4,4,5,3,4,5,4,2,4,2,3,4,3,1,4,4,1,3,5,4,4,5,5,4,4,5,5,5,2,3,3,1,4,3,1,3,3,0,3,3,1,4,3,4,4,4,0,3,0,4,0,3,3,4,4,5,0,0,4,3,0,4,5),
-(0,4,0,4,0,3,0,3,0,3,4,4,4,3,3,2,4,3,4,3,4,3,5,3,4,3,2,1,4,2,4,4,3,1,3,4,2,4,5,5,3,4,5,4,1,5,4,3,0,3,2,2,3,2,1,3,1,0,3,3,3,5,3,3,3,5,4,4,2,3,3,4,3,3,3,2,1,0,3,2,1,4,3),
-(0,4,0,5,0,4,0,3,0,3,5,5,3,2,4,3,4,0,5,4,4,1,4,4,4,3,3,3,4,3,5,5,2,3,3,4,1,2,5,5,3,5,5,2,3,5,5,4,0,3,2,0,3,3,1,1,5,1,4,1,0,4,3,2,3,5,0,4,0,3,0,5,4,3,4,3,0,0,4,1,0,4,4),
-(1,3,0,4,0,2,0,2,0,2,5,5,3,3,3,3,3,0,4,2,3,4,4,4,3,4,0,0,3,4,5,4,3,3,3,3,2,5,5,4,5,5,5,4,3,5,5,5,1,3,1,0,1,0,0,3,2,0,4,2,0,5,2,3,2,4,1,3,0,3,0,4,5,4,5,4,3,0,4,2,0,5,4),
-(0,3,0,4,0,5,0,3,0,3,4,4,3,2,3,2,3,3,3,3,3,2,4,3,3,2,2,0,3,3,3,3,3,1,3,3,3,0,4,4,3,4,4,1,1,4,4,2,0,3,1,0,1,1,0,4,1,0,2,3,1,3,3,1,3,4,0,3,0,1,0,3,1,3,0,0,1,0,2,0,0,4,4),
-(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
-(0,3,0,3,0,2,0,3,0,1,5,4,3,3,3,1,4,2,1,2,3,4,4,2,4,4,5,0,3,1,4,3,4,0,4,3,3,3,2,3,2,5,3,4,3,2,2,3,0,0,3,0,2,1,0,1,2,0,0,0,0,2,1,1,3,1,0,2,0,4,0,3,4,4,4,5,2,0,2,0,0,1,3),
-(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,4,2,1,1,0,1,0,3,2,0,0,3,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,2,0,0,0,1,4,0,4,2,1,0,0,0,0,0,1),
-(0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,3,1,0,0,0,2,0,2,1,0,0,1,2,1,0,1,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,2),
-(0,4,0,4,0,4,0,3,0,4,4,3,4,2,4,3,2,0,4,4,4,3,5,3,5,3,3,2,4,2,4,3,4,3,1,4,0,2,3,4,4,4,3,3,3,4,4,4,3,4,1,3,4,3,2,1,2,1,3,3,3,4,4,3,3,5,0,4,0,3,0,4,3,3,3,2,1,0,3,0,0,3,3),
-(0,4,0,3,0,3,0,3,0,3,5,5,3,3,3,3,4,3,4,3,3,3,4,4,4,3,3,3,3,4,3,5,3,3,1,3,2,4,5,5,5,5,4,3,4,5,5,3,2,2,3,3,3,3,2,3,3,1,2,3,2,4,3,3,3,4,0,4,0,2,0,4,3,2,2,1,2,0,3,0,0,4,1),
-)
-
-class JapaneseContextAnalysis:
-    def __init__(self):
-        self.reset()
-        
-    def reset(self):
-        self._mTotalRel = 0 # total sequence received
-        self._mRelSample = [0] * NUM_OF_CATEGORY # category counters, each interger counts sequence in its category
-        self._mNeedToSkipCharNum = 0 # if last byte in current buffer is not the last byte of a character, we need to know how many bytes to skip in next buffer
-        self._mLastCharOrder = -1 # The order of previous char
-        self._mDone = constants.False # If this flag is set to constants.True, detection is done and conclusion has been made
-
-    def feed(self, aBuf, aLen):
-        if self._mDone: return
-        
-        # The buffer we got is byte oriented, and a character may span in more than one
-        # buffers. In case the last one or two byte in last buffer is not complete, we 
-        # record how many byte needed to complete that character and skip these bytes here.
-        # We can choose to record those bytes as well and analyse the character once it 
-        # is complete, but since a character will not make much difference, by simply skipping
-        # this character will simply our logic and improve performance.
-        i = self._mNeedToSkipCharNum
-        while i < aLen:
-            order, charLen = self.get_order(aBuf[i:i+2])
-            i += charLen
-            if i > aLen:
-                self._mNeedToSkipCharNum = i - aLen
-                self._mLastCharOrder = -1
-            else:
-                if (order != -1) and (self._mLastCharOrder != -1):
-                    self._mTotalRel += 1
-                    if self._mTotalRel > MAX_REL_THRESHOLD:
-                        self._mDone = constants.True
-                        break
-                    self._mRelSample[jp2CharContext[self._mLastCharOrder][order]] += 1
-                self._mLastCharOrder = order
-
-    def got_enough_data(self):
-        return self._mTotalRel > ENOUGH_REL_THRESHOLD
-    
-    def get_confidence(self):
-        # This is just one way to calculate confidence. It works well for me.
-        if self._mTotalRel > MINIMUM_DATA_THRESHOLD:
-            return (self._mTotalRel - self._mRelSample[0]) / self._mTotalRel
-        else:
-            return DONT_KNOW
-
-    def get_order(self, aStr):
-        return -1, 1
-        
-class SJISContextAnalysis(JapaneseContextAnalysis):
-    def get_order(self, aStr):
-        if not aStr: return -1, 1
-        # find out current char's byte length
-        if ((aStr[0] >= '\x81') and (aStr[0] <= '\x9F')) or \
-           ((aStr[0] >= '\xE0') and (aStr[0] <= '\xFC')):
-            charLen = 2
-        else:
-            charLen = 1
-
-        # return its order if it is hiragana
-        if len(aStr) > 1:
-            if (aStr[0] == '\202') and \
-               (aStr[1] >= '\x9F') and \
-               (aStr[1] <= '\xF1'):
-                return ord(aStr[1]) - 0x9F, charLen
-
-        return -1, charLen
-
-class EUCJPContextAnalysis(JapaneseContextAnalysis):
-    def get_order(self, aStr):
-        if not aStr: return -1, 1
-        # find out current char's byte length
-        if (aStr[0] == '\x8E') or \
-           ((aStr[0] >= '\xA1') and (aStr[0] <= '\xFE')):
-            charLen = 2
-        elif aStr[0] == '\x8F':
-            charLen = 3
-        else:
-            charLen = 1
-
-        # return its order if it is hiragana
-        if len(aStr) > 1:
-            if (aStr[0] == '\xA4') and \
-               (aStr[1] >= '\xA1') and \
-               (aStr[1] <= '\xF3'):
-                return ord(aStr[1]) - 0xA1, charLen
-
-        return -1, charLen
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+
+NUM_OF_CATEGORY = 6
+DONT_KNOW = -1
+ENOUGH_REL_THRESHOLD = 100
+MAX_REL_THRESHOLD = 1000
+MINIMUM_DATA_THRESHOLD = 4
+
+# This is hiragana 2-char sequence table, the number in each cell represents its frequency category
+jp2CharContext = ( \
+(0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1),
+(2,4,0,4,0,3,0,4,0,3,4,4,4,2,4,3,3,4,3,2,3,3,4,2,3,3,3,2,4,1,4,3,3,1,5,4,3,4,3,4,3,5,3,0,3,5,4,2,0,3,1,0,3,3,0,3,3,0,1,1,0,4,3,0,3,3,0,4,0,2,0,3,5,5,5,5,4,0,4,1,0,3,4),
+(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2),
+(0,4,0,5,0,5,0,4,0,4,5,4,4,3,5,3,5,1,5,3,4,3,4,4,3,4,3,3,4,3,5,4,4,3,5,5,3,5,5,5,3,5,5,3,4,5,5,3,1,3,2,0,3,4,0,4,2,0,4,2,1,5,3,2,3,5,0,4,0,2,0,5,4,4,5,4,5,0,4,0,0,4,4),
+(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
+(0,3,0,4,0,3,0,3,0,4,5,4,3,3,3,3,4,3,5,4,4,3,5,4,4,3,4,3,4,4,4,4,5,3,4,4,3,4,5,5,4,5,5,1,4,5,4,3,0,3,3,1,3,3,0,4,4,0,3,3,1,5,3,3,3,5,0,4,0,3,0,4,4,3,4,3,3,0,4,1,1,3,4),
+(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
+(0,4,0,3,0,3,0,4,0,3,4,4,3,2,2,1,2,1,3,1,3,3,3,3,3,4,3,1,3,3,5,3,3,0,4,3,0,5,4,3,3,5,4,4,3,4,4,5,0,1,2,0,1,2,0,2,2,0,1,0,0,5,2,2,1,4,0,3,0,1,0,4,4,3,5,4,3,0,2,1,0,4,3),
+(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
+(0,3,0,5,0,4,0,2,1,4,4,2,4,1,4,2,4,2,4,3,3,3,4,3,3,3,3,1,4,2,3,3,3,1,4,4,1,1,1,4,3,3,2,0,2,4,3,2,0,3,3,0,3,1,1,0,0,0,3,3,0,4,2,2,3,4,0,4,0,3,0,4,4,5,3,4,4,0,3,0,0,1,4),
+(1,4,0,4,0,4,0,4,0,3,5,4,4,3,4,3,5,4,3,3,4,3,5,4,4,4,4,3,4,2,4,3,3,1,5,4,3,2,4,5,4,5,5,4,4,5,4,4,0,3,2,2,3,3,0,4,3,1,3,2,1,4,3,3,4,5,0,3,0,2,0,4,5,5,4,5,4,0,4,0,0,5,4),
+(0,5,0,5,0,4,0,3,0,4,4,3,4,3,3,3,4,0,4,4,4,3,4,3,4,3,3,1,4,2,4,3,4,0,5,4,1,4,5,4,4,5,3,2,4,3,4,3,2,4,1,3,3,3,2,3,2,0,4,3,3,4,3,3,3,4,0,4,0,3,0,4,5,4,4,4,3,0,4,1,0,1,3),
+(0,3,1,4,0,3,0,2,0,3,4,4,3,1,4,2,3,3,4,3,4,3,4,3,4,4,3,2,3,1,5,4,4,1,4,4,3,5,4,4,3,5,5,4,3,4,4,3,1,2,3,1,2,2,0,3,2,0,3,1,0,5,3,3,3,4,3,3,3,3,4,4,4,4,5,4,2,0,3,3,2,4,3),
+(0,2,0,3,0,1,0,1,0,0,3,2,0,0,2,0,1,0,2,1,3,3,3,1,2,3,1,0,1,0,4,2,1,1,3,3,0,4,3,3,1,4,3,3,0,3,3,2,0,0,0,0,1,0,0,2,0,0,0,0,0,4,1,0,2,3,2,2,2,1,3,3,3,4,4,3,2,0,3,1,0,3,3),
+(0,4,0,4,0,3,0,3,0,4,4,4,3,3,3,3,3,3,4,3,4,2,4,3,4,3,3,2,4,3,4,5,4,1,4,5,3,5,4,5,3,5,4,0,3,5,5,3,1,3,3,2,2,3,0,3,4,1,3,3,2,4,3,3,3,4,0,4,0,3,0,4,5,4,4,5,3,0,4,1,0,3,4),
+(0,2,0,3,0,3,0,0,0,2,2,2,1,0,1,0,0,0,3,0,3,0,3,0,1,3,1,0,3,1,3,3,3,1,3,3,3,0,1,3,1,3,4,0,0,3,1,1,0,3,2,0,0,0,0,1,3,0,1,0,0,3,3,2,0,3,0,0,0,0,0,3,4,3,4,3,3,0,3,0,0,2,3),
+(2,3,0,3,0,2,0,1,0,3,3,4,3,1,3,1,1,1,3,1,4,3,4,3,3,3,0,0,3,1,5,4,3,1,4,3,2,5,5,4,4,4,4,3,3,4,4,4,0,2,1,1,3,2,0,1,2,0,0,1,0,4,1,3,3,3,0,3,0,1,0,4,4,4,5,5,3,0,2,0,0,4,4),
+(0,2,0,1,0,3,1,3,0,2,3,3,3,0,3,1,0,0,3,0,3,2,3,1,3,2,1,1,0,0,4,2,1,0,2,3,1,4,3,2,0,4,4,3,1,3,1,3,0,1,0,0,1,0,0,0,1,0,0,0,0,4,1,1,1,2,0,3,0,0,0,3,4,2,4,3,2,0,1,0,0,3,3),
+(0,1,0,4,0,5,0,4,0,2,4,4,2,3,3,2,3,3,5,3,3,3,4,3,4,2,3,0,4,3,3,3,4,1,4,3,2,1,5,5,3,4,5,1,3,5,4,2,0,3,3,0,1,3,0,4,2,0,1,3,1,4,3,3,3,3,0,3,0,1,0,3,4,4,4,5,5,0,3,0,1,4,5),
+(0,2,0,3,0,3,0,0,0,2,3,1,3,0,4,0,1,1,3,0,3,4,3,2,3,1,0,3,3,2,3,1,3,0,2,3,0,2,1,4,1,2,2,0,0,3,3,0,0,2,0,0,0,1,0,0,0,0,2,2,0,3,2,1,3,3,0,2,0,2,0,0,3,3,1,2,4,0,3,0,2,2,3),
+(2,4,0,5,0,4,0,4,0,2,4,4,4,3,4,3,3,3,1,2,4,3,4,3,4,4,5,0,3,3,3,3,2,0,4,3,1,4,3,4,1,4,4,3,3,4,4,3,1,2,3,0,4,2,0,4,1,0,3,3,0,4,3,3,3,4,0,4,0,2,0,3,5,3,4,5,2,0,3,0,0,4,5),
+(0,3,0,4,0,1,0,1,0,1,3,2,2,1,3,0,3,0,2,0,2,0,3,0,2,0,0,0,1,0,1,1,0,0,3,1,0,0,0,4,0,3,1,0,2,1,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,2,2,3,1,0,3,0,0,0,1,4,4,4,3,0,0,4,0,0,1,4),
+(1,4,1,5,0,3,0,3,0,4,5,4,4,3,5,3,3,4,4,3,4,1,3,3,3,3,2,1,4,1,5,4,3,1,4,4,3,5,4,4,3,5,4,3,3,4,4,4,0,3,3,1,2,3,0,3,1,0,3,3,0,5,4,4,4,4,4,4,3,3,5,4,4,3,3,5,4,0,3,2,0,4,4),
+(0,2,0,3,0,1,0,0,0,1,3,3,3,2,4,1,3,0,3,1,3,0,2,2,1,1,0,0,2,0,4,3,1,0,4,3,0,4,4,4,1,4,3,1,1,3,3,1,0,2,0,0,1,3,0,0,0,0,2,0,0,4,3,2,4,3,5,4,3,3,3,4,3,3,4,3,3,0,2,1,0,3,3),
+(0,2,0,4,0,3,0,2,0,2,5,5,3,4,4,4,4,1,4,3,3,0,4,3,4,3,1,3,3,2,4,3,0,3,4,3,0,3,4,4,2,4,4,0,4,5,3,3,2,2,1,1,1,2,0,1,5,0,3,3,2,4,3,3,3,4,0,3,0,2,0,4,4,3,5,5,0,0,3,0,2,3,3),
+(0,3,0,4,0,3,0,1,0,3,4,3,3,1,3,3,3,0,3,1,3,0,4,3,3,1,1,0,3,0,3,3,0,0,4,4,0,1,5,4,3,3,5,0,3,3,4,3,0,2,0,1,1,1,0,1,3,0,1,2,1,3,3,2,3,3,0,3,0,1,0,1,3,3,4,4,1,0,1,2,2,1,3),
+(0,1,0,4,0,4,0,3,0,1,3,3,3,2,3,1,1,0,3,0,3,3,4,3,2,4,2,0,1,0,4,3,2,0,4,3,0,5,3,3,2,4,4,4,3,3,3,4,0,1,3,0,0,1,0,0,1,0,0,0,0,4,2,3,3,3,0,3,0,0,0,4,4,4,5,3,2,0,3,3,0,3,5),
+(0,2,0,3,0,0,0,3,0,1,3,0,2,0,0,0,1,0,3,1,1,3,3,0,0,3,0,0,3,0,2,3,1,0,3,1,0,3,3,2,0,4,2,2,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,1,0,1,0,0,0,1,3,1,2,0,0,0,1,0,0,1,4),
+(0,3,0,3,0,5,0,1,0,2,4,3,1,3,3,2,1,1,5,2,1,0,5,1,2,0,0,0,3,3,2,2,3,2,4,3,0,0,3,3,1,3,3,0,2,5,3,4,0,3,3,0,1,2,0,2,2,0,3,2,0,2,2,3,3,3,0,2,0,1,0,3,4,4,2,5,4,0,3,0,0,3,5),
+(0,3,0,3,0,3,0,1,0,3,3,3,3,0,3,0,2,0,2,1,1,0,2,0,1,0,0,0,2,1,0,0,1,0,3,2,0,0,3,3,1,2,3,1,0,3,3,0,0,1,0,0,0,0,0,2,0,0,0,0,0,2,3,1,2,3,0,3,0,1,0,3,2,1,0,4,3,0,1,1,0,3,3),
+(0,4,0,5,0,3,0,3,0,4,5,5,4,3,5,3,4,3,5,3,3,2,5,3,4,4,4,3,4,3,4,5,5,3,4,4,3,4,4,5,4,4,4,3,4,5,5,4,2,3,4,2,3,4,0,3,3,1,4,3,2,4,3,3,5,5,0,3,0,3,0,5,5,5,5,4,4,0,4,0,1,4,4),
+(0,4,0,4,0,3,0,3,0,3,5,4,4,2,3,2,5,1,3,2,5,1,4,2,3,2,3,3,4,3,3,3,3,2,5,4,1,3,3,5,3,4,4,0,4,4,3,1,1,3,1,0,2,3,0,2,3,0,3,0,0,4,3,1,3,4,0,3,0,2,0,4,4,4,3,4,5,0,4,0,0,3,4),
+(0,3,0,3,0,3,1,2,0,3,4,4,3,3,3,0,2,2,4,3,3,1,3,3,3,1,1,0,3,1,4,3,2,3,4,4,2,4,4,4,3,4,4,3,2,4,4,3,1,3,3,1,3,3,0,4,1,0,2,2,1,4,3,2,3,3,5,4,3,3,5,4,4,3,3,0,4,0,3,2,2,4,4),
+(0,2,0,1,0,0,0,0,0,1,2,1,3,0,0,0,0,0,2,0,1,2,1,0,0,1,0,0,0,0,3,0,0,1,0,1,1,3,1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,2,2,0,3,4,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1),
+(0,1,0,0,0,1,0,0,0,0,4,0,4,1,4,0,3,0,4,0,3,0,4,0,3,0,3,0,4,1,5,1,4,0,0,3,0,5,0,5,2,0,1,0,0,0,2,1,4,0,1,3,0,0,3,0,0,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0),
+(1,4,0,5,0,3,0,2,0,3,5,4,4,3,4,3,5,3,4,3,3,0,4,3,3,3,3,3,3,2,4,4,3,1,3,4,4,5,4,4,3,4,4,1,3,5,4,3,3,3,1,2,2,3,3,1,3,1,3,3,3,5,3,3,4,5,0,3,0,3,0,3,4,3,4,4,3,0,3,0,2,4,3),
+(0,1,0,4,0,0,0,0,0,1,4,0,4,1,4,2,4,0,3,0,1,0,1,0,0,0,0,0,2,0,3,1,1,1,0,3,0,0,0,1,2,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,3,0,0,0,0,3,2,0,2,2,0,1,0,0,0,2,3,2,3,3,0,0,0,0,2,1,0),
+(0,5,1,5,0,3,0,3,0,5,4,4,5,1,5,3,3,0,4,3,4,3,5,3,4,3,3,2,4,3,4,3,3,0,3,3,1,4,4,3,4,4,4,3,4,5,5,3,2,3,1,1,3,3,1,3,1,1,3,3,2,4,5,3,3,5,0,4,0,3,0,4,4,3,5,3,3,0,3,4,0,4,3),
+(0,5,0,5,0,3,0,2,0,4,4,3,5,2,4,3,3,3,4,4,4,3,5,3,5,3,3,1,4,0,4,3,3,0,3,3,0,4,4,4,4,5,4,3,3,5,5,3,2,3,1,2,3,2,0,1,0,0,3,2,2,4,4,3,1,5,0,4,0,3,0,4,3,1,3,2,1,0,3,3,0,3,3),
+(0,4,0,5,0,5,0,4,0,4,5,5,5,3,4,3,3,2,5,4,4,3,5,3,5,3,4,0,4,3,4,4,3,2,4,4,3,4,5,4,4,5,5,0,3,5,5,4,1,3,3,2,3,3,1,3,1,0,4,3,1,4,4,3,4,5,0,4,0,2,0,4,3,4,4,3,3,0,4,0,0,5,5),
+(0,4,0,4,0,5,0,1,1,3,3,4,4,3,4,1,3,0,5,1,3,0,3,1,3,1,1,0,3,0,3,3,4,0,4,3,0,4,4,4,3,4,4,0,3,5,4,1,0,3,0,0,2,3,0,3,1,0,3,1,0,3,2,1,3,5,0,3,0,1,0,3,2,3,3,4,4,0,2,2,0,4,4),
+(2,4,0,5,0,4,0,3,0,4,5,5,4,3,5,3,5,3,5,3,5,2,5,3,4,3,3,4,3,4,5,3,2,1,5,4,3,2,3,4,5,3,4,1,2,5,4,3,0,3,3,0,3,2,0,2,3,0,4,1,0,3,4,3,3,5,0,3,0,1,0,4,5,5,5,4,3,0,4,2,0,3,5),
+(0,5,0,4,0,4,0,2,0,5,4,3,4,3,4,3,3,3,4,3,4,2,5,3,5,3,4,1,4,3,4,4,4,0,3,5,0,4,4,4,4,5,3,1,3,4,5,3,3,3,3,3,3,3,0,2,2,0,3,3,2,4,3,3,3,5,3,4,1,3,3,5,3,2,0,0,0,0,4,3,1,3,3),
+(0,1,0,3,0,3,0,1,0,1,3,3,3,2,3,3,3,0,3,0,0,0,3,1,3,0,0,0,2,2,2,3,0,0,3,2,0,1,2,4,1,3,3,0,0,3,3,3,0,1,0,0,2,1,0,0,3,0,3,1,0,3,0,0,1,3,0,2,0,1,0,3,3,1,3,3,0,0,1,1,0,3,3),
+(0,2,0,3,0,2,1,4,0,2,2,3,1,1,3,1,1,0,2,0,3,1,2,3,1,3,0,0,1,0,4,3,2,3,3,3,1,4,2,3,3,3,3,1,0,3,1,4,0,1,1,0,1,2,0,1,1,0,1,1,0,3,1,3,2,2,0,1,0,0,0,2,3,3,3,1,0,0,0,0,0,2,3),
+(0,5,0,4,0,5,0,2,0,4,5,5,3,3,4,3,3,1,5,4,4,2,4,4,4,3,4,2,4,3,5,5,4,3,3,4,3,3,5,5,4,5,5,1,3,4,5,3,1,4,3,1,3,3,0,3,3,1,4,3,1,4,5,3,3,5,0,4,0,3,0,5,3,3,1,4,3,0,4,0,1,5,3),
+(0,5,0,5,0,4,0,2,0,4,4,3,4,3,3,3,3,3,5,4,4,4,4,4,4,5,3,3,5,2,4,4,4,3,4,4,3,3,4,4,5,5,3,3,4,3,4,3,3,4,3,3,3,3,1,2,2,1,4,3,3,5,4,4,3,4,0,4,0,3,0,4,4,4,4,4,1,0,4,2,0,2,4),
+(0,4,0,4,0,3,0,1,0,3,5,2,3,0,3,0,2,1,4,2,3,3,4,1,4,3,3,2,4,1,3,3,3,0,3,3,0,0,3,3,3,5,3,3,3,3,3,2,0,2,0,0,2,0,0,2,0,0,1,0,0,3,1,2,2,3,0,3,0,2,0,4,4,3,3,4,1,0,3,0,0,2,4),
+(0,0,0,4,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,1,0,2,0,1,0,0,0,0,0,3,1,3,0,3,2,0,0,0,1,0,3,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,2,0,0,0,0,0,0,2),
+(0,2,1,3,0,2,0,2,0,3,3,3,3,1,3,1,3,3,3,3,3,3,4,2,2,1,2,1,4,0,4,3,1,3,3,3,2,4,3,5,4,3,3,3,3,3,3,3,0,1,3,0,2,0,0,1,0,0,1,0,0,4,2,0,2,3,0,3,3,0,3,3,4,2,3,1,4,0,1,2,0,2,3),
+(0,3,0,3,0,1,0,3,0,2,3,3,3,0,3,1,2,0,3,3,2,3,3,2,3,2,3,1,3,0,4,3,2,0,3,3,1,4,3,3,2,3,4,3,1,3,3,1,1,0,1,1,0,1,0,1,0,1,0,0,0,4,1,1,0,3,0,3,1,0,2,3,3,3,3,3,1,0,0,2,0,3,3),
+(0,0,0,0,0,0,0,0,0,0,3,0,2,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,3,0,3,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,2,3,0,0,0,0,0,0,0,0,3),
+(0,2,0,3,1,3,0,3,0,2,3,3,3,1,3,1,3,1,3,1,3,3,3,1,3,0,2,3,1,1,4,3,3,2,3,3,1,2,2,4,1,3,3,0,1,4,2,3,0,1,3,0,3,0,0,1,3,0,2,0,0,3,3,2,1,3,0,3,0,2,0,3,4,4,4,3,1,0,3,0,0,3,3),
+(0,2,0,1,0,2,0,0,0,1,3,2,2,1,3,0,1,1,3,0,3,2,3,1,2,0,2,0,1,1,3,3,3,0,3,3,1,1,2,3,2,3,3,1,2,3,2,0,0,1,0,0,0,0,0,0,3,0,1,0,0,2,1,2,1,3,0,3,0,0,0,3,4,4,4,3,2,0,2,0,0,2,4),
+(0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3),
+(0,3,0,3,0,2,0,3,0,3,3,3,2,3,2,2,2,0,3,1,3,3,3,2,3,3,0,0,3,0,3,2,2,0,2,3,1,4,3,4,3,3,2,3,1,5,4,4,0,3,1,2,1,3,0,3,1,1,2,0,2,3,1,3,1,3,0,3,0,1,0,3,3,4,4,2,1,0,2,1,0,2,4),
+(0,1,0,3,0,1,0,2,0,1,4,2,5,1,4,0,2,0,2,1,3,1,4,0,2,1,0,0,2,1,4,1,1,0,3,3,0,5,1,3,2,3,3,1,0,3,2,3,0,1,0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,3,0,2,0,1,0,3,3,3,4,3,3,0,0,0,0,2,3),
+(0,0,0,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,0,0,3),
+(0,1,0,3,0,4,0,3,0,2,4,3,1,0,3,2,2,1,3,1,2,2,3,1,1,1,2,1,3,0,1,2,0,1,3,2,1,3,0,5,5,1,0,0,1,3,2,1,0,3,0,0,1,0,0,0,0,0,3,4,0,1,1,1,3,2,0,2,0,1,0,2,3,3,1,2,3,0,1,0,1,0,4),
+(0,0,0,1,0,3,0,3,0,2,2,1,0,0,4,0,3,0,3,1,3,0,3,0,3,0,1,0,3,0,3,1,3,0,3,3,0,0,1,2,1,1,1,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,2,2,1,2,0,0,2,0,0,0,0,2,3,3,3,3,0,0,0,0,1,4),
+(0,0,0,3,0,3,0,0,0,0,3,1,1,0,3,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,3,0,2,0,2,3,0,0,2,2,3,1,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,2,3),
+(2,4,0,5,0,5,0,4,0,3,4,3,3,3,4,3,3,3,4,3,4,4,5,4,5,5,5,2,3,0,5,5,4,1,5,4,3,1,5,4,3,4,4,3,3,4,3,3,0,3,2,0,2,3,0,3,0,0,3,3,0,5,3,2,3,3,0,3,0,3,0,3,4,5,4,5,3,0,4,3,0,3,4),
+(0,3,0,3,0,3,0,3,0,3,3,4,3,2,3,2,3,0,4,3,3,3,3,3,3,3,3,0,3,2,4,3,3,1,3,4,3,4,4,4,3,4,4,3,2,4,4,1,0,2,0,0,1,1,0,2,0,0,3,1,0,5,3,2,1,3,0,3,0,1,2,4,3,2,4,3,3,0,3,2,0,4,4),
+(0,3,0,3,0,1,0,0,0,1,4,3,3,2,3,1,3,1,4,2,3,2,4,2,3,4,3,0,2,2,3,3,3,0,3,3,3,0,3,4,1,3,3,0,3,4,3,3,0,1,1,0,1,0,0,0,4,0,3,0,0,3,1,2,1,3,0,4,0,1,0,4,3,3,4,3,3,0,2,0,0,3,3),
+(0,3,0,4,0,1,0,3,0,3,4,3,3,0,3,3,3,1,3,1,3,3,4,3,3,3,0,0,3,1,5,3,3,1,3,3,2,5,4,3,3,4,5,3,2,5,3,4,0,1,0,0,0,0,0,2,0,0,1,1,0,4,2,2,1,3,0,3,0,2,0,4,4,3,5,3,2,0,1,1,0,3,4),
+(0,5,0,4,0,5,0,2,0,4,4,3,3,2,3,3,3,1,4,3,4,1,5,3,4,3,4,0,4,2,4,3,4,1,5,4,0,4,4,4,4,5,4,1,3,5,4,2,1,4,1,1,3,2,0,3,1,0,3,2,1,4,3,3,3,4,0,4,0,3,0,4,4,4,3,3,3,0,4,2,0,3,4),
+(1,4,0,4,0,3,0,1,0,3,3,3,1,1,3,3,2,2,3,3,1,0,3,2,2,1,2,0,3,1,2,1,2,0,3,2,0,2,2,3,3,4,3,0,3,3,1,2,0,1,1,3,1,2,0,0,3,0,1,1,0,3,2,2,3,3,0,3,0,0,0,2,3,3,4,3,3,0,1,0,0,1,4),
+(0,4,0,4,0,4,0,0,0,3,4,4,3,1,4,2,3,2,3,3,3,1,4,3,4,0,3,0,4,2,3,3,2,2,5,4,2,1,3,4,3,4,3,1,3,3,4,2,0,2,1,0,3,3,0,0,2,0,3,1,0,4,4,3,4,3,0,4,0,1,0,2,4,4,4,4,4,0,3,2,0,3,3),
+(0,0,0,1,0,4,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,3,2,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2),
+(0,2,0,3,0,4,0,4,0,1,3,3,3,0,4,0,2,1,2,1,1,1,2,0,3,1,1,0,1,0,3,1,0,0,3,3,2,0,1,1,0,0,0,0,0,1,0,2,0,2,2,0,3,1,0,0,1,0,1,1,0,1,2,0,3,0,0,0,0,1,0,0,3,3,4,3,1,0,1,0,3,0,2),
+(0,0,0,3,0,5,0,0,0,0,1,0,2,0,3,1,0,1,3,0,0,0,2,0,0,0,1,0,0,0,1,1,0,0,4,0,0,0,2,3,0,1,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,3),
+(0,2,0,5,0,5,0,1,0,2,4,3,3,2,5,1,3,2,3,3,3,0,4,1,2,0,3,0,4,0,2,2,1,1,5,3,0,0,1,4,2,3,2,0,3,3,3,2,0,2,4,1,1,2,0,1,1,0,3,1,0,1,3,1,2,3,0,2,0,0,0,1,3,5,4,4,4,0,3,0,0,1,3),
+(0,4,0,5,0,4,0,4,0,4,5,4,3,3,4,3,3,3,4,3,4,4,5,3,4,5,4,2,4,2,3,4,3,1,4,4,1,3,5,4,4,5,5,4,4,5,5,5,2,3,3,1,4,3,1,3,3,0,3,3,1,4,3,4,4,4,0,3,0,4,0,3,3,4,4,5,0,0,4,3,0,4,5),
+(0,4,0,4,0,3,0,3,0,3,4,4,4,3,3,2,4,3,4,3,4,3,5,3,4,3,2,1,4,2,4,4,3,1,3,4,2,4,5,5,3,4,5,4,1,5,4,3,0,3,2,2,3,2,1,3,1,0,3,3,3,5,3,3,3,5,4,4,2,3,3,4,3,3,3,2,1,0,3,2,1,4,3),
+(0,4,0,5,0,4,0,3,0,3,5,5,3,2,4,3,4,0,5,4,4,1,4,4,4,3,3,3,4,3,5,5,2,3,3,4,1,2,5,5,3,5,5,2,3,5,5,4,0,3,2,0,3,3,1,1,5,1,4,1,0,4,3,2,3,5,0,4,0,3,0,5,4,3,4,3,0,0,4,1,0,4,4),
+(1,3,0,4,0,2,0,2,0,2,5,5,3,3,3,3,3,0,4,2,3,4,4,4,3,4,0,0,3,4,5,4,3,3,3,3,2,5,5,4,5,5,5,4,3,5,5,5,1,3,1,0,1,0,0,3,2,0,4,2,0,5,2,3,2,4,1,3,0,3,0,4,5,4,5,4,3,0,4,2,0,5,4),
+(0,3,0,4,0,5,0,3,0,3,4,4,3,2,3,2,3,3,3,3,3,2,4,3,3,2,2,0,3,3,3,3,3,1,3,3,3,0,4,4,3,4,4,1,1,4,4,2,0,3,1,0,1,1,0,4,1,0,2,3,1,3,3,1,3,4,0,3,0,1,0,3,1,3,0,0,1,0,2,0,0,4,4),
+(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
+(0,3,0,3,0,2,0,3,0,1,5,4,3,3,3,1,4,2,1,2,3,4,4,2,4,4,5,0,3,1,4,3,4,0,4,3,3,3,2,3,2,5,3,4,3,2,2,3,0,0,3,0,2,1,0,1,2,0,0,0,0,2,1,1,3,1,0,2,0,4,0,3,4,4,4,5,2,0,2,0,0,1,3),
+(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,4,2,1,1,0,1,0,3,2,0,0,3,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,2,0,0,0,1,4,0,4,2,1,0,0,0,0,0,1),
+(0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,3,1,0,0,0,2,0,2,1,0,0,1,2,1,0,1,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,2),
+(0,4,0,4,0,4,0,3,0,4,4,3,4,2,4,3,2,0,4,4,4,3,5,3,5,3,3,2,4,2,4,3,4,3,1,4,0,2,3,4,4,4,3,3,3,4,4,4,3,4,1,3,4,3,2,1,2,1,3,3,3,4,4,3,3,5,0,4,0,3,0,4,3,3,3,2,1,0,3,0,0,3,3),
+(0,4,0,3,0,3,0,3,0,3,5,5,3,3,3,3,4,3,4,3,3,3,4,4,4,3,3,3,3,4,3,5,3,3,1,3,2,4,5,5,5,5,4,3,4,5,5,3,2,2,3,3,3,3,2,3,3,1,2,3,2,4,3,3,3,4,0,4,0,2,0,4,3,2,2,1,2,0,3,0,0,4,1),
+)
+
+class JapaneseContextAnalysis:
+    def __init__(self):
+        self.reset()
+        
+    def reset(self):
+        self._mTotalRel = 0 # total sequence received
+        self._mRelSample = [0] * NUM_OF_CATEGORY # category counters, each interger counts sequence in its category
+        self._mNeedToSkipCharNum = 0 # if last byte in current buffer is not the last byte of a character, we need to know how many bytes to skip in next buffer
+        self._mLastCharOrder = -1 # The order of previous char
+        self._mDone = False # If this flag is set to True, detection is done and conclusion has been made
+
+    def feed(self, aBuf, aLen):
+        if self._mDone: return
+        
+        # The buffer we got is byte oriented, and a character may span in more than one
+        # buffers. In case the last one or two byte in last buffer is not complete, we 
+        # record how many byte needed to complete that character and skip these bytes here.
+        # We can choose to record those bytes as well and analyse the character once it 
+        # is complete, but since a character will not make much difference, by simply skipping
+        # this character will simply our logic and improve performance.
+        i = self._mNeedToSkipCharNum
+        while i < aLen:
+            order, charLen = self.get_order(aBuf[i:i+2])
+            i += charLen
+            if i > aLen:
+                self._mNeedToSkipCharNum = i - aLen
+                self._mLastCharOrder = -1
+            else:
+                if (order != -1) and (self._mLastCharOrder != -1):
+                    self._mTotalRel += 1
+                    if self._mTotalRel > MAX_REL_THRESHOLD:
+                        self._mDone = True
+                        break
+                    self._mRelSample[jp2CharContext[self._mLastCharOrder][order]] += 1
+                self._mLastCharOrder = order
+
+    def got_enough_data(self):
+        return self._mTotalRel > ENOUGH_REL_THRESHOLD
+    
+    def get_confidence(self):
+        # This is just one way to calculate confidence. It works well for me.
+        if self._mTotalRel > MINIMUM_DATA_THRESHOLD:
+            return (self._mTotalRel - self._mRelSample[0]) / self._mTotalRel
+        else:
+            return DONT_KNOW
+
+    def get_order(self, aBuf):
+        return -1, 1
+        
+class SJISContextAnalysis(JapaneseContextAnalysis):
+    def get_order(self, aBuf):
+        if not aBuf: return -1, 1
+        # find out current char's byte length
+        if ((aBuf[0] >= 0x81) and (aBuf[0] <= 0x9F)) or \
+           ((aBuf[0] >= 0xE0) and (aBuf[0] <= 0xFC)):
+            charLen = 2
+        else:
+            charLen = 1
+
+        # return its order if it is hiragana
+        if len(aBuf) > 1:
+            if (aBuf[0] == 202) and \
+               (aBuf[1] >= 0x9F) and \
+               (aBuf[1] <= 0xF1):
+                return aBuf[1] - 0x9F, charLen
+
+        return -1, charLen
+
+class EUCJPContextAnalysis(JapaneseContextAnalysis):
+    def get_order(self, aBuf):
+        if not aBuf: return -1, 1
+        # find out current char's byte length
+        if (aBuf[0] == 0x8E) or \
+           ((aBuf[0] >= 0xA1) and (aBuf[0] <= 0xFE)):
+            charLen = 2
+        elif aBuf[0] == 0x8F:
+            charLen = 3
+        else:
+            charLen = 1
+
+        # return its order if it is hiragana
+        if len(aBuf) > 1:
+            if (aBuf[0] == 0xA4) and \
+               (aBuf[1] >= 0xA1) and \
+               (aBuf[1] <= 0xF3):
+                return aBuf[1] - 0xA1, charLen
+
+        return -1, charLen
--- a/subsdownloader2/src/SourceCode/chardet/langbulgarianmodel.py
+++ b/subsdownloader2/src/SourceCode/chardet/langbulgarianmodel.py
@@ -1,228 +1,228 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants
-
-# 255: Control characters that usually does not exist in any text
-# 254: Carriage/Return
-# 253: symbol (punctuation) that does not belong to word
-# 252: 0 - 9
-
-# Character Mapping Table:
-# this table is modified base on win1251BulgarianCharToOrderMap, so 
-# only number <64 is sure valid
-
-Latin5_BulgarianCharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  # 40
-110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  # 50
-253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  # 60
-116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  # 70
-194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,  # 80
-210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,  # 90
- 81,226,227,228,229,230,105,231,232,233,234,235,236, 45,237,238,  # a0
- 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  # b0
- 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,239, 67,240, 60, 56,  # c0
-  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  # d0
-  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,241, 42, 16,  # e0
- 62,242,243,244, 58,245, 98,246,247,248,249,250,251, 91,252,253,  # f0
-)
-
-win1251BulgarianCharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  # 40
-110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  # 50
-253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  # 60
-116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  # 70
-206,207,208,209,210,211,212,213,120,214,215,216,217,218,219,220,  # 80
-221, 78, 64, 83,121, 98,117,105,222,223,224,225,226,227,228,229,  # 90
- 88,230,231,232,233,122, 89,106,234,235,236,237,238, 45,239,240,  # a0
- 73, 80,118,114,241,242,243,244,245, 62, 58,246,247,248,249,250,  # b0
- 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  # c0
- 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,251, 67,252, 60, 56,  # d0
-  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  # e0
-  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,253, 42, 16,  # f0
-)
-
-# Model Table: 
-# total sequences: 100%
-# first 512 sequences: 96.9392%
-# first 1024 sequences:3.0618%
-# rest  sequences:     0.2992%
-# negative sequences:  0.0020% 
-BulgarianLangModel = ( \
-0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,2,2,1,2,2,
-3,1,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,0,1,
-0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,3,3,0,3,1,0,
-0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,3,3,3,3,2,2,2,1,1,2,0,1,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,3,2,3,2,2,3,3,1,1,2,3,3,2,3,3,3,3,2,1,2,0,2,0,3,0,0,
-0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,3,1,3,3,3,3,3,2,3,2,3,3,3,3,3,2,3,3,1,3,0,3,0,2,0,0,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,3,3,1,3,3,2,3,3,3,1,3,3,2,3,2,2,2,0,0,2,0,2,0,2,0,0,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,3,3,1,2,2,3,2,1,1,2,0,2,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,3,2,3,3,1,2,3,2,2,2,3,3,3,3,3,2,2,3,1,2,0,2,1,2,0,0,
-0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,1,3,3,3,3,3,2,3,3,3,2,3,3,2,3,2,2,2,3,1,2,0,1,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,3,3,3,3,3,1,1,1,2,2,1,3,1,3,2,2,3,0,0,1,0,1,0,1,0,0,
-0,0,0,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,2,2,3,2,2,3,1,2,1,1,1,2,3,1,3,1,2,2,0,1,1,1,1,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,1,3,2,2,3,3,1,2,3,1,1,3,3,3,3,1,2,2,1,1,1,0,2,0,2,0,1,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,2,3,3,3,2,2,1,1,2,0,2,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,0,1,2,1,3,3,2,3,3,3,3,3,2,3,2,1,0,3,1,2,1,2,1,2,3,2,1,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,1,3,3,2,3,3,2,2,2,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,3,3,3,3,0,3,3,3,3,3,2,1,1,2,1,3,3,0,3,1,1,1,1,3,2,0,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,3,3,2,3,2,2,2,3,0,2,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,2,3,3,2,2,3,2,1,1,1,1,1,3,1,3,1,1,0,0,0,1,0,0,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,2,3,2,0,3,2,0,3,0,2,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,2,1,1,1,1,2,1,1,2,1,1,1,2,2,1,2,1,1,1,0,1,1,0,1,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,2,1,3,1,1,2,1,3,2,1,1,0,1,2,3,2,1,1,1,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,3,3,3,3,2,2,1,0,1,0,0,1,0,0,0,2,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,2,3,2,3,3,1,3,2,1,1,1,2,1,1,2,1,3,0,1,0,0,0,1,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,1,1,2,2,3,3,2,3,2,2,2,3,1,2,2,1,1,2,1,1,2,2,0,1,1,0,1,0,2,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,2,1,3,1,0,2,2,1,3,2,1,0,0,2,0,2,0,1,0,0,0,0,0,0,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,3,1,2,0,2,3,1,2,3,2,0,1,3,1,2,1,1,1,0,0,1,0,0,2,2,2,3,
-2,2,2,2,1,2,1,1,2,2,1,1,2,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,
-3,3,3,3,3,2,1,2,2,1,2,0,2,0,1,0,1,2,1,2,1,1,0,0,0,1,0,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
-3,3,2,3,3,1,1,3,1,0,3,2,1,0,0,0,1,2,0,2,0,1,0,0,0,1,0,1,2,1,2,2,
-1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,
-3,1,0,1,0,2,3,2,2,2,3,2,2,2,2,2,1,0,2,1,2,1,1,1,0,1,2,1,2,2,2,1,
-1,1,2,2,2,2,1,2,1,1,0,1,2,1,2,2,2,1,1,1,0,1,1,1,1,2,0,1,0,0,0,0,
-2,3,2,3,3,0,0,2,1,0,2,1,0,0,0,0,2,3,0,2,0,0,0,0,0,1,0,0,2,0,1,2,
-2,1,2,1,2,2,1,1,1,2,1,1,1,0,1,2,2,1,1,1,1,1,0,1,1,1,0,0,1,2,0,0,
-3,3,2,2,3,0,2,3,1,1,2,0,0,0,1,0,0,2,0,2,0,0,0,1,0,1,0,1,2,0,2,2,
-1,1,1,1,2,1,0,1,2,2,2,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,
-2,3,2,3,3,0,0,3,0,1,1,0,1,0,0,0,2,2,1,2,0,0,0,0,0,0,0,0,2,0,1,2,
-2,2,1,1,1,1,1,2,2,2,1,0,2,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,
-3,3,3,3,2,2,2,2,2,0,2,1,1,1,1,2,1,2,1,1,0,2,0,1,0,1,0,0,2,0,1,2,
-1,1,1,1,1,1,1,2,2,1,1,0,2,0,1,0,2,0,0,1,1,1,0,0,2,0,0,0,1,1,0,0,
-2,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,0,1,2,0,1,2,
-2,2,2,1,1,2,1,1,2,2,2,1,2,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,
-2,3,3,3,3,0,2,2,0,2,1,0,0,0,1,1,1,2,0,2,0,0,0,3,0,0,0,0,2,0,2,2,
-1,1,1,2,1,2,1,1,2,2,2,1,2,0,1,1,1,0,1,1,1,1,0,2,1,0,0,0,1,1,0,0,
-2,3,3,3,3,0,2,1,0,0,2,0,0,0,0,0,1,2,0,2,0,0,0,0,0,0,0,0,2,0,1,2,
-1,1,1,2,1,1,1,1,2,2,2,0,1,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,
-3,3,2,2,3,0,1,0,1,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0,0,0,0,1,0,2,2,
-1,1,1,1,1,2,1,1,2,2,1,2,2,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,0,0,
-3,1,0,1,0,2,2,2,2,3,2,1,1,1,2,3,0,0,1,0,2,1,1,0,1,1,1,1,2,1,1,1,
-1,2,2,1,2,1,2,2,1,1,0,1,2,1,2,2,1,1,1,0,0,1,1,1,2,1,0,1,0,0,0,0,
-2,1,0,1,0,3,1,2,2,2,2,1,2,2,1,1,1,0,2,1,2,2,1,1,2,1,1,0,2,1,1,1,
-1,2,2,2,2,2,2,2,1,2,0,1,1,0,2,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,
-2,1,1,1,1,2,2,2,2,1,2,2,2,1,2,2,1,1,2,1,2,3,2,2,1,1,1,1,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,2,2,3,2,0,1,2,0,1,2,1,1,0,1,0,1,2,1,2,0,0,0,1,1,0,0,0,1,0,0,2,
-1,1,0,0,1,1,0,1,1,1,1,0,2,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,
-2,0,0,0,0,1,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,2,1,1,1,
-1,2,2,2,2,1,1,2,1,2,1,1,1,0,2,1,2,1,1,1,0,2,1,1,1,1,0,1,0,0,0,0,
-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,
-1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,2,2,3,2,0,0,0,0,1,0,0,0,0,0,0,1,1,0,2,0,0,0,0,0,0,0,0,1,0,1,2,
-1,1,1,1,1,1,0,0,2,2,2,2,2,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,
-2,3,1,2,1,0,1,1,0,2,2,2,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,2,
-1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,
-2,2,2,2,2,0,0,2,0,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,0,2,2,
-1,1,1,1,1,0,0,1,2,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
-1,2,2,2,2,0,0,2,0,1,1,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,1,1,
-0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
-1,2,2,3,2,0,0,1,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,0,2,
-1,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
-2,1,2,2,2,1,2,1,2,2,1,1,2,1,1,1,0,1,1,1,1,2,0,1,0,1,1,1,1,0,1,1,
-1,1,2,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,
-1,0,0,1,3,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,2,2,2,1,0,0,1,0,2,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,1,
-0,2,0,1,0,0,1,1,2,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
-1,2,2,2,2,0,1,1,0,2,1,0,1,1,1,0,0,1,0,2,0,1,0,0,0,0,0,0,0,0,0,1,
-0,1,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
-2,2,2,2,2,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,
-0,1,0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
-2,0,1,0,0,1,2,1,1,1,1,1,1,2,2,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,
-1,1,2,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,2,1,2,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,
-0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
-0,1,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,
-1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,2,0,0,2,0,1,0,0,1,0,0,1,
-1,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,
-1,1,1,1,1,1,1,2,0,0,0,0,0,0,2,1,0,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-)
-
-Latin5BulgarianModel = { \
-  'charToOrderMap': Latin5_BulgarianCharToOrderMap,
-  'precedenceMatrix': BulgarianLangModel,
-  'mTypicalPositiveRatio': 0.969392,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "ISO-8859-5"
-}
-
-Win1251BulgarianModel = { \
-  'charToOrderMap': win1251BulgarianCharToOrderMap,
-  'precedenceMatrix': BulgarianLangModel,
-  'mTypicalPositiveRatio': 0.969392,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "windows-1251"
-}
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+
+# 255: Control characters that usually does not exist in any text
+# 254: Carriage/Return
+# 253: symbol (punctuation) that does not belong to word
+# 252: 0 - 9
+
+# Character Mapping Table:
+# this table is modified base on win1251BulgarianCharToOrderMap, so 
+# only number <64 is sure valid
+
+Latin5_BulgarianCharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  # 40
+110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  # 50
+253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  # 60
+116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  # 70
+194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,  # 80
+210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,  # 90
+ 81,226,227,228,229,230,105,231,232,233,234,235,236, 45,237,238,  # a0
+ 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  # b0
+ 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,239, 67,240, 60, 56,  # c0
+  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  # d0
+  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,241, 42, 16,  # e0
+ 62,242,243,244, 58,245, 98,246,247,248,249,250,251, 91,252,253,  # f0
+)
+
+win1251BulgarianCharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253, 77, 90, 99,100, 72,109,107,101, 79,185, 81,102, 76, 94, 82,  # 40
+110,186,108, 91, 74,119, 84, 96,111,187,115,253,253,253,253,253,  # 50
+253, 65, 69, 70, 66, 63, 68,112,103, 92,194,104, 95, 86, 87, 71,  # 60
+116,195, 85, 93, 97,113,196,197,198,199,200,253,253,253,253,253,  # 70
+206,207,208,209,210,211,212,213,120,214,215,216,217,218,219,220,  # 80
+221, 78, 64, 83,121, 98,117,105,222,223,224,225,226,227,228,229,  # 90
+ 88,230,231,232,233,122, 89,106,234,235,236,237,238, 45,239,240,  # a0
+ 73, 80,118,114,241,242,243,244,245, 62, 58,246,247,248,249,250,  # b0
+ 31, 32, 35, 43, 37, 44, 55, 47, 40, 59, 33, 46, 38, 36, 41, 30,  # c0
+ 39, 28, 34, 51, 48, 49, 53, 50, 54, 57, 61,251, 67,252, 60, 56,  # d0
+  1, 18,  9, 20, 11,  3, 23, 15,  2, 26, 12, 10, 14,  6,  4, 13,  # e0
+  7,  8,  5, 19, 29, 25, 22, 21, 27, 24, 17, 75, 52,253, 42, 16,  # f0
+)
+
+# Model Table: 
+# total sequences: 100%
+# first 512 sequences: 96.9392%
+# first 1024 sequences:3.0618%
+# rest  sequences:     0.2992%
+# negative sequences:  0.0020% 
+BulgarianLangModel = ( \
+0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,2,2,1,2,2,
+3,1,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,0,1,
+0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,3,3,0,3,1,0,
+0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,3,3,3,3,2,2,2,1,1,2,0,1,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,3,2,3,2,2,3,3,1,1,2,3,3,2,3,3,3,3,2,1,2,0,2,0,3,0,0,
+0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,3,1,3,3,3,3,3,2,3,2,3,3,3,3,3,2,3,3,1,3,0,3,0,2,0,0,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,3,3,1,3,3,2,3,3,3,1,3,3,2,3,2,2,2,0,0,2,0,2,0,2,0,0,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,3,3,1,2,2,3,2,1,1,2,0,2,0,0,0,0,
+1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,3,2,3,3,1,2,3,2,2,2,3,3,3,3,3,2,2,3,1,2,0,2,1,2,0,0,
+0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,1,3,3,3,3,3,2,3,3,3,2,3,3,2,3,2,2,2,3,1,2,0,1,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,3,3,3,3,3,1,1,1,2,2,1,3,1,3,2,2,3,0,0,1,0,1,0,1,0,0,
+0,0,0,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,2,2,3,2,2,3,1,2,1,1,1,2,3,1,3,1,2,2,0,1,1,1,1,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,1,3,2,2,3,3,1,2,3,1,1,3,3,3,3,1,2,2,1,1,1,0,2,0,2,0,1,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,2,3,3,3,2,2,1,1,2,0,2,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,0,1,2,1,3,3,2,3,3,3,3,3,2,3,2,1,0,3,1,2,1,2,1,2,3,2,1,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,1,3,3,2,3,3,2,2,2,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,3,3,3,3,0,3,3,3,3,3,2,1,1,2,1,3,3,0,3,1,1,1,1,3,2,0,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,3,3,2,3,2,2,2,3,0,2,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,2,3,3,2,2,3,2,1,1,1,1,1,3,1,3,1,1,0,0,0,1,0,0,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,2,3,2,0,3,2,0,3,0,2,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,2,1,1,1,1,2,1,1,2,1,1,1,2,2,1,2,1,1,1,0,1,1,0,1,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,2,1,3,1,1,2,1,3,2,1,1,0,1,2,3,2,1,1,1,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,3,3,3,3,2,2,1,0,1,0,0,1,0,0,0,2,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,2,3,2,3,3,1,3,2,1,1,1,2,1,1,2,1,3,0,1,0,0,0,1,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,1,1,2,2,3,3,2,3,2,2,2,3,1,2,2,1,1,2,1,1,2,2,0,1,1,0,1,0,2,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,2,1,3,1,0,2,2,1,3,2,1,0,0,2,0,2,0,1,0,0,0,0,0,0,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,3,1,2,0,2,3,1,2,3,2,0,1,3,1,2,1,1,1,0,0,1,0,0,2,2,2,3,
+2,2,2,2,1,2,1,1,2,2,1,1,2,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,
+3,3,3,3,3,2,1,2,2,1,2,0,2,0,1,0,1,2,1,2,1,1,0,0,0,1,0,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,
+3,3,2,3,3,1,1,3,1,0,3,2,1,0,0,0,1,2,0,2,0,1,0,0,0,1,0,1,2,1,2,2,
+1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,
+3,1,0,1,0,2,3,2,2,2,3,2,2,2,2,2,1,0,2,1,2,1,1,1,0,1,2,1,2,2,2,1,
+1,1,2,2,2,2,1,2,1,1,0,1,2,1,2,2,2,1,1,1,0,1,1,1,1,2,0,1,0,0,0,0,
+2,3,2,3,3,0,0,2,1,0,2,1,0,0,0,0,2,3,0,2,0,0,0,0,0,1,0,0,2,0,1,2,
+2,1,2,1,2,2,1,1,1,2,1,1,1,0,1,2,2,1,1,1,1,1,0,1,1,1,0,0,1,2,0,0,
+3,3,2,2,3,0,2,3,1,1,2,0,0,0,1,0,0,2,0,2,0,0,0,1,0,1,0,1,2,0,2,2,
+1,1,1,1,2,1,0,1,2,2,2,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,
+2,3,2,3,3,0,0,3,0,1,1,0,1,0,0,0,2,2,1,2,0,0,0,0,0,0,0,0,2,0,1,2,
+2,2,1,1,1,1,1,2,2,2,1,0,2,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,
+3,3,3,3,2,2,2,2,2,0,2,1,1,1,1,2,1,2,1,1,0,2,0,1,0,1,0,0,2,0,1,2,
+1,1,1,1,1,1,1,2,2,1,1,0,2,0,1,0,2,0,0,1,1,1,0,0,2,0,0,0,1,1,0,0,
+2,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,0,1,2,0,1,2,
+2,2,2,1,1,2,1,1,2,2,2,1,2,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,
+2,3,3,3,3,0,2,2,0,2,1,0,0,0,1,1,1,2,0,2,0,0,0,3,0,0,0,0,2,0,2,2,
+1,1,1,2,1,2,1,1,2,2,2,1,2,0,1,1,1,0,1,1,1,1,0,2,1,0,0,0,1,1,0,0,
+2,3,3,3,3,0,2,1,0,0,2,0,0,0,0,0,1,2,0,2,0,0,0,0,0,0,0,0,2,0,1,2,
+1,1,1,2,1,1,1,1,2,2,2,0,1,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,
+3,3,2,2,3,0,1,0,1,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0,0,0,0,1,0,2,2,
+1,1,1,1,1,2,1,1,2,2,1,2,2,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,0,0,
+3,1,0,1,0,2,2,2,2,3,2,1,1,1,2,3,0,0,1,0,2,1,1,0,1,1,1,1,2,1,1,1,
+1,2,2,1,2,1,2,2,1,1,0,1,2,1,2,2,1,1,1,0,0,1,1,1,2,1,0,1,0,0,0,0,
+2,1,0,1,0,3,1,2,2,2,2,1,2,2,1,1,1,0,2,1,2,2,1,1,2,1,1,0,2,1,1,1,
+1,2,2,2,2,2,2,2,1,2,0,1,1,0,2,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,
+2,1,1,1,1,2,2,2,2,1,2,2,2,1,2,2,1,1,2,1,2,3,2,2,1,1,1,1,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,2,2,3,2,0,1,2,0,1,2,1,1,0,1,0,1,2,1,2,0,0,0,1,1,0,0,0,1,0,0,2,
+1,1,0,0,1,1,0,1,1,1,1,0,2,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,
+2,0,0,0,0,1,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,2,1,1,1,
+1,2,2,2,2,1,1,2,1,2,1,1,1,0,2,1,2,1,1,1,0,2,1,1,1,1,0,1,0,0,0,0,
+3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,
+1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,2,2,3,2,0,0,0,0,1,0,0,0,0,0,0,1,1,0,2,0,0,0,0,0,0,0,0,1,0,1,2,
+1,1,1,1,1,1,0,0,2,2,2,2,2,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,
+2,3,1,2,1,0,1,1,0,2,2,2,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,2,
+1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,
+2,2,2,2,2,0,0,2,0,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,0,2,2,
+1,1,1,1,1,0,0,1,2,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
+1,2,2,2,2,0,0,2,0,1,1,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,1,1,
+0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
+1,2,2,3,2,0,0,1,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,0,2,
+1,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
+2,1,2,2,2,1,2,1,2,2,1,1,2,1,1,1,0,1,1,1,1,2,0,1,0,1,1,1,1,0,1,1,
+1,1,2,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,
+1,0,0,1,3,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,2,2,2,1,0,0,1,0,2,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,1,
+0,2,0,1,0,0,1,1,2,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
+1,2,2,2,2,0,1,1,0,2,1,0,1,1,1,0,0,1,0,2,0,1,0,0,0,0,0,0,0,0,0,1,
+0,1,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
+2,2,2,2,2,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,
+0,1,0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
+2,0,1,0,0,1,2,1,1,1,1,1,1,2,2,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,
+1,1,2,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,2,1,2,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,
+0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
+0,1,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,
+1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,2,0,0,2,0,1,0,0,1,0,0,1,
+1,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,
+1,1,1,1,1,1,1,2,0,0,0,0,0,0,2,1,0,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+)
+
+Latin5BulgarianModel = { \
+  'charToOrderMap': Latin5_BulgarianCharToOrderMap,
+  'precedenceMatrix': BulgarianLangModel,
+  'mTypicalPositiveRatio': 0.969392,
+  'keepEnglishLetter': False,
+  'charsetName': "ISO-8859-5"
+}
+
+Win1251BulgarianModel = { \
+  'charToOrderMap': win1251BulgarianCharToOrderMap,
+  'precedenceMatrix': BulgarianLangModel,
+  'mTypicalPositiveRatio': 0.969392,
+  'keepEnglishLetter': False,
+  'charsetName': "windows-1251"
+}
--- a/subsdownloader2/src/SourceCode/chardet/langcyrillicmodel.py
+++ b/subsdownloader2/src/SourceCode/chardet/langcyrillicmodel.py
@@ -1,329 +1,329 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants
-
-# KOI8-R language model
-# Character Mapping Table:
-KOI8R_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
-155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
-253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
- 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
-191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,  # 80
-207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,  # 90
-223,224,225, 68,226,227,228,229,230,231,232,233,234,235,236,237,  # a0
-238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,  # b0
- 27,  3, 21, 28, 13,  2, 39, 19, 26,  4, 23, 11,  8, 12,  5,  1,  # c0
- 15, 16,  9,  7,  6, 14, 24, 10, 17, 18, 20, 25, 30, 29, 22, 54,  # d0
- 59, 37, 44, 58, 41, 48, 53, 46, 55, 42, 60, 36, 49, 38, 31, 34,  # e0
- 35, 43, 45, 32, 40, 52, 56, 33, 61, 62, 51, 57, 47, 63, 50, 70,  # f0
-)
-
-win1251_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
-155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
-253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
- 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
-191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,
-207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,
-223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,
-239,240,241,242,243,244,245,246, 68,247,248,249,250,251,252,253,
- 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,
- 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,
-  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,
-  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,
-)
-
-latin5_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
-155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
-253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
- 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
-191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,
-207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,
-223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,
- 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,
- 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,
-  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,
-  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,
-239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255,
-)
-
-macCyrillic_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
-155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
-253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
- 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
- 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,
- 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,
-191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,
-207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,
-223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,
-239,240,241,242,243,244,245,246,247,248,249,250,251,252, 68, 16,
-  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,
-  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27,255,
-)
-
-IBM855_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
-155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
-253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
- 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
-191,192,193,194, 68,195,196,197,198,199,200,201,202,203,204,205,
-206,207,208,209,210,211,212,213,214,215,216,217, 27, 59, 54, 70,
-  3, 37, 21, 44, 28, 58, 13, 41,  2, 48, 39, 53, 19, 46,218,219,
-220,221,222,223,224, 26, 55,  4, 42,225,226,227,228, 23, 60,229,
-230,231,232,233,234,235, 11, 36,236,237,238,239,240,241,242,243,
-  8, 49, 12, 38,  5, 31,  1, 34, 15,244,245,246,247, 35, 16,248,
- 43,  9, 45,  7, 32,  6, 40, 14, 52, 24, 56, 10, 33, 17, 61,249,
-250, 18, 62, 20, 51, 25, 57, 30, 47, 29, 63, 22, 50,251,252,255,
-)
-
-IBM866_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
-155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
-253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
- 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
- 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,
- 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,
-  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,
-191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,
-207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,
-223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,
-  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,
-239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255,
-)
-
-# Model Table: 
-# total sequences: 100%
-# first 512 sequences: 97.6601%
-# first 1024 sequences: 2.3389%
-# rest  sequences:      0.1237%
-# negative sequences:   0.0009% 
-RussianLangModel = ( \
-0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,1,3,3,3,2,3,2,3,3,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,2,2,2,2,2,0,0,2,
-3,3,3,2,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,2,3,2,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,2,2,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,2,3,3,1,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,
-0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,
-0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,2,2,2,3,1,3,3,1,3,3,3,3,2,2,3,0,2,2,2,3,3,2,1,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,2,3,3,3,3,3,2,2,3,2,3,3,3,2,1,2,2,0,1,2,2,2,2,2,2,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,0,2,2,3,3,2,1,2,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,2,3,3,1,2,3,2,2,3,2,3,3,3,3,2,2,3,0,3,2,2,3,1,1,1,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,2,2,2,0,3,3,3,2,2,2,2,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,2,3,2,2,0,1,3,2,1,2,2,1,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,3,2,1,1,3,0,1,1,1,1,2,1,1,0,2,2,2,1,2,0,1,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,2,3,3,2,2,2,2,1,3,2,3,2,3,2,1,2,2,0,1,1,2,1,2,1,2,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,2,3,3,3,2,2,2,2,0,2,2,2,2,3,1,1,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
-3,2,3,2,2,3,3,3,3,3,3,3,3,3,1,3,2,0,0,3,3,3,3,2,3,3,3,3,2,3,2,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,3,3,3,3,3,2,2,3,3,0,2,1,0,3,2,3,2,3,0,0,1,2,0,0,1,0,1,2,1,1,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,3,0,2,3,3,3,3,2,3,3,3,3,1,2,2,0,0,2,3,2,2,2,3,2,3,2,2,3,0,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,2,3,0,2,3,2,3,0,1,2,3,3,2,0,2,3,0,0,2,3,2,2,0,1,3,1,3,2,2,1,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,1,3,0,2,3,3,3,3,3,3,3,3,2,1,3,2,0,0,2,2,3,3,3,2,3,3,0,2,2,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,2,2,3,3,2,2,2,3,3,0,0,1,1,1,1,1,2,0,0,1,1,1,1,0,1,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,0,3,2,3,3,2,3,2,0,2,1,0,1,1,0,1,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,2,3,3,3,2,2,2,2,3,1,3,2,3,1,1,2,1,0,2,2,2,2,1,3,1,0,
-0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
-2,2,3,3,3,3,3,1,2,2,1,3,1,0,3,0,0,3,0,0,0,1,1,0,1,2,1,0,0,0,0,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,2,2,1,1,3,3,3,2,2,1,2,2,3,1,1,2,0,0,2,2,1,3,0,0,2,1,1,2,1,1,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,2,3,3,3,3,1,2,2,2,1,2,1,3,3,1,1,2,1,2,1,2,2,0,2,0,0,1,1,0,1,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,3,3,3,3,3,2,1,3,2,2,3,2,0,3,2,0,3,0,1,0,1,1,0,0,1,1,1,1,0,1,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,2,3,3,3,2,2,2,3,3,1,2,1,2,1,0,1,0,1,1,0,1,0,0,2,1,1,1,0,1,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
-3,1,1,2,1,2,3,3,2,2,1,2,2,3,0,2,1,0,0,2,2,3,2,1,2,2,2,2,2,3,1,0,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,1,1,0,1,1,2,2,1,1,3,0,0,1,3,1,1,1,0,0,0,1,0,1,1,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,1,3,3,3,2,0,0,0,2,1,0,1,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,0,1,0,0,2,3,2,2,2,1,2,2,2,1,2,1,0,0,1,1,1,0,2,0,1,1,1,0,0,1,1,
-1,0,0,0,0,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
-2,3,3,3,3,0,0,0,0,1,0,0,0,0,3,0,1,2,1,0,0,0,0,0,0,0,1,1,0,0,1,1,
-1,0,1,0,1,2,0,0,1,1,2,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,0,
-2,2,3,2,2,2,3,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0,1,0,1,1,1,0,2,1,
-1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,0,1,1,0,
-3,3,3,2,2,2,2,3,2,2,1,1,2,2,2,2,1,1,3,1,2,1,2,0,0,1,1,0,1,0,2,1,
-1,1,1,1,1,2,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,1,0,
-2,0,0,1,0,3,2,2,2,2,1,2,1,2,1,2,0,0,0,2,1,2,2,1,1,2,2,0,1,1,0,2,
-1,1,1,1,1,0,1,1,1,2,1,1,1,2,1,0,1,2,1,1,1,1,0,1,1,1,0,0,1,0,0,1,
-1,3,2,2,2,1,1,1,2,3,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,1,0,0,0,0,1,1,
-1,0,1,1,0,1,0,1,1,0,1,1,0,2,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,
-2,3,2,3,2,1,2,2,2,2,1,0,0,0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,2,1,
-1,1,2,1,0,2,0,0,1,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,
-3,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,0,0,0,2,1,2,1,1,1,2,2,0,0,0,1,2,
-1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,
-2,3,2,3,3,2,0,1,1,1,0,0,1,0,2,0,1,1,3,1,0,0,0,0,0,0,0,1,0,0,2,1,
-1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,1,0,
-2,3,3,3,3,1,2,2,2,2,0,1,1,0,2,1,1,1,2,1,0,1,1,0,0,1,0,1,0,0,2,0,
-0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,3,3,3,2,0,0,1,1,2,2,1,0,0,2,0,1,1,3,0,0,1,0,0,0,0,0,1,0,1,2,1,
-1,1,2,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,
-1,3,2,3,2,1,0,0,2,2,2,0,1,0,2,0,1,1,1,0,1,0,0,0,3,0,1,1,0,0,2,1,
-1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,0,2,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,
-3,1,2,1,1,2,2,2,2,2,2,1,2,2,1,1,0,0,0,2,2,2,0,0,0,1,2,1,0,1,0,1,
-2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,
-3,0,0,0,0,2,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,1,
-1,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,
-1,3,3,2,2,0,0,0,2,2,0,0,0,1,2,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,2,1,
-0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,
-2,3,2,3,2,0,0,0,0,1,1,0,0,0,2,0,2,0,2,0,0,0,0,0,1,0,0,1,0,0,1,1,
-1,1,2,0,1,2,1,0,1,1,2,1,1,1,1,1,2,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,
-1,3,2,2,2,1,0,0,2,2,1,0,1,2,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,
-0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,1,0,2,3,1,2,2,2,2,2,2,1,1,0,0,0,1,0,1,0,2,1,1,1,0,0,0,0,1,
-1,1,0,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
-2,0,2,0,0,1,0,3,2,1,2,1,2,2,0,1,0,0,0,2,1,0,0,2,1,1,1,1,0,2,0,2,
-2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,1,
-1,2,2,2,2,1,0,0,1,0,0,0,0,0,2,0,1,1,1,1,0,0,0,0,1,0,1,2,0,0,2,0,
-1,0,1,1,1,2,1,0,1,0,1,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,
-2,1,2,2,2,0,3,0,1,1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-0,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,
-1,2,2,3,2,2,0,0,1,1,2,0,1,2,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,
-0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,
-2,2,1,1,2,1,2,2,2,2,2,1,2,2,0,1,0,0,0,1,2,2,2,1,2,1,1,1,1,1,2,1,
-1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,1,
-1,2,2,2,2,0,1,0,2,2,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
-0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
-0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,2,2,2,2,0,0,0,2,2,2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
-0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,2,2,2,2,0,0,0,0,1,0,0,1,1,2,0,0,0,0,1,0,1,0,0,1,0,0,2,0,0,0,1,
-0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
-1,2,2,2,1,1,2,0,2,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,
-0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
-1,0,2,1,2,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,
-0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,
-1,0,0,0,0,2,0,1,2,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,
-0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
-2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-1,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-1,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,1,1,0,1,0,0,0,
-0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
-)
-
-Koi8rModel = { \
-  'charToOrderMap': KOI8R_CharToOrderMap,
-  'precedenceMatrix': RussianLangModel,
-  'mTypicalPositiveRatio': 0.976601,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "KOI8-R"
-}
-
-Win1251CyrillicModel = { \
-  'charToOrderMap': win1251_CharToOrderMap,
-  'precedenceMatrix': RussianLangModel,
-  'mTypicalPositiveRatio': 0.976601,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "windows-1251"
-}
-
-Latin5CyrillicModel = { \
-  'charToOrderMap': latin5_CharToOrderMap,
-  'precedenceMatrix': RussianLangModel,
-  'mTypicalPositiveRatio': 0.976601,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "ISO-8859-5"
-}
-
-MacCyrillicModel = { \
-  'charToOrderMap': macCyrillic_CharToOrderMap,
-  'precedenceMatrix': RussianLangModel,
-  'mTypicalPositiveRatio': 0.976601,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "MacCyrillic"
-};
-
-Ibm866Model = { \
-  'charToOrderMap': IBM866_CharToOrderMap,
-  'precedenceMatrix': RussianLangModel,
-  'mTypicalPositiveRatio': 0.976601,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "IBM866"
-}
-
-Ibm855Model = { \
-  'charToOrderMap': IBM855_CharToOrderMap,
-  'precedenceMatrix': RussianLangModel,
-  'mTypicalPositiveRatio': 0.976601,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "IBM855"
-}
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+
+# KOI8-R language model
+# Character Mapping Table:
+KOI8R_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
+155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
+253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
+ 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
+191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,  # 80
+207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,  # 90
+223,224,225, 68,226,227,228,229,230,231,232,233,234,235,236,237,  # a0
+238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,  # b0
+ 27,  3, 21, 28, 13,  2, 39, 19, 26,  4, 23, 11,  8, 12,  5,  1,  # c0
+ 15, 16,  9,  7,  6, 14, 24, 10, 17, 18, 20, 25, 30, 29, 22, 54,  # d0
+ 59, 37, 44, 58, 41, 48, 53, 46, 55, 42, 60, 36, 49, 38, 31, 34,  # e0
+ 35, 43, 45, 32, 40, 52, 56, 33, 61, 62, 51, 57, 47, 63, 50, 70,  # f0
+)
+
+win1251_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
+155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
+253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
+ 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
+191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,
+207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,
+223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,
+239,240,241,242,243,244,245,246, 68,247,248,249,250,251,252,253,
+ 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,
+ 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,
+  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,
+  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,
+)
+
+latin5_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
+155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
+253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
+ 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
+191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,
+207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,
+223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,
+ 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,
+ 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,
+  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,
+  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,
+239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255,
+)
+
+macCyrillic_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
+155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
+253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
+ 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
+ 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,
+ 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,
+191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,
+207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,
+223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,
+239,240,241,242,243,244,245,246,247,248,249,250,251,252, 68, 16,
+  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,
+  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27,255,
+)
+
+IBM855_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
+155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
+253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
+ 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
+191,192,193,194, 68,195,196,197,198,199,200,201,202,203,204,205,
+206,207,208,209,210,211,212,213,214,215,216,217, 27, 59, 54, 70,
+  3, 37, 21, 44, 28, 58, 13, 41,  2, 48, 39, 53, 19, 46,218,219,
+220,221,222,223,224, 26, 55,  4, 42,225,226,227,228, 23, 60,229,
+230,231,232,233,234,235, 11, 36,236,237,238,239,240,241,242,243,
+  8, 49, 12, 38,  5, 31,  1, 34, 15,244,245,246,247, 35, 16,248,
+ 43,  9, 45,  7, 32,  6, 40, 14, 52, 24, 56, 10, 33, 17, 61,249,
+250, 18, 62, 20, 51, 25, 57, 30, 47, 29, 63, 22, 50,251,252,255,
+)
+
+IBM866_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253,142,143,144,145,146,147,148,149,150,151,152, 74,153, 75,154,  # 40
+155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,  # 50
+253, 71,172, 66,173, 65,174, 76,175, 64,176,177, 77, 72,178, 69,  # 60
+ 67,179, 78, 73,180,181, 79,182,183,184,185,253,253,253,253,253,  # 70
+ 37, 44, 33, 46, 41, 48, 56, 51, 42, 60, 36, 49, 38, 31, 34, 35,
+ 45, 32, 40, 52, 53, 55, 58, 50, 57, 63, 70, 62, 61, 47, 59, 43,
+  3, 21, 10, 19, 13,  2, 24, 20,  4, 23, 11,  8, 12,  5,  1, 15,
+191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,
+207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,
+223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,
+  9,  7,  6, 14, 39, 26, 28, 22, 25, 29, 54, 18, 17, 30, 27, 16,
+239, 68,240,241,242,243,244,245,246,247,248,249,250,251,252,255,
+)
+
+# Model Table: 
+# total sequences: 100%
+# first 512 sequences: 97.6601%
+# first 1024 sequences: 2.3389%
+# rest  sequences:      0.1237%
+# negative sequences:   0.0009% 
+RussianLangModel = ( \
+0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,1,3,3,3,2,3,2,3,3,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,2,2,2,2,2,0,0,2,
+3,3,3,2,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,2,3,2,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,2,2,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,2,3,3,1,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,
+0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,
+0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,2,2,2,3,1,3,3,1,3,3,3,3,2,2,3,0,2,2,2,3,3,2,1,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,2,3,3,3,3,3,2,2,3,2,3,3,3,2,1,2,2,0,1,2,2,2,2,2,2,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,0,2,2,3,3,2,1,2,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,2,3,3,1,2,3,2,2,3,2,3,3,3,3,2,2,3,0,3,2,2,3,1,1,1,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,2,2,2,0,3,3,3,2,2,2,2,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,2,3,2,2,0,1,3,2,1,2,2,1,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,3,2,1,1,3,0,1,1,1,1,2,1,1,0,2,2,2,1,2,0,1,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,2,3,3,2,2,2,2,1,3,2,3,2,3,2,1,2,2,0,1,1,2,1,2,1,2,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,2,3,3,3,2,2,2,2,0,2,2,2,2,3,1,1,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
+3,2,3,2,2,3,3,3,3,3,3,3,3,3,1,3,2,0,0,3,3,3,3,2,3,3,3,3,2,3,2,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,3,3,3,3,3,2,2,3,3,0,2,1,0,3,2,3,2,3,0,0,1,2,0,0,1,0,1,2,1,1,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,3,0,2,3,3,3,3,2,3,3,3,3,1,2,2,0,0,2,3,2,2,2,3,2,3,2,2,3,0,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,2,3,0,2,3,2,3,0,1,2,3,3,2,0,2,3,0,0,2,3,2,2,0,1,3,1,3,2,2,1,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,1,3,0,2,3,3,3,3,3,3,3,3,2,1,3,2,0,0,2,2,3,3,3,2,3,3,0,2,2,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,2,2,3,3,2,2,2,3,3,0,0,1,1,1,1,1,2,0,0,1,1,1,1,0,1,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,0,3,2,3,3,2,3,2,0,2,1,0,1,1,0,1,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,2,3,3,3,2,2,2,2,3,1,3,2,3,1,1,2,1,0,2,2,2,2,1,3,1,0,
+0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
+2,2,3,3,3,3,3,1,2,2,1,3,1,0,3,0,0,3,0,0,0,1,1,0,1,2,1,0,0,0,0,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,2,2,1,1,3,3,3,2,2,1,2,2,3,1,1,2,0,0,2,2,1,3,0,0,2,1,1,2,1,1,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,2,3,3,3,3,1,2,2,2,1,2,1,3,3,1,1,2,1,2,1,2,2,0,2,0,0,1,1,0,1,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,3,3,3,3,3,2,1,3,2,2,3,2,0,3,2,0,3,0,1,0,1,1,0,0,1,1,1,1,0,1,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,2,3,3,3,2,2,2,3,3,1,2,1,2,1,0,1,0,1,1,0,1,0,0,2,1,1,1,0,1,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
+3,1,1,2,1,2,3,3,2,2,1,2,2,3,0,2,1,0,0,2,2,3,2,1,2,2,2,2,2,3,1,0,
+0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,1,1,0,1,1,2,2,1,1,3,0,0,1,3,1,1,1,0,0,0,1,0,1,1,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,1,3,3,3,2,0,0,0,2,1,0,1,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,0,1,0,0,2,3,2,2,2,1,2,2,2,1,2,1,0,0,1,1,1,0,2,0,1,1,1,0,0,1,1,
+1,0,0,0,0,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
+2,3,3,3,3,0,0,0,0,1,0,0,0,0,3,0,1,2,1,0,0,0,0,0,0,0,1,1,0,0,1,1,
+1,0,1,0,1,2,0,0,1,1,2,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,0,
+2,2,3,2,2,2,3,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0,1,0,1,1,1,0,2,1,
+1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,0,1,1,0,
+3,3,3,2,2,2,2,3,2,2,1,1,2,2,2,2,1,1,3,1,2,1,2,0,0,1,1,0,1,0,2,1,
+1,1,1,1,1,2,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,1,0,
+2,0,0,1,0,3,2,2,2,2,1,2,1,2,1,2,0,0,0,2,1,2,2,1,1,2,2,0,1,1,0,2,
+1,1,1,1,1,0,1,1,1,2,1,1,1,2,1,0,1,2,1,1,1,1,0,1,1,1,0,0,1,0,0,1,
+1,3,2,2,2,1,1,1,2,3,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,1,0,0,0,0,1,1,
+1,0,1,1,0,1,0,1,1,0,1,1,0,2,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,
+2,3,2,3,2,1,2,2,2,2,1,0,0,0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,2,1,
+1,1,2,1,0,2,0,0,1,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,
+3,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,0,0,0,2,1,2,1,1,1,2,2,0,0,0,1,2,
+1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,
+2,3,2,3,3,2,0,1,1,1,0,0,1,0,2,0,1,1,3,1,0,0,0,0,0,0,0,1,0,0,2,1,
+1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,1,0,
+2,3,3,3,3,1,2,2,2,2,0,1,1,0,2,1,1,1,2,1,0,1,1,0,0,1,0,1,0,0,2,0,
+0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,3,3,3,2,0,0,1,1,2,2,1,0,0,2,0,1,1,3,0,0,1,0,0,0,0,0,1,0,1,2,1,
+1,1,2,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,
+1,3,2,3,2,1,0,0,2,2,2,0,1,0,2,0,1,1,1,0,1,0,0,0,3,0,1,1,0,0,2,1,
+1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,0,2,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,
+3,1,2,1,1,2,2,2,2,2,2,1,2,2,1,1,0,0,0,2,2,2,0,0,0,1,2,1,0,1,0,1,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,
+3,0,0,0,0,2,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,1,
+1,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,
+1,3,3,2,2,0,0,0,2,2,0,0,0,1,2,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,2,1,
+0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,
+2,3,2,3,2,0,0,0,0,1,1,0,0,0,2,0,2,0,2,0,0,0,0,0,1,0,0,1,0,0,1,1,
+1,1,2,0,1,2,1,0,1,1,2,1,1,1,1,1,2,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,
+1,3,2,2,2,1,0,0,2,2,1,0,1,2,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,
+0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,1,0,2,3,1,2,2,2,2,2,2,1,1,0,0,0,1,0,1,0,2,1,1,1,0,0,0,0,1,
+1,1,0,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
+2,0,2,0,0,1,0,3,2,1,2,1,2,2,0,1,0,0,0,2,1,0,0,2,1,1,1,1,0,2,0,2,
+2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,1,
+1,2,2,2,2,1,0,0,1,0,0,0,0,0,2,0,1,1,1,1,0,0,0,0,1,0,1,2,0,0,2,0,
+1,0,1,1,1,2,1,0,1,0,1,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,
+2,1,2,2,2,0,3,0,1,1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+0,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,
+1,2,2,3,2,2,0,0,1,1,2,0,1,2,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,
+0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,
+2,2,1,1,2,1,2,2,2,2,2,1,2,2,0,1,0,0,0,1,2,2,2,1,2,1,1,1,1,1,2,1,
+1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,1,
+1,2,2,2,2,0,1,0,2,2,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
+0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
+0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,2,2,2,2,0,0,0,2,2,2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
+0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,2,2,2,2,0,0,0,0,1,0,0,1,1,2,0,0,0,0,1,0,1,0,0,1,0,0,2,0,0,0,1,
+0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,
+1,2,2,2,1,1,2,0,2,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,
+0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
+1,0,2,1,2,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,
+0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,
+1,0,0,0,0,2,0,1,2,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,
+0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,
+2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+1,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,
+1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+1,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,1,1,0,1,0,0,0,
+0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
+)
+
+Koi8rModel = { \
+  'charToOrderMap': KOI8R_CharToOrderMap,
+  'precedenceMatrix': RussianLangModel,
+  'mTypicalPositiveRatio': 0.976601,
+  'keepEnglishLetter': False,
+  'charsetName': "KOI8-R"
+}
+
+Win1251CyrillicModel = { \
+  'charToOrderMap': win1251_CharToOrderMap,
+  'precedenceMatrix': RussianLangModel,
+  'mTypicalPositiveRatio': 0.976601,
+  'keepEnglishLetter': False,
+  'charsetName': "windows-1251"
+}
+
+Latin5CyrillicModel = { \
+  'charToOrderMap': latin5_CharToOrderMap,
+  'precedenceMatrix': RussianLangModel,
+  'mTypicalPositiveRatio': 0.976601,
+  'keepEnglishLetter': False,
+  'charsetName': "ISO-8859-5"
+}
+
+MacCyrillicModel = { \
+  'charToOrderMap': macCyrillic_CharToOrderMap,
+  'precedenceMatrix': RussianLangModel,
+  'mTypicalPositiveRatio': 0.976601,
+  'keepEnglishLetter': False,
+  'charsetName': "MacCyrillic"
+};
+
+Ibm866Model = { \
+  'charToOrderMap': IBM866_CharToOrderMap,
+  'precedenceMatrix': RussianLangModel,
+  'mTypicalPositiveRatio': 0.976601,
+  'keepEnglishLetter': False,
+  'charsetName': "IBM866"
+}
+
+Ibm855Model = { \
+  'charToOrderMap': IBM855_CharToOrderMap,
+  'precedenceMatrix': RussianLangModel,
+  'mTypicalPositiveRatio': 0.976601,
+  'keepEnglishLetter': False,
+  'charsetName': "IBM855"
+}
--- a/subsdownloader2/src/SourceCode/chardet/langgreekmodel.py
+++ b/subsdownloader2/src/SourceCode/chardet/langgreekmodel.py
@@ -1,225 +1,225 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants
-
-# 255: Control characters that usually does not exist in any text
-# 254: Carriage/Return
-# 253: symbol (punctuation) that does not belong to word
-# 252: 0 - 9
-
-# Character Mapping Table:
-Latin7_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  # 40
- 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  # 50
-253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  # 60
- 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  # 70
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 80
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 90
-253,233, 90,253,253,253,253,253,253,253,253,253,253, 74,253,253,  # a0
-253,253,253,253,247,248, 61, 36, 46, 71, 73,253, 54,253,108,123,  # b0
-110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  # c0
- 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  # d0
-124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  # e0
-  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253,  # f0
-)
-
-win1253_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  # 40
- 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  # 50
-253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  # 60
- 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  # 70
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 80
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 90
-253,233, 61,253,253,253,253,253,253,253,253,253,253, 74,253,253,  # a0
-253,253,253,253,247,253,253, 36, 46, 71, 73,253, 54,253,108,123,  # b0
-110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  # c0
- 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  # d0
-124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  # e0
-  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253,  # f0
-)
-
-# Model Table: 
-# total sequences: 100%
-# first 512 sequences: 98.2851%
-# first 1024 sequences:1.7001%
-# rest  sequences:     0.0359%
-# negative sequences:  0.0148% 
-GreekLangModel = ( \
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,3,2,2,3,3,3,3,3,3,3,3,1,3,3,3,0,2,2,3,3,0,3,0,3,2,0,3,3,3,0,
-3,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,0,3,3,0,3,2,3,3,0,3,2,3,3,3,0,0,3,0,3,0,3,3,2,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,
-0,2,3,2,2,3,3,3,3,3,3,3,3,0,3,3,3,3,0,2,3,3,0,3,3,3,3,2,3,3,3,0,
-2,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,2,1,3,3,3,3,2,3,3,2,3,3,2,0,
-0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,2,3,3,0,
-2,0,1,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,2,3,0,0,0,0,3,3,0,3,1,3,3,3,0,3,3,0,3,3,3,3,0,0,0,0,
-2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,0,3,0,3,3,3,3,3,0,3,2,2,2,3,0,2,3,3,3,3,3,2,3,3,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,3,2,2,2,3,3,3,3,0,3,1,3,3,3,3,2,3,3,3,3,3,3,3,2,2,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,2,0,3,0,0,0,3,3,2,3,3,3,3,3,0,0,3,2,3,0,2,3,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,0,3,3,3,3,0,0,3,3,0,2,3,0,3,0,3,3,3,0,0,3,0,3,0,2,2,3,3,0,0,
-0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,2,0,3,2,3,3,3,3,0,3,3,3,3,3,0,3,3,2,3,2,3,3,2,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,2,3,2,3,3,3,3,3,3,0,2,3,2,3,2,2,2,3,2,3,3,2,3,0,2,2,2,3,0,
-2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,3,0,0,0,3,3,3,2,3,3,0,0,3,0,3,0,0,0,3,2,0,3,0,3,0,0,2,0,2,0,
-0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,0,0,0,3,3,0,3,3,3,0,0,1,2,3,0,
-3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,2,0,0,3,2,2,3,3,0,3,3,3,3,3,2,1,3,0,3,2,3,3,2,1,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,3,3,0,2,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,3,0,3,2,3,0,0,3,3,3,0,
-3,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,0,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,2,0,3,2,3,0,0,3,2,3,0,
-2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,3,1,2,2,3,3,3,3,3,3,0,2,3,0,3,0,0,0,3,3,0,3,0,2,0,0,2,3,1,0,
-2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,0,3,3,3,3,0,3,0,3,3,2,3,0,3,3,3,3,3,3,0,3,3,3,0,2,3,0,0,3,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,0,3,3,3,0,0,3,0,0,0,3,3,0,3,0,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,3,0,0,0,3,3,3,3,3,3,0,0,3,0,2,0,0,0,3,3,0,3,0,3,0,0,2,0,2,0,
-0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,3,0,3,0,2,0,3,2,0,3,2,3,2,3,0,0,3,2,3,2,3,3,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,3,0,0,2,3,3,3,3,3,0,0,0,3,0,2,1,0,0,3,2,2,2,0,3,0,0,2,2,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,0,3,3,3,2,0,3,0,3,0,3,3,0,2,1,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,2,3,3,3,0,3,3,3,3,3,3,0,2,3,0,3,0,0,0,2,1,0,2,2,3,0,0,2,2,2,0,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,3,0,0,2,3,3,3,2,3,0,0,1,3,0,2,0,0,0,0,3,0,1,0,2,0,0,1,1,1,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,3,1,0,3,0,0,0,3,2,0,3,2,3,3,3,0,0,3,0,3,2,2,2,1,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,0,3,3,3,0,0,3,0,0,0,0,2,0,2,3,3,2,2,2,2,3,0,2,0,2,2,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,3,3,3,2,0,0,0,0,0,0,2,3,0,2,0,2,3,2,0,0,3,0,3,0,3,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,3,2,3,3,2,2,3,0,2,0,3,0,0,0,2,0,0,0,0,1,2,0,2,0,2,0,
-0,2,0,2,0,2,2,0,0,1,0,2,2,2,0,2,2,2,0,2,2,2,0,0,2,0,0,1,0,0,0,0,
-0,2,0,3,3,2,0,0,0,0,0,0,1,3,0,2,0,2,2,2,0,0,2,0,3,0,0,2,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,0,2,3,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,0,0,0,0,0,0,2,3,0,0,0,2,
-0,1,2,0,0,0,0,2,2,0,0,0,2,1,0,2,2,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,
-0,0,2,1,0,2,3,2,2,3,2,3,2,0,0,3,3,3,0,0,3,2,0,0,0,1,1,0,2,0,2,2,
-0,2,0,2,0,2,2,0,0,2,0,2,2,2,0,2,2,2,2,0,0,2,0,0,0,2,0,1,0,0,0,0,
-0,3,0,3,3,2,2,0,3,0,0,0,2,2,0,2,2,2,1,2,0,0,1,2,2,0,0,3,0,0,0,2,
-0,1,2,0,0,0,1,2,0,0,0,0,0,0,0,2,2,0,1,0,0,2,0,0,0,2,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,2,3,3,2,2,0,0,0,2,0,2,3,3,0,2,0,0,0,0,0,0,2,2,2,0,2,2,0,2,0,2,
-0,2,2,0,0,2,2,2,2,1,0,0,2,2,0,2,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,
-0,2,0,3,2,3,0,0,0,3,0,0,2,2,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,0,2,
-0,0,2,2,0,0,2,2,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,2,0,0,3,2,0,2,2,2,2,2,0,0,0,2,0,0,0,0,2,0,1,0,0,2,0,1,0,0,0,
-0,2,2,2,0,2,2,0,1,2,0,2,2,2,0,2,2,2,2,1,2,2,0,0,2,0,0,0,0,0,0,0,
-0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
-0,2,0,2,0,2,2,0,0,0,0,1,2,1,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,3,2,3,0,0,2,0,0,0,2,2,0,2,0,0,0,1,0,0,2,0,2,0,2,2,0,0,0,0,
-0,0,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,
-0,2,2,3,2,2,0,0,0,0,0,0,1,3,0,2,0,2,2,0,0,0,1,0,2,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,2,0,2,0,3,2,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-0,0,2,0,0,0,0,1,1,0,0,2,1,2,0,2,2,0,1,0,0,1,0,0,0,2,0,0,0,0,0,0,
-0,3,0,2,2,2,0,0,2,0,0,0,2,0,0,0,2,3,0,2,0,0,0,0,0,0,2,2,0,0,0,2,
-0,1,2,0,0,0,1,2,2,1,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,2,1,2,0,2,2,0,2,0,0,2,0,0,0,0,1,2,1,0,2,1,0,0,0,0,0,0,0,0,0,0,
-0,0,2,0,0,0,3,1,2,2,0,2,0,0,0,0,2,0,0,0,2,0,0,3,0,0,0,0,2,2,2,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,2,1,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,2,
-0,2,2,0,0,2,2,2,2,2,0,1,2,0,0,0,2,2,0,1,0,2,0,0,2,2,0,0,0,0,0,0,
-0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,
-0,1,2,0,0,0,0,2,2,1,0,1,0,1,0,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,
-0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,1,0,0,0,0,0,0,2,
-0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,
-0,2,2,2,2,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,1,
-0,0,2,0,0,0,0,1,2,0,0,0,0,0,0,2,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,
-0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,2,
-0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
-0,3,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,
-0,0,2,0,0,0,0,2,2,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,2,0,2,2,1,0,0,0,0,0,0,2,0,0,2,0,2,2,2,0,0,0,0,0,0,2,0,0,0,0,2,
-0,0,2,0,0,2,0,2,2,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,
-0,0,3,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,
-0,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,
-0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
-0,2,0,0,0,2,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,0,0,0,
-0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,2,0,2,0,0,0,
-0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-)
-
-Latin7GreekModel = { \
-  'charToOrderMap': Latin7_CharToOrderMap,
-  'precedenceMatrix': GreekLangModel,
-  'mTypicalPositiveRatio': 0.982851,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "ISO-8859-7"
-}
-
-Win1253GreekModel = { \
-  'charToOrderMap': win1253_CharToOrderMap,
-  'precedenceMatrix': GreekLangModel,
-  'mTypicalPositiveRatio': 0.982851,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "windows-1253"
-}
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+
+# 255: Control characters that usually does not exist in any text
+# 254: Carriage/Return
+# 253: symbol (punctuation) that does not belong to word
+# 252: 0 - 9
+
+# Character Mapping Table:
+Latin7_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  # 40
+ 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  # 50
+253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  # 60
+ 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  # 70
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 80
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 90
+253,233, 90,253,253,253,253,253,253,253,253,253,253, 74,253,253,  # a0
+253,253,253,253,247,248, 61, 36, 46, 71, 73,253, 54,253,108,123,  # b0
+110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  # c0
+ 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  # d0
+124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  # e0
+  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253,  # f0
+)
+
+win1253_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253, 82,100,104, 94, 98,101,116,102,111,187,117, 92, 88,113, 85,  # 40
+ 79,118,105, 83, 67,114,119, 95, 99,109,188,253,253,253,253,253,  # 50
+253, 72, 70, 80, 81, 60, 96, 93, 89, 68,120, 97, 77, 86, 69, 55,  # 60
+ 78,115, 65, 66, 58, 76,106,103, 87,107,112,253,253,253,253,253,  # 70
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 80
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 90
+253,233, 61,253,253,253,253,253,253,253,253,253,253, 74,253,253,  # a0
+253,253,253,253,247,253,253, 36, 46, 71, 73,253, 54,253,108,123,  # b0
+110, 31, 51, 43, 41, 34, 91, 40, 52, 47, 44, 53, 38, 49, 59, 39,  # c0
+ 35, 48,250, 37, 33, 45, 56, 50, 84, 57,120,121, 17, 18, 22, 15,  # d0
+124,  1, 29, 20, 21,  3, 32, 13, 25,  5, 11, 16, 10,  6, 30,  4,  # e0
+  9,  8, 14,  7,  2, 12, 28, 23, 42, 24, 64, 75, 19, 26, 27,253,  # f0
+)
+
+# Model Table: 
+# total sequences: 100%
+# first 512 sequences: 98.2851%
+# first 1024 sequences:1.7001%
+# rest  sequences:     0.0359%
+# negative sequences:  0.0148% 
+GreekLangModel = ( \
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,3,2,2,3,3,3,3,3,3,3,3,1,3,3,3,0,2,2,3,3,0,3,0,3,2,0,3,3,3,0,
+3,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,0,3,3,0,3,2,3,3,0,3,2,3,3,3,0,0,3,0,3,0,3,3,2,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,
+0,2,3,2,2,3,3,3,3,3,3,3,3,0,3,3,3,3,0,2,3,3,0,3,3,3,3,2,3,3,3,0,
+2,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,2,1,3,3,3,3,2,3,3,2,3,3,2,0,
+0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,2,3,3,0,
+2,0,1,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,2,3,0,0,0,0,3,3,0,3,1,3,3,3,0,3,3,0,3,3,3,3,0,0,0,0,
+2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,0,3,0,3,3,3,3,3,0,3,2,2,2,3,0,2,3,3,3,3,3,2,3,3,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,3,2,2,2,3,3,3,3,0,3,1,3,3,3,3,2,3,3,3,3,3,3,3,2,2,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,2,0,3,0,0,0,3,3,2,3,3,3,3,3,0,0,3,2,3,0,2,3,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,0,3,3,3,3,0,0,3,3,0,2,3,0,3,0,3,3,3,0,0,3,0,3,0,2,2,3,3,0,0,
+0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,2,0,3,2,3,3,3,3,0,3,3,3,3,3,0,3,3,2,3,2,3,3,2,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,2,3,2,3,3,3,3,3,3,0,2,3,2,3,2,2,2,3,2,3,3,2,3,0,2,2,2,3,0,
+2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,3,0,0,0,3,3,3,2,3,3,0,0,3,0,3,0,0,0,3,2,0,3,0,3,0,0,2,0,2,0,
+0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,0,0,0,3,3,0,3,3,3,0,0,1,2,3,0,
+3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,2,0,0,3,2,2,3,3,0,3,3,3,3,3,2,1,3,0,3,2,3,3,2,1,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,3,3,0,2,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,3,0,3,2,3,0,0,3,3,3,0,
+3,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,0,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,2,0,3,2,3,0,0,3,2,3,0,
+2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,3,1,2,2,3,3,3,3,3,3,0,2,3,0,3,0,0,0,3,3,0,3,0,2,0,0,2,3,1,0,
+2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,0,3,3,3,3,0,3,0,3,3,2,3,0,3,3,3,3,3,3,0,3,3,3,0,2,3,0,0,3,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,0,3,3,3,0,0,3,0,0,0,3,3,0,3,0,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,3,0,0,0,3,3,3,3,3,3,0,0,3,0,2,0,0,0,3,3,0,3,0,3,0,0,2,0,2,0,
+0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,3,0,3,0,2,0,3,2,0,3,2,3,2,3,0,0,3,2,3,2,3,3,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,3,0,0,2,3,3,3,3,3,0,0,0,3,0,2,1,0,0,3,2,2,2,0,3,0,0,2,2,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,0,3,3,3,2,0,3,0,3,0,3,3,0,2,1,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,2,3,3,3,0,3,3,3,3,3,3,0,2,3,0,3,0,0,0,2,1,0,2,2,3,0,0,2,2,2,0,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,3,0,0,2,3,3,3,2,3,0,0,1,3,0,2,0,0,0,0,3,0,1,0,2,0,0,1,1,1,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,3,1,0,3,0,0,0,3,2,0,3,2,3,3,3,0,0,3,0,3,2,2,2,1,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,0,3,3,3,0,0,3,0,0,0,0,2,0,2,3,3,2,2,2,2,3,0,2,0,2,2,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,3,3,3,2,0,0,0,0,0,0,2,3,0,2,0,2,3,2,0,0,3,0,3,0,3,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,3,2,3,3,2,2,3,0,2,0,3,0,0,0,2,0,0,0,0,1,2,0,2,0,2,0,
+0,2,0,2,0,2,2,0,0,1,0,2,2,2,0,2,2,2,0,2,2,2,0,0,2,0,0,1,0,0,0,0,
+0,2,0,3,3,2,0,0,0,0,0,0,1,3,0,2,0,2,2,2,0,0,2,0,3,0,0,2,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,0,2,3,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,0,0,0,0,0,0,2,3,0,0,0,2,
+0,1,2,0,0,0,0,2,2,0,0,0,2,1,0,2,2,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,
+0,0,2,1,0,2,3,2,2,3,2,3,2,0,0,3,3,3,0,0,3,2,0,0,0,1,1,0,2,0,2,2,
+0,2,0,2,0,2,2,0,0,2,0,2,2,2,0,2,2,2,2,0,0,2,0,0,0,2,0,1,0,0,0,0,
+0,3,0,3,3,2,2,0,3,0,0,0,2,2,0,2,2,2,1,2,0,0,1,2,2,0,0,3,0,0,0,2,
+0,1,2,0,0,0,1,2,0,0,0,0,0,0,0,2,2,0,1,0,0,2,0,0,0,2,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,2,3,3,2,2,0,0,0,2,0,2,3,3,0,2,0,0,0,0,0,0,2,2,2,0,2,2,0,2,0,2,
+0,2,2,0,0,2,2,2,2,1,0,0,2,2,0,2,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,
+0,2,0,3,2,3,0,0,0,3,0,0,2,2,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,0,2,
+0,0,2,2,0,0,2,2,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,2,0,0,3,2,0,2,2,2,2,2,0,0,0,2,0,0,0,0,2,0,1,0,0,2,0,1,0,0,0,
+0,2,2,2,0,2,2,0,1,2,0,2,2,2,0,2,2,2,2,1,2,2,0,0,2,0,0,0,0,0,0,0,
+0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
+0,2,0,2,0,2,2,0,0,0,0,1,2,1,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,3,2,3,0,0,2,0,0,0,2,2,0,2,0,0,0,1,0,0,2,0,2,0,2,2,0,0,0,0,
+0,0,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,
+0,2,2,3,2,2,0,0,0,0,0,0,1,3,0,2,0,2,2,0,0,0,1,0,2,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,2,0,2,0,3,2,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+0,0,2,0,0,0,0,1,1,0,0,2,1,2,0,2,2,0,1,0,0,1,0,0,0,2,0,0,0,0,0,0,
+0,3,0,2,2,2,0,0,2,0,0,0,2,0,0,0,2,3,0,2,0,0,0,0,0,0,2,2,0,0,0,2,
+0,1,2,0,0,0,1,2,2,1,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,2,1,2,0,2,2,0,2,0,0,2,0,0,0,0,1,2,1,0,2,1,0,0,0,0,0,0,0,0,0,0,
+0,0,2,0,0,0,3,1,2,2,0,2,0,0,0,0,2,0,0,0,2,0,0,3,0,0,0,0,2,2,2,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,2,1,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,2,
+0,2,2,0,0,2,2,2,2,2,0,1,2,0,0,0,2,2,0,1,0,2,0,0,2,2,0,0,0,0,0,0,
+0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,
+0,1,2,0,0,0,0,2,2,1,0,1,0,1,0,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,
+0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,1,0,0,0,0,0,0,2,
+0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,
+0,2,2,2,2,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,1,
+0,0,2,0,0,0,0,1,2,0,0,0,0,0,0,2,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,
+0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,2,
+0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
+0,3,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,
+0,0,2,0,0,0,0,2,2,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,2,0,2,2,1,0,0,0,0,0,0,2,0,0,2,0,2,2,2,0,0,0,0,0,0,2,0,0,0,0,2,
+0,0,2,0,0,2,0,2,2,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,
+0,0,3,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,
+0,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,
+0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
+0,2,0,0,0,2,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,0,0,0,
+0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,2,0,2,0,0,0,
+0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+)
+
+Latin7GreekModel = { \
+  'charToOrderMap': Latin7_CharToOrderMap,
+  'precedenceMatrix': GreekLangModel,
+  'mTypicalPositiveRatio': 0.982851,
+  'keepEnglishLetter': False,
+  'charsetName': "ISO-8859-7"
+}
+
+Win1253GreekModel = { \
+  'charToOrderMap': win1253_CharToOrderMap,
+  'precedenceMatrix': GreekLangModel,
+  'mTypicalPositiveRatio': 0.982851,
+  'keepEnglishLetter': False,
+  'charsetName': "windows-1253"
+}
--- a/subsdownloader2/src/SourceCode/chardet/langhebrewmodel.py
+++ b/subsdownloader2/src/SourceCode/chardet/langhebrewmodel.py
@@ -1,201 +1,201 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-#          Simon Montagu
-# Portions created by the Initial Developer are Copyright (C) 2005
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#   Shy Shalom - original C code
-#   Shoshannah Forbes - original C code (?)
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants
-
-# 255: Control characters that usually does not exist in any text
-# 254: Carriage/Return
-# 253: symbol (punctuation) that does not belong to word
-# 252: 0 - 9
-
-# Windows-1255 language model
-# Character Mapping Table:
-win1255_CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253, 69, 91, 79, 80, 92, 89, 97, 90, 68,111,112, 82, 73, 95, 85,  # 40
- 78,121, 86, 71, 67,102,107, 84,114,103,115,253,253,253,253,253,  # 50
-253, 50, 74, 60, 61, 42, 76, 70, 64, 53,105, 93, 56, 65, 54, 49,  # 60
- 66,110, 51, 43, 44, 63, 81, 77, 98, 75,108,253,253,253,253,253,  # 70
-124,202,203,204,205, 40, 58,206,207,208,209,210,211,212,213,214,
-215, 83, 52, 47, 46, 72, 32, 94,216,113,217,109,218,219,220,221,
- 34,116,222,118,100,223,224,117,119,104,125,225,226, 87, 99,227,
-106,122,123,228, 55,229,230,101,231,232,120,233, 48, 39, 57,234,
- 30, 59, 41, 88, 33, 37, 36, 31, 29, 35,235, 62, 28,236,126,237,
-238, 38, 45,239,240,241,242,243,127,244,245,246,247,248,249,250,
-  9,  8, 20, 16,  3,  2, 24, 14, 22,  1, 25, 15,  4, 11,  6, 23,
- 12, 19, 13, 26, 18, 27, 21, 17,  7, 10,  5,251,252,128, 96,253,
-)
-
-# Model Table: 
-# total sequences: 100%
-# first 512 sequences: 98.4004%
-# first 1024 sequences: 1.5981%
-# rest  sequences:      0.087%
-# negative sequences:   0.0015% 
-HebrewLangModel = ( \
-0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,2,1,2,0,1,0,0,
-3,0,3,1,0,0,1,3,2,0,1,1,2,0,2,2,2,1,1,1,1,2,1,1,1,2,0,0,2,2,0,1,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,
-1,2,1,2,1,2,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,
-1,2,1,3,1,1,0,0,2,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,1,2,2,1,3,
-1,2,1,1,2,2,0,0,2,2,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,2,2,2,3,2,
-1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,2,3,2,2,2,1,2,2,2,2,
-1,2,1,1,2,2,0,1,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,2,2,2,2,2,
-0,2,0,2,2,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,0,2,2,2,
-0,2,1,2,2,2,0,0,2,1,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,3,2,2,2,
-1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,
-3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,2,0,2,
-0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,3,2,1,2,1,1,1,
-0,1,1,1,1,1,3,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,
-0,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,
-0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,2,3,3,3,2,1,2,3,3,2,3,3,3,3,2,3,2,1,2,0,2,1,2,
-0,2,0,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,
-3,3,3,3,3,3,3,3,3,2,3,3,3,1,2,2,3,3,2,3,2,3,2,2,3,1,2,2,0,2,2,2,
-0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,2,2,3,3,3,3,1,3,2,2,2,
-0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,2,2,2,1,2,2,0,2,2,2,2,
-0,2,0,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,1,3,2,3,3,2,3,3,2,2,1,2,2,2,2,2,2,
-0,2,1,2,1,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,2,3,2,3,3,3,3,3,2,2,2,2,2,2,2,1,
-0,2,0,1,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,2,1,2,3,3,3,3,3,3,3,2,3,2,3,2,1,2,3,0,2,1,2,2,
-0,2,1,1,2,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,
-3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,1,3,1,2,2,2,1,2,3,3,1,2,1,2,2,2,2,
-0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,0,2,3,3,3,1,3,3,3,1,2,2,2,2,1,1,2,2,2,2,2,2,
-0,2,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,2,3,3,3,2,2,3,3,3,2,1,2,3,2,3,2,2,2,2,1,2,1,1,1,2,2,
-0,2,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,
-1,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,2,3,3,2,3,1,2,2,2,2,3,2,3,1,1,2,2,1,2,2,1,1,0,2,2,2,2,
-0,1,0,1,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
-3,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,
-0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
-3,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,2,1,1,1,1,1,1,1,1,2,1,1,0,3,3,3,
-0,3,0,2,2,2,2,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,1,1,1,2,0,1,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0,0,0,0,0,
-0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,0,2,1,0,
-0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
-0,3,1,1,2,2,2,2,2,1,2,2,2,1,1,2,2,2,2,2,2,2,1,2,2,1,0,1,1,1,1,0,
-0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,2,1,1,1,1,2,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,
-0,0,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,
-2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,1,2,1,1,1,1,0,0,0,0,
-0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,0,1,0,1,
-0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,3,1,2,2,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,2,1,2,1,1,0,1,0,1,
-0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,1,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,
-0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,2,0,1,1,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,
-0,1,1,1,2,1,2,2,2,0,2,0,2,0,1,1,2,1,1,1,1,2,1,0,1,1,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,1,0,0,0,0,0,1,0,1,2,2,0,1,0,0,1,1,2,2,1,2,0,2,0,0,0,1,2,0,1,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,2,0,2,1,2,0,2,0,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,1,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,1,2,2,0,0,1,0,0,0,1,0,0,1,
-1,1,2,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,2,1,
-0,2,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,1,0,1,
-2,0,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,2,1,1,2,0,1,0,0,0,1,1,0,1,
-1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,0,0,2,1,1,2,0,2,0,0,0,1,1,0,1,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,2,2,1,2,1,1,0,1,0,0,0,1,1,0,1,
-2,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,2,1,1,1,0,2,1,1,0,0,0,2,1,0,1,
-1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,0,2,1,1,0,1,0,0,0,1,1,0,1,
-2,2,1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,0,1,2,1,0,2,0,0,0,1,1,0,1,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,
-0,1,0,0,2,0,2,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,1,
-1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,
-0,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,1,0,0,
-)
-
-Win1255HebrewModel = { \
-  'charToOrderMap': win1255_CharToOrderMap,
-  'precedenceMatrix': HebrewLangModel,
-  'mTypicalPositiveRatio': 0.984004,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "windows-1255"
-}
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+#          Simon Montagu
+# Portions created by the Initial Developer are Copyright (C) 2005
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#   Shy Shalom - original C code
+#   Shoshannah Forbes - original C code (?)
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+
+# 255: Control characters that usually does not exist in any text
+# 254: Carriage/Return
+# 253: symbol (punctuation) that does not belong to word
+# 252: 0 - 9
+
+# Windows-1255 language model
+# Character Mapping Table:
+win1255_CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253, 69, 91, 79, 80, 92, 89, 97, 90, 68,111,112, 82, 73, 95, 85,  # 40
+ 78,121, 86, 71, 67,102,107, 84,114,103,115,253,253,253,253,253,  # 50
+253, 50, 74, 60, 61, 42, 76, 70, 64, 53,105, 93, 56, 65, 54, 49,  # 60
+ 66,110, 51, 43, 44, 63, 81, 77, 98, 75,108,253,253,253,253,253,  # 70
+124,202,203,204,205, 40, 58,206,207,208,209,210,211,212,213,214,
+215, 83, 52, 47, 46, 72, 32, 94,216,113,217,109,218,219,220,221,
+ 34,116,222,118,100,223,224,117,119,104,125,225,226, 87, 99,227,
+106,122,123,228, 55,229,230,101,231,232,120,233, 48, 39, 57,234,
+ 30, 59, 41, 88, 33, 37, 36, 31, 29, 35,235, 62, 28,236,126,237,
+238, 38, 45,239,240,241,242,243,127,244,245,246,247,248,249,250,
+  9,  8, 20, 16,  3,  2, 24, 14, 22,  1, 25, 15,  4, 11,  6, 23,
+ 12, 19, 13, 26, 18, 27, 21, 17,  7, 10,  5,251,252,128, 96,253,
+)
+
+# Model Table: 
+# total sequences: 100%
+# first 512 sequences: 98.4004%
+# first 1024 sequences: 1.5981%
+# rest  sequences:      0.087%
+# negative sequences:   0.0015% 
+HebrewLangModel = ( \
+0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,2,1,2,0,1,0,0,
+3,0,3,1,0,0,1,3,2,0,1,1,2,0,2,2,2,1,1,1,1,2,1,1,1,2,0,0,2,2,0,1,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,
+1,2,1,2,1,2,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,
+1,2,1,3,1,1,0,0,2,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,1,2,2,1,3,
+1,2,1,1,2,2,0,0,2,2,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,2,2,2,3,2,
+1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,2,3,2,2,2,1,2,2,2,2,
+1,2,1,1,2,2,0,1,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,2,2,2,2,2,
+0,2,0,2,2,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,0,2,2,2,
+0,2,1,2,2,2,0,0,2,1,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,3,2,2,2,
+1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,
+3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,2,0,2,
+0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,3,2,1,2,1,1,1,
+0,1,1,1,1,1,3,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,
+0,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,
+0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,2,3,3,3,2,1,2,3,3,2,3,3,3,3,2,3,2,1,2,0,2,1,2,
+0,2,0,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,
+3,3,3,3,3,3,3,3,3,2,3,3,3,1,2,2,3,3,2,3,2,3,2,2,3,1,2,2,0,2,2,2,
+0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,2,2,3,3,3,3,1,3,2,2,2,
+0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,2,2,2,1,2,2,0,2,2,2,2,
+0,2,0,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,1,3,2,3,3,2,3,3,2,2,1,2,2,2,2,2,2,
+0,2,1,2,1,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,2,3,2,3,3,3,3,3,2,2,2,2,2,2,2,1,
+0,2,0,1,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,2,1,2,3,3,3,3,3,3,3,2,3,2,3,2,1,2,3,0,2,1,2,2,
+0,2,1,1,2,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,
+3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,1,3,1,2,2,2,1,2,3,3,1,2,1,2,2,2,2,
+0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,0,2,3,3,3,1,3,3,3,1,2,2,2,2,1,1,2,2,2,2,2,2,
+0,2,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,2,3,3,3,2,2,3,3,3,2,1,2,3,2,3,2,2,2,2,1,2,1,1,1,2,2,
+0,2,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,
+1,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,2,3,3,2,3,1,2,2,2,2,3,2,3,1,1,2,2,1,2,2,1,1,0,2,2,2,2,
+0,1,0,1,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,
+3,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,
+0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,
+0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
+3,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,2,1,1,1,1,1,1,1,1,2,1,1,0,3,3,3,
+0,3,0,2,2,2,2,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,1,1,1,2,0,1,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0,0,0,0,0,
+0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,0,2,1,0,
+0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
+0,3,1,1,2,2,2,2,2,1,2,2,2,1,1,2,2,2,2,2,2,2,1,2,2,1,0,1,1,1,1,0,
+0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,2,1,1,1,1,2,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,
+0,0,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,
+2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,1,2,1,1,1,1,0,0,0,0,
+0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,0,1,0,1,
+0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,3,1,2,2,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,2,1,2,1,1,0,1,0,1,
+0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,1,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,
+0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,2,0,1,1,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,
+0,1,1,1,2,1,2,2,2,0,2,0,2,0,1,1,2,1,1,1,1,2,1,0,1,1,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,1,0,0,0,0,0,1,0,1,2,2,0,1,0,0,1,1,2,2,1,2,0,2,0,0,0,1,2,0,1,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,2,0,2,1,2,0,2,0,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,1,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,1,2,2,0,0,1,0,0,0,1,0,0,1,
+1,1,2,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,2,1,
+0,2,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,1,0,1,
+2,0,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,2,1,1,2,0,1,0,0,0,1,1,0,1,
+1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,0,0,2,1,1,2,0,2,0,0,0,1,1,0,1,
+1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,2,2,1,2,1,1,0,1,0,0,0,1,1,0,1,
+2,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,
+1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,2,1,1,1,0,2,1,1,0,0,0,2,1,0,1,
+1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,0,2,1,1,0,1,0,0,0,1,1,0,1,
+2,2,1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,0,1,2,1,0,2,0,0,0,1,1,0,1,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,
+0,1,0,0,2,0,2,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,1,
+1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,
+0,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,1,0,0,
+)
+
+Win1255HebrewModel = { \
+  'charToOrderMap': win1255_CharToOrderMap,
+  'precedenceMatrix': HebrewLangModel,
+  'mTypicalPositiveRatio': 0.984004,
+  'keepEnglishLetter': False,
+  'charsetName': "windows-1255"
+}
--- a/subsdownloader2/src/SourceCode/chardet/langhungarianmodel.py
+++ b/subsdownloader2/src/SourceCode/chardet/langhungarianmodel.py
@@ -1,225 +1,225 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants
-
-# 255: Control characters that usually does not exist in any text
-# 254: Carriage/Return
-# 253: symbol (punctuation) that does not belong to word
-# 252: 0 - 9
-
-# Character Mapping Table:
-Latin2_HungarianCharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,
- 46, 71, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,
-253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,
- 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,
-159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
-175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,
-191,192,193,194,195,196,197, 75,198,199,200,201,202,203,204,205,
- 79,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,
-221, 51, 81,222, 78,223,224,225,226, 44,227,228,229, 61,230,231,
-232,233,234, 58,235, 66, 59,236,237,238, 60, 69, 63,239,240,241,
- 82, 14, 74,242, 70, 80,243, 72,244, 15, 83, 77, 84, 30, 76, 85,
-245,246,247, 25, 73, 42, 24,248,249,250, 31, 56, 29,251,252,253,
-)
-
-win1250HungarianCharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,
- 46, 72, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,
-253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,
- 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,
-161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,
-177,178,179,180, 78,181, 69,182,183,184,185,186,187,188,189,190,
-191,192,193,194,195,196,197, 76,198,199,200,201,202,203,204,205,
- 81,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,
-221, 51, 83,222, 80,223,224,225,226, 44,227,228,229, 61,230,231,
-232,233,234, 58,235, 66, 59,236,237,238, 60, 70, 63,239,240,241,
- 84, 14, 75,242, 71, 82,243, 73,244, 15, 85, 79, 86, 30, 77, 87,
-245,246,247, 25, 74, 42, 24,248,249,250, 31, 56, 29,251,252,253,
-)
-
-# Model Table: 
-# total sequences: 100%
-# first 512 sequences: 94.7368%
-# first 1024 sequences:5.2623%
-# rest  sequences:     0.8894%
-# negative sequences:  0.0009% 
-HungarianLangModel = ( \
-0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
-3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,1,1,2,2,2,2,2,1,2,
-3,2,2,3,3,3,3,3,2,3,3,3,3,3,3,1,2,3,3,3,3,2,3,3,1,1,3,3,0,1,1,1,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
-3,2,1,3,3,3,3,3,2,3,3,3,3,3,1,1,2,3,3,3,3,3,3,3,1,1,3,2,0,1,1,1,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,3,3,1,3,3,3,3,3,1,3,3,2,2,0,3,2,3,
-0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,
-3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,3,3,2,3,3,2,2,3,2,3,2,0,3,2,2,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
-3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,1,2,3,2,2,3,1,2,3,3,2,2,0,3,3,3,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,0,2,3,2,
-0,0,0,1,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,3,2,1,3,2,2,3,2,1,3,2,2,1,0,3,3,1,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,2,2,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,3,2,2,3,1,1,3,2,0,1,1,1,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,1,3,3,3,3,3,2,2,1,3,3,3,0,1,1,2,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
-3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,2,0,3,2,3,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,
-3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,1,3,2,2,2,3,1,1,3,3,1,1,0,3,3,2,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,2,3,3,3,3,3,1,2,3,2,2,0,2,2,2,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,3,3,2,2,2,3,1,3,3,2,2,1,3,3,3,1,1,3,1,2,3,2,3,2,2,2,1,0,2,2,2,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,
-3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,2,2,3,2,1,0,3,2,0,1,1,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,1,0,3,3,3,3,0,2,3,0,0,2,1,0,1,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,2,2,3,3,2,2,2,2,3,3,0,1,2,3,2,3,2,2,3,2,1,2,0,2,2,2,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,
-3,3,3,3,3,3,1,2,3,3,3,2,1,2,3,3,2,2,2,3,2,3,3,1,3,3,1,1,0,2,3,2,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,3,3,1,2,2,2,2,3,3,3,1,1,1,3,3,1,1,3,1,1,3,2,1,2,3,1,1,0,2,2,2,
-0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,3,3,2,1,2,1,1,3,3,1,1,1,1,3,3,1,1,2,2,1,2,1,1,2,2,1,1,0,2,2,1,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,3,3,1,1,2,1,1,3,3,1,0,1,1,3,3,2,0,1,1,2,3,1,0,2,2,1,0,0,1,3,2,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,2,1,3,3,3,3,3,1,2,3,2,3,3,2,1,1,3,2,3,2,1,2,2,0,1,2,1,0,0,1,1,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
-3,3,3,3,2,2,2,2,3,1,2,2,1,1,3,3,0,3,2,1,2,3,2,1,3,3,1,1,0,2,1,3,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,3,3,2,2,2,3,2,3,3,3,2,1,1,3,3,1,1,1,2,2,3,2,3,2,2,2,1,0,2,2,1,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-1,0,0,3,3,3,3,3,0,0,3,3,2,3,0,0,0,2,3,3,1,0,1,2,0,0,1,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,1,2,3,3,3,3,3,1,2,3,3,2,2,1,1,0,3,3,2,2,1,2,2,1,0,2,2,0,1,1,1,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,2,2,1,3,1,2,3,3,2,2,1,1,2,2,1,1,1,1,3,2,1,1,1,1,2,1,0,1,2,1,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
-2,3,3,1,1,1,1,1,3,3,3,0,1,1,3,3,1,1,1,1,1,2,2,0,3,1,1,2,0,2,1,1,
-0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
-3,1,0,1,2,1,2,2,0,1,2,3,1,2,0,0,0,2,1,1,1,1,1,2,0,0,1,1,0,0,0,0,
-1,2,1,2,2,2,1,2,1,2,0,2,0,2,2,1,1,2,1,1,2,1,1,1,0,1,0,0,0,1,1,0,
-1,1,1,2,3,2,3,3,0,1,2,2,3,1,0,1,0,2,1,2,2,0,1,1,0,0,1,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,3,3,2,2,1,0,0,3,2,3,2,0,0,0,1,1,3,0,0,1,1,0,0,2,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,1,1,2,2,3,3,1,0,1,3,2,3,1,1,1,0,1,1,1,1,1,3,1,0,0,2,2,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,1,1,1,2,2,2,1,0,1,2,3,3,2,0,0,0,2,1,1,1,2,1,1,1,0,1,1,1,0,0,0,
-1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,2,1,1,1,1,1,1,0,1,1,1,0,0,1,1,
-3,2,2,1,0,0,1,1,2,2,0,3,0,1,2,1,1,0,0,1,1,1,0,1,1,1,1,0,2,1,1,1,
-2,2,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,1,1,2,3,1,1,1,1,1,1,1,1,1,0,1,
-2,3,3,0,1,0,0,0,3,3,1,0,0,1,2,2,1,0,0,0,0,2,0,0,1,1,1,0,2,1,1,1,
-2,1,1,1,1,1,1,2,1,1,0,1,1,0,1,1,1,0,1,2,1,1,0,1,1,1,1,1,1,1,0,1,
-2,3,3,0,1,0,0,0,2,2,0,0,0,0,1,2,2,0,0,0,0,1,0,0,1,1,0,0,2,0,1,0,
-2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,
-3,2,2,0,1,0,1,0,2,3,2,0,0,1,2,2,1,0,0,1,1,1,0,0,2,1,0,1,2,2,1,1,
-2,1,1,1,1,1,1,2,1,1,1,1,1,1,0,2,1,0,1,1,0,1,1,1,0,1,1,2,1,1,0,1,
-2,2,2,0,0,1,0,0,2,2,1,1,0,0,2,1,1,0,0,0,1,2,0,0,2,1,0,0,2,1,1,1,
-2,1,1,1,1,2,1,2,1,1,1,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,
-1,2,3,0,0,0,1,0,3,2,1,0,0,1,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,2,1,
-1,1,0,0,0,1,0,1,1,1,1,1,2,0,0,1,0,0,0,2,0,0,1,1,1,1,1,1,1,1,0,1,
-3,0,0,2,1,2,2,1,0,0,2,1,2,2,0,0,0,2,1,1,1,0,1,1,0,0,1,1,2,0,0,0,
-1,2,1,2,2,1,1,2,1,2,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,0,0,1,
-1,3,2,0,0,0,1,0,2,2,2,0,0,0,2,2,1,0,0,0,0,3,1,1,1,1,0,0,2,1,1,1,
-2,1,0,1,1,1,0,1,1,1,1,1,1,1,0,2,1,0,0,1,0,1,1,0,1,1,1,1,1,1,0,1,
-2,3,2,0,0,0,1,0,2,2,0,0,0,0,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,1,0,
-2,1,1,1,1,2,1,2,1,2,0,1,1,1,0,2,1,1,1,2,1,1,1,1,0,1,1,1,1,1,0,1,
-3,1,1,2,2,2,3,2,1,1,2,2,1,1,0,1,0,2,2,1,1,1,1,1,0,0,1,1,0,1,1,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,2,2,0,0,0,0,0,2,2,0,0,0,0,2,2,1,0,0,0,1,1,0,0,1,2,0,0,2,1,1,1,
-2,2,1,1,1,2,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,1,1,0,1,2,1,1,1,0,1,
-1,0,0,1,2,3,2,1,0,0,2,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,
-1,2,1,2,1,2,1,1,1,2,0,2,1,1,1,0,1,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,
-2,3,2,0,0,0,0,0,1,1,2,1,0,0,1,1,1,0,0,0,0,2,0,0,1,1,0,0,2,1,1,1,
-2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,2,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,
-1,2,2,0,1,1,1,0,2,2,2,0,0,0,3,2,1,0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,
-1,1,0,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,0,0,1,1,1,0,1,0,1,
-2,1,0,2,1,1,2,2,1,1,2,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,
-1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,
-1,2,3,0,0,0,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,1,0,0,1,0,0,0,2,0,1,0,
-2,1,1,1,1,1,0,2,0,0,0,1,2,1,1,1,1,0,1,2,0,1,0,1,0,1,1,1,0,1,0,1,
-2,2,2,0,0,0,1,0,2,1,2,0,0,0,1,1,2,0,0,0,0,1,0,0,1,1,0,0,2,1,0,1,
-2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,
-1,2,2,0,0,0,1,0,2,2,2,0,0,0,1,1,0,0,0,0,0,1,1,0,2,0,0,1,1,1,0,1,
-1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,
-1,0,0,1,0,1,2,1,0,0,1,1,1,2,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,
-0,2,1,2,1,1,1,1,1,2,0,2,0,1,1,0,1,2,1,0,1,1,1,0,0,0,0,0,0,1,0,0,
-2,1,1,0,1,2,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,2,1,0,1,
-2,2,1,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,
-1,2,2,0,0,0,0,0,1,1,0,0,0,0,2,1,0,0,0,0,0,2,0,0,2,2,0,0,2,0,0,1,
-2,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,
-1,1,2,0,0,3,1,0,2,1,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,
-1,2,1,0,1,1,1,2,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,
-2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,2,0,0,0,
-2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,1,0,1,
-2,1,1,1,2,1,1,1,0,1,1,2,1,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,1,0,1,1,1,1,1,0,0,1,1,2,1,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,0,0,0,
-1,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,
-2,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,2,0,0,1,0,0,1,0,1,0,0,0,
-0,1,1,1,1,1,1,1,1,2,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,
-1,0,0,1,1,1,1,1,0,0,2,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,
-0,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,
-1,0,0,1,1,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
-0,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,
-0,0,0,1,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,1,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,
-2,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
-0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,
-)
-
-Latin2HungarianModel = { \
-  'charToOrderMap': Latin2_HungarianCharToOrderMap,
-  'precedenceMatrix': HungarianLangModel,
-  'mTypicalPositiveRatio': 0.947368,
-  'keepEnglishLetter': constants.True,
-  'charsetName': "ISO-8859-2"
-}
-
-Win1250HungarianModel = { \
-  'charToOrderMap': win1250HungarianCharToOrderMap,
-  'precedenceMatrix': HungarianLangModel,
-  'mTypicalPositiveRatio': 0.947368,
-  'keepEnglishLetter': constants.True,
-  'charsetName': "windows-1250"
-}
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+
+# 255: Control characters that usually does not exist in any text
+# 254: Carriage/Return
+# 253: symbol (punctuation) that does not belong to word
+# 252: 0 - 9
+
+# Character Mapping Table:
+Latin2_HungarianCharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,
+ 46, 71, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,
+253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,
+ 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,
+159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
+175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,
+191,192,193,194,195,196,197, 75,198,199,200,201,202,203,204,205,
+ 79,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,
+221, 51, 81,222, 78,223,224,225,226, 44,227,228,229, 61,230,231,
+232,233,234, 58,235, 66, 59,236,237,238, 60, 69, 63,239,240,241,
+ 82, 14, 74,242, 70, 80,243, 72,244, 15, 83, 77, 84, 30, 76, 85,
+245,246,247, 25, 73, 42, 24,248,249,250, 31, 56, 29,251,252,253,
+)
+
+win1250HungarianCharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253, 28, 40, 54, 45, 32, 50, 49, 38, 39, 53, 36, 41, 34, 35, 47,
+ 46, 72, 43, 33, 37, 57, 48, 64, 68, 55, 52,253,253,253,253,253,
+253,  2, 18, 26, 17,  1, 27, 12, 20,  9, 22,  7,  6, 13,  4,  8,
+ 23, 67, 10,  5,  3, 21, 19, 65, 62, 16, 11,253,253,253,253,253,
+161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,
+177,178,179,180, 78,181, 69,182,183,184,185,186,187,188,189,190,
+191,192,193,194,195,196,197, 76,198,199,200,201,202,203,204,205,
+ 81,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,
+221, 51, 83,222, 80,223,224,225,226, 44,227,228,229, 61,230,231,
+232,233,234, 58,235, 66, 59,236,237,238, 60, 70, 63,239,240,241,
+ 84, 14, 75,242, 71, 82,243, 73,244, 15, 85, 79, 86, 30, 77, 87,
+245,246,247, 25, 74, 42, 24,248,249,250, 31, 56, 29,251,252,253,
+)
+
+# Model Table: 
+# total sequences: 100%
+# first 512 sequences: 94.7368%
+# first 1024 sequences:5.2623%
+# rest  sequences:     0.8894%
+# negative sequences:  0.0009% 
+HungarianLangModel = ( \
+0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
+3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,1,1,2,2,2,2,2,1,2,
+3,2,2,3,3,3,3,3,2,3,3,3,3,3,3,1,2,3,3,3,3,2,3,3,1,1,3,3,0,1,1,1,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
+3,2,1,3,3,3,3,3,2,3,3,3,3,3,1,1,2,3,3,3,3,3,3,3,1,1,3,2,0,1,1,1,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,3,3,1,3,3,3,3,3,1,3,3,2,2,0,3,2,3,
+0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,
+3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,3,3,2,3,3,2,2,3,2,3,2,0,3,2,2,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
+3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,1,2,3,2,2,3,1,2,3,3,2,2,0,3,3,3,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,0,2,3,2,
+0,0,0,1,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,3,2,1,3,2,2,3,2,1,3,2,2,1,0,3,3,1,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,2,2,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,3,2,2,3,1,1,3,2,0,1,1,1,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,1,3,3,3,3,3,2,2,1,3,3,3,0,1,1,2,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
+3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,2,0,3,2,3,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,
+3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,1,3,2,2,2,3,1,1,3,3,1,1,0,3,3,2,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,2,3,3,3,3,3,1,2,3,2,2,0,2,2,2,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,3,3,2,2,2,3,1,3,3,2,2,1,3,3,3,1,1,3,1,2,3,2,3,2,2,2,1,0,2,2,2,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,
+3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,2,2,3,2,1,0,3,2,0,1,1,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,1,0,3,3,3,3,0,2,3,0,0,2,1,0,1,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,2,2,3,3,2,2,2,2,3,3,0,1,2,3,2,3,2,2,3,2,1,2,0,2,2,2,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,
+3,3,3,3,3,3,1,2,3,3,3,2,1,2,3,3,2,2,2,3,2,3,3,1,3,3,1,1,0,2,3,2,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,3,3,1,2,2,2,2,3,3,3,1,1,1,3,3,1,1,3,1,1,3,2,1,2,3,1,1,0,2,2,2,
+0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,3,3,2,1,2,1,1,3,3,1,1,1,1,3,3,1,1,2,2,1,2,1,1,2,2,1,1,0,2,2,1,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,3,3,1,1,2,1,1,3,3,1,0,1,1,3,3,2,0,1,1,2,3,1,0,2,2,1,0,0,1,3,2,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,2,1,3,3,3,3,3,1,2,3,2,3,3,2,1,1,3,2,3,2,1,2,2,0,1,2,1,0,0,1,1,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
+3,3,3,3,2,2,2,2,3,1,2,2,1,1,3,3,0,3,2,1,2,3,2,1,3,3,1,1,0,2,1,3,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,3,3,2,2,2,3,2,3,3,3,2,1,1,3,3,1,1,1,2,2,3,2,3,2,2,2,1,0,2,2,1,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+1,0,0,3,3,3,3,3,0,0,3,3,2,3,0,0,0,2,3,3,1,0,1,2,0,0,1,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,1,2,3,3,3,3,3,1,2,3,3,2,2,1,1,0,3,3,2,2,1,2,2,1,0,2,2,0,1,1,1,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,2,2,1,3,1,2,3,3,2,2,1,1,2,2,1,1,1,1,3,2,1,1,1,1,2,1,0,1,2,1,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
+2,3,3,1,1,1,1,1,3,3,3,0,1,1,3,3,1,1,1,1,1,2,2,0,3,1,1,2,0,2,1,1,
+0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
+3,1,0,1,2,1,2,2,0,1,2,3,1,2,0,0,0,2,1,1,1,1,1,2,0,0,1,1,0,0,0,0,
+1,2,1,2,2,2,1,2,1,2,0,2,0,2,2,1,1,2,1,1,2,1,1,1,0,1,0,0,0,1,1,0,
+1,1,1,2,3,2,3,3,0,1,2,2,3,1,0,1,0,2,1,2,2,0,1,1,0,0,1,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,3,3,2,2,1,0,0,3,2,3,2,0,0,0,1,1,3,0,0,1,1,0,0,2,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,1,1,2,2,3,3,1,0,1,3,2,3,1,1,1,0,1,1,1,1,1,3,1,0,0,2,2,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,1,1,1,2,2,2,1,0,1,2,3,3,2,0,0,0,2,1,1,1,2,1,1,1,0,1,1,1,0,0,0,
+1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,2,1,1,1,1,1,1,0,1,1,1,0,0,1,1,
+3,2,2,1,0,0,1,1,2,2,0,3,0,1,2,1,1,0,0,1,1,1,0,1,1,1,1,0,2,1,1,1,
+2,2,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,1,1,2,3,1,1,1,1,1,1,1,1,1,0,1,
+2,3,3,0,1,0,0,0,3,3,1,0,0,1,2,2,1,0,0,0,0,2,0,0,1,1,1,0,2,1,1,1,
+2,1,1,1,1,1,1,2,1,1,0,1,1,0,1,1,1,0,1,2,1,1,0,1,1,1,1,1,1,1,0,1,
+2,3,3,0,1,0,0,0,2,2,0,0,0,0,1,2,2,0,0,0,0,1,0,0,1,1,0,0,2,0,1,0,
+2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,
+3,2,2,0,1,0,1,0,2,3,2,0,0,1,2,2,1,0,0,1,1,1,0,0,2,1,0,1,2,2,1,1,
+2,1,1,1,1,1,1,2,1,1,1,1,1,1,0,2,1,0,1,1,0,1,1,1,0,1,1,2,1,1,0,1,
+2,2,2,0,0,1,0,0,2,2,1,1,0,0,2,1,1,0,0,0,1,2,0,0,2,1,0,0,2,1,1,1,
+2,1,1,1,1,2,1,2,1,1,1,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,
+1,2,3,0,0,0,1,0,3,2,1,0,0,1,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,2,1,
+1,1,0,0,0,1,0,1,1,1,1,1,2,0,0,1,0,0,0,2,0,0,1,1,1,1,1,1,1,1,0,1,
+3,0,0,2,1,2,2,1,0,0,2,1,2,2,0,0,0,2,1,1,1,0,1,1,0,0,1,1,2,0,0,0,
+1,2,1,2,2,1,1,2,1,2,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,0,0,1,
+1,3,2,0,0,0,1,0,2,2,2,0,0,0,2,2,1,0,0,0,0,3,1,1,1,1,0,0,2,1,1,1,
+2,1,0,1,1,1,0,1,1,1,1,1,1,1,0,2,1,0,0,1,0,1,1,0,1,1,1,1,1,1,0,1,
+2,3,2,0,0,0,1,0,2,2,0,0,0,0,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,1,0,
+2,1,1,1,1,2,1,2,1,2,0,1,1,1,0,2,1,1,1,2,1,1,1,1,0,1,1,1,1,1,0,1,
+3,1,1,2,2,2,3,2,1,1,2,2,1,1,0,1,0,2,2,1,1,1,1,1,0,0,1,1,0,1,1,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,2,2,0,0,0,0,0,2,2,0,0,0,0,2,2,1,0,0,0,1,1,0,0,1,2,0,0,2,1,1,1,
+2,2,1,1,1,2,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,1,1,0,1,2,1,1,1,0,1,
+1,0,0,1,2,3,2,1,0,0,2,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,
+1,2,1,2,1,2,1,1,1,2,0,2,1,1,1,0,1,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,
+2,3,2,0,0,0,0,0,1,1,2,1,0,0,1,1,1,0,0,0,0,2,0,0,1,1,0,0,2,1,1,1,
+2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,2,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,
+1,2,2,0,1,1,1,0,2,2,2,0,0,0,3,2,1,0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,
+1,1,0,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,0,0,1,1,1,0,1,0,1,
+2,1,0,2,1,1,2,2,1,1,2,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,
+1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,
+1,2,3,0,0,0,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,1,0,0,1,0,0,0,2,0,1,0,
+2,1,1,1,1,1,0,2,0,0,0,1,2,1,1,1,1,0,1,2,0,1,0,1,0,1,1,1,0,1,0,1,
+2,2,2,0,0,0,1,0,2,1,2,0,0,0,1,1,2,0,0,0,0,1,0,0,1,1,0,0,2,1,0,1,
+2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,
+1,2,2,0,0,0,1,0,2,2,2,0,0,0,1,1,0,0,0,0,0,1,1,0,2,0,0,1,1,1,0,1,
+1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,
+1,0,0,1,0,1,2,1,0,0,1,1,1,2,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,
+0,2,1,2,1,1,1,1,1,2,0,2,0,1,1,0,1,2,1,0,1,1,1,0,0,0,0,0,0,1,0,0,
+2,1,1,0,1,2,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,2,1,0,1,
+2,2,1,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,
+1,2,2,0,0,0,0,0,1,1,0,0,0,0,2,1,0,0,0,0,0,2,0,0,2,2,0,0,2,0,0,1,
+2,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,
+1,1,2,0,0,3,1,0,2,1,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,
+1,2,1,0,1,1,1,2,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,
+2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,2,0,0,0,
+2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,1,0,1,
+2,1,1,1,2,1,1,1,0,1,1,2,1,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,1,0,1,1,1,1,1,0,0,1,1,2,1,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,0,0,0,
+1,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,
+2,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,2,0,0,1,0,0,1,0,1,0,0,0,
+0,1,1,1,1,1,1,1,1,2,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,
+1,0,0,1,1,1,1,1,0,0,2,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,
+0,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,
+1,0,0,1,1,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
+0,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,
+0,0,0,1,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,1,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,
+2,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
+0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,
+)
+
+Latin2HungarianModel = { \
+  'charToOrderMap': Latin2_HungarianCharToOrderMap,
+  'precedenceMatrix': HungarianLangModel,
+  'mTypicalPositiveRatio': 0.947368,
+  'keepEnglishLetter': True,
+  'charsetName': "ISO-8859-2"
+}
+
+Win1250HungarianModel = { \
+  'charToOrderMap': win1250HungarianCharToOrderMap,
+  'precedenceMatrix': HungarianLangModel,
+  'mTypicalPositiveRatio': 0.947368,
+  'keepEnglishLetter': True,
+  'charsetName': "windows-1250"
+}
--- a/subsdownloader2/src/SourceCode/chardet/langthaimodel.py
+++ b/subsdownloader2/src/SourceCode/chardet/langthaimodel.py
@@ -1,200 +1,200 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Communicator client code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants
-
-# 255: Control characters that usually does not exist in any text
-# 254: Carriage/Return
-# 253: symbol (punctuation) that does not belong to word
-# 252: 0 - 9
-
-# The following result for thai was collected from a limited sample (1M). 
-
-# Character Mapping Table:
-TIS620CharToOrderMap = ( \
-255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
-255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
-253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
-252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
-253,182,106,107,100,183,184,185,101, 94,186,187,108,109,110,111,  # 40
-188,189,190, 89, 95,112,113,191,192,193,194,253,253,253,253,253,  # 50
-253, 64, 72, 73,114, 74,115,116,102, 81,201,117, 90,103, 78, 82,  # 60
- 96,202, 91, 79, 84,104,105, 97, 98, 92,203,253,253,253,253,253,  # 70
-209,210,211,212,213, 88,214,215,216,217,218,219,220,118,221,222,
-223,224, 99, 85, 83,225,226,227,228,229,230,231,232,233,234,235,
-236,  5, 30,237, 24,238, 75,  8, 26, 52, 34, 51,119, 47, 58, 57,
- 49, 53, 55, 43, 20, 19, 44, 14, 48,  3, 17, 25, 39, 62, 31, 54,
- 45,  9, 16,  2, 61, 15,239, 12, 42, 46, 18, 21, 76,  4, 66, 63,
- 22, 10,  1, 36, 23, 13, 40, 27, 32, 35, 86,240,241,242,243,244,
- 11, 28, 41, 29, 33,245, 50, 37,  6,  7, 67, 77, 38, 93,246,247,
- 68, 56, 59, 65, 69, 60, 70, 80, 71, 87,248,249,250,251,252,253,
-)
-
-# Model Table: 
-# total sequences: 100%
-# first 512 sequences: 92.6386%
-# first 1024 sequences:7.3177%
-# rest  sequences:     1.0230%
-# negative sequences:  0.0436% 
-ThaiLangModel = ( \
-0,1,3,3,3,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,0,3,3,3,3,
-0,3,3,0,0,0,1,3,0,3,3,2,3,3,0,1,2,3,3,3,3,0,2,0,2,0,0,3,2,1,2,2,
-3,0,3,3,2,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,0,3,2,3,0,2,2,2,3,
-0,2,3,0,0,0,0,1,0,1,2,3,1,1,3,2,2,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,
-3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,3,2,3,2,3,3,2,2,2,
-3,1,2,3,0,3,3,2,2,1,2,3,3,1,2,0,1,3,0,1,0,0,1,0,0,0,0,0,0,0,1,1,
-3,3,2,2,3,3,3,3,1,2,3,3,3,3,3,2,2,2,2,3,3,2,2,3,3,2,2,3,2,3,2,2,
-3,3,1,2,3,1,2,2,3,3,1,0,2,1,0,0,3,1,2,1,0,0,1,0,0,0,0,0,0,1,0,1,
-3,3,3,3,3,3,2,2,3,3,3,3,2,3,2,2,3,3,2,2,3,2,2,2,2,1,1,3,1,2,1,1,
-3,2,1,0,2,1,0,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
-3,3,3,2,3,2,3,3,2,2,3,2,3,3,2,3,1,1,2,3,2,2,2,3,2,2,2,2,2,1,2,1,
-2,2,1,1,3,3,2,1,0,1,2,2,0,1,3,0,0,0,1,1,0,0,0,0,0,2,3,0,0,2,1,1,
-3,3,2,3,3,2,0,0,3,3,0,3,3,0,2,2,3,1,2,2,1,1,1,0,2,2,2,0,2,2,1,1,
-0,2,1,0,2,0,0,2,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,
-3,3,2,3,3,2,0,0,3,3,0,2,3,0,2,1,2,2,2,2,1,2,0,0,2,2,2,0,2,2,1,1,
-0,2,1,0,2,0,0,2,0,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
-3,3,2,3,2,3,2,0,2,2,1,3,2,1,3,2,1,2,3,2,2,3,0,2,3,2,2,1,2,2,2,2,
-1,2,2,0,0,0,0,2,0,1,2,0,1,1,1,0,1,0,3,1,1,0,0,0,0,0,0,0,0,0,1,0,
-3,3,2,3,3,2,3,2,2,2,3,2,2,3,2,2,1,2,3,2,2,3,1,3,2,2,2,3,2,2,2,3,
-3,2,1,3,0,1,1,1,0,2,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,
-1,0,0,3,0,3,3,3,3,3,0,0,3,0,2,2,3,3,3,3,3,0,0,0,1,1,3,0,0,0,0,2,
-0,0,1,0,0,0,0,0,0,0,2,3,0,0,0,3,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,
-2,0,3,3,3,3,0,0,2,3,0,0,3,0,3,3,2,3,3,3,3,3,0,0,3,3,3,0,0,0,3,3,
-0,0,3,0,0,0,0,2,0,0,2,1,1,3,0,0,1,0,0,2,3,0,1,0,0,0,0,0,0,0,1,0,
-3,3,3,3,2,3,3,3,3,3,3,3,1,2,1,3,3,2,2,1,2,2,2,3,1,1,2,0,2,1,2,1,
-2,2,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,
-3,0,2,1,2,3,3,3,0,2,0,2,2,0,2,1,3,2,2,1,2,1,0,0,2,2,1,0,2,1,2,2,
-0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,2,1,3,3,1,1,3,0,2,3,1,1,3,2,1,1,2,0,2,2,3,2,1,1,1,1,1,2,
-3,0,0,1,3,1,2,1,2,0,3,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
-3,3,1,1,3,2,3,3,3,1,3,2,1,3,2,1,3,2,2,2,2,1,3,3,1,2,1,3,1,2,3,0,
-2,1,1,3,2,2,2,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
-3,3,2,3,2,3,3,2,3,2,3,2,3,3,2,1,0,3,2,2,2,1,2,2,2,1,2,2,1,2,1,1,
-2,2,2,3,0,1,3,1,1,1,1,0,1,1,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,2,3,2,2,1,1,3,2,3,2,3,2,0,3,2,2,1,2,0,2,2,2,1,2,2,2,2,1,
-3,2,1,2,2,1,0,2,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,
-3,3,3,3,3,2,3,1,2,3,3,2,2,3,0,1,1,2,0,3,3,2,2,3,0,1,1,3,0,0,0,0,
-3,1,0,3,3,0,2,0,2,1,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,2,3,2,3,3,0,1,3,1,1,2,1,2,1,1,3,1,1,0,2,3,1,1,1,1,1,1,1,1,
-3,1,1,2,2,2,2,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-3,2,2,1,1,2,1,3,3,2,3,2,2,3,2,2,3,1,2,2,1,2,0,3,2,1,2,2,2,2,2,1,
-3,2,1,2,2,2,1,1,1,1,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,3,3,3,3,1,3,3,0,2,1,0,3,2,0,0,3,1,0,1,1,0,1,0,0,0,0,0,1,
-1,0,0,1,0,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,2,2,2,3,0,0,1,3,0,3,2,0,3,2,2,3,3,3,3,3,1,0,2,2,2,0,2,2,1,2,
-0,2,3,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
-3,0,2,3,1,3,3,2,3,3,0,3,3,0,3,2,2,3,2,3,3,3,0,0,2,2,3,0,1,1,1,3,
-0,0,3,0,0,0,2,2,0,1,3,0,1,2,2,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,
-3,2,3,3,2,0,3,3,2,2,3,1,3,2,1,3,2,0,1,2,2,0,2,3,2,1,0,3,0,0,0,0,
-3,0,0,2,3,1,3,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,1,3,2,2,2,1,2,0,1,3,1,1,3,1,3,0,0,2,1,1,1,1,2,1,1,1,0,2,1,0,1,
-1,2,0,0,0,3,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,3,1,0,0,0,1,0,
-3,3,3,3,2,2,2,2,2,1,3,1,1,1,2,0,1,1,2,1,2,1,3,2,0,0,3,1,1,1,1,1,
-3,1,0,2,3,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,2,3,0,3,3,0,2,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
-0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,2,3,1,3,0,0,1,2,0,0,2,0,3,3,2,3,3,3,2,3,0,0,2,2,2,0,0,0,2,2,
-0,0,1,0,0,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
-0,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,1,2,3,1,3,3,0,0,1,0,3,0,0,0,0,0,
-0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,1,2,3,1,2,3,1,0,3,0,2,2,1,0,2,1,1,2,0,1,0,0,1,1,1,1,0,1,0,0,
-1,0,0,0,0,1,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,3,3,2,1,0,1,1,1,3,1,2,2,2,2,2,2,1,1,1,1,0,3,1,0,1,3,1,1,1,1,
-1,1,0,2,0,1,3,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,
-3,0,2,2,1,3,3,2,3,3,0,1,1,0,2,2,1,2,1,3,3,1,0,0,3,2,0,0,0,0,2,1,
-0,1,0,0,0,0,1,2,0,1,1,3,1,1,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
-0,0,3,0,0,1,0,0,0,3,0,0,3,0,3,1,0,1,1,1,3,2,0,0,0,3,0,0,0,0,2,0,
-0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,
-3,3,1,3,2,1,3,3,1,2,2,0,1,2,1,0,1,2,0,0,0,0,0,3,0,0,0,3,0,0,0,0,
-3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,1,2,0,3,3,3,2,2,0,1,1,0,1,3,0,0,0,2,2,0,0,0,0,3,1,0,1,0,0,0,
-0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,2,3,1,2,0,0,2,1,0,3,1,0,1,2,0,1,1,1,1,3,0,0,3,1,1,0,2,2,1,1,
-0,2,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,0,3,1,2,0,0,2,2,0,1,2,0,1,0,1,3,1,2,1,0,0,0,2,0,3,0,0,0,1,0,
-0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,1,1,2,2,0,0,0,2,0,2,1,0,1,1,0,1,1,1,2,1,0,0,1,1,1,0,2,1,1,1,
-0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,
-0,0,0,2,0,1,3,1,1,1,1,0,0,0,0,3,2,0,1,0,0,0,1,2,0,0,0,1,0,0,0,0,
-0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,0,2,3,2,2,0,0,0,1,0,0,0,0,2,3,2,1,2,2,3,0,0,0,2,3,1,0,0,0,1,1,
-0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,
-3,3,2,2,0,1,0,0,0,0,2,0,2,0,1,0,0,0,1,1,0,0,0,2,1,0,1,0,1,1,0,0,
-0,1,0,2,0,0,1,0,3,0,1,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,1,0,0,1,0,0,0,0,0,1,1,2,0,0,0,0,1,0,0,1,3,1,0,0,0,0,1,1,0,0,
-0,1,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,
-3,3,1,1,1,1,2,3,0,0,2,1,1,1,1,1,0,2,1,1,0,0,0,2,1,0,1,2,1,1,0,1,
-2,1,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,3,1,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,
-0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,3,2,0,0,0,0,0,0,1,2,1,0,1,1,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,2,0,0,0,1,3,0,1,0,0,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,
-3,3,0,0,1,1,2,0,0,1,2,1,0,1,1,1,0,1,1,0,0,2,1,1,0,1,0,0,1,1,1,0,
-0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,2,2,1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,
-2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,3,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-1,1,0,1,2,0,1,2,0,0,1,1,0,2,0,1,0,0,1,0,0,0,0,1,0,0,0,2,0,0,0,0,
-1,0,0,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,2,1,3,0,0,0,0,1,1,0,0,0,0,0,0,0,3,
-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,0,1,0,1,0,0,2,0,0,2,0,0,1,1,2,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,
-1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
-1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,
-1,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,1,1,0,0,2,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-)
-
-TIS620ThaiModel = { \
-  'charToOrderMap': TIS620CharToOrderMap,
-  'precedenceMatrix': ThaiLangModel,
-  'mTypicalPositiveRatio': 0.926386,
-  'keepEnglishLetter': constants.False,
-  'charsetName': "TIS-620"
-}
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Communicator client code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+
+# 255: Control characters that usually does not exist in any text
+# 254: Carriage/Return
+# 253: symbol (punctuation) that does not belong to word
+# 252: 0 - 9
+
+# The following result for thai was collected from a limited sample (1M). 
+
+# Character Mapping Table:
+TIS620CharToOrderMap = ( \
+255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,  # 00
+255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,  # 10
+253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,  # 20
+252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,  # 30
+253,182,106,107,100,183,184,185,101, 94,186,187,108,109,110,111,  # 40
+188,189,190, 89, 95,112,113,191,192,193,194,253,253,253,253,253,  # 50
+253, 64, 72, 73,114, 74,115,116,102, 81,201,117, 90,103, 78, 82,  # 60
+ 96,202, 91, 79, 84,104,105, 97, 98, 92,203,253,253,253,253,253,  # 70
+209,210,211,212,213, 88,214,215,216,217,218,219,220,118,221,222,
+223,224, 99, 85, 83,225,226,227,228,229,230,231,232,233,234,235,
+236,  5, 30,237, 24,238, 75,  8, 26, 52, 34, 51,119, 47, 58, 57,
+ 49, 53, 55, 43, 20, 19, 44, 14, 48,  3, 17, 25, 39, 62, 31, 54,
+ 45,  9, 16,  2, 61, 15,239, 12, 42, 46, 18, 21, 76,  4, 66, 63,
+ 22, 10,  1, 36, 23, 13, 40, 27, 32, 35, 86,240,241,242,243,244,
+ 11, 28, 41, 29, 33,245, 50, 37,  6,  7, 67, 77, 38, 93,246,247,
+ 68, 56, 59, 65, 69, 60, 70, 80, 71, 87,248,249,250,251,252,253,
+)
+
+# Model Table: 
+# total sequences: 100%
+# first 512 sequences: 92.6386%
+# first 1024 sequences:7.3177%
+# rest  sequences:     1.0230%
+# negative sequences:  0.0436% 
+ThaiLangModel = ( \
+0,1,3,3,3,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,0,3,3,3,3,
+0,3,3,0,0,0,1,3,0,3,3,2,3,3,0,1,2,3,3,3,3,0,2,0,2,0,0,3,2,1,2,2,
+3,0,3,3,2,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,0,3,2,3,0,2,2,2,3,
+0,2,3,0,0,0,0,1,0,1,2,3,1,1,3,2,2,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,
+3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,3,2,3,2,3,3,2,2,2,
+3,1,2,3,0,3,3,2,2,1,2,3,3,1,2,0,1,3,0,1,0,0,1,0,0,0,0,0,0,0,1,1,
+3,3,2,2,3,3,3,3,1,2,3,3,3,3,3,2,2,2,2,3,3,2,2,3,3,2,2,3,2,3,2,2,
+3,3,1,2,3,1,2,2,3,3,1,0,2,1,0,0,3,1,2,1,0,0,1,0,0,0,0,0,0,1,0,1,
+3,3,3,3,3,3,2,2,3,3,3,3,2,3,2,2,3,3,2,2,3,2,2,2,2,1,1,3,1,2,1,1,
+3,2,1,0,2,1,0,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,
+3,3,3,2,3,2,3,3,2,2,3,2,3,3,2,3,1,1,2,3,2,2,2,3,2,2,2,2,2,1,2,1,
+2,2,1,1,3,3,2,1,0,1,2,2,0,1,3,0,0,0,1,1,0,0,0,0,0,2,3,0,0,2,1,1,
+3,3,2,3,3,2,0,0,3,3,0,3,3,0,2,2,3,1,2,2,1,1,1,0,2,2,2,0,2,2,1,1,
+0,2,1,0,2,0,0,2,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,
+3,3,2,3,3,2,0,0,3,3,0,2,3,0,2,1,2,2,2,2,1,2,0,0,2,2,2,0,2,2,1,1,
+0,2,1,0,2,0,0,2,0,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,
+3,3,2,3,2,3,2,0,2,2,1,3,2,1,3,2,1,2,3,2,2,3,0,2,3,2,2,1,2,2,2,2,
+1,2,2,0,0,0,0,2,0,1,2,0,1,1,1,0,1,0,3,1,1,0,0,0,0,0,0,0,0,0,1,0,
+3,3,2,3,3,2,3,2,2,2,3,2,2,3,2,2,1,2,3,2,2,3,1,3,2,2,2,3,2,2,2,3,
+3,2,1,3,0,1,1,1,0,2,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,
+1,0,0,3,0,3,3,3,3,3,0,0,3,0,2,2,3,3,3,3,3,0,0,0,1,1,3,0,0,0,0,2,
+0,0,1,0,0,0,0,0,0,0,2,3,0,0,0,3,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,
+2,0,3,3,3,3,0,0,2,3,0,0,3,0,3,3,2,3,3,3,3,3,0,0,3,3,3,0,0,0,3,3,
+0,0,3,0,0,0,0,2,0,0,2,1,1,3,0,0,1,0,0,2,3,0,1,0,0,0,0,0,0,0,1,0,
+3,3,3,3,2,3,3,3,3,3,3,3,1,2,1,3,3,2,2,1,2,2,2,3,1,1,2,0,2,1,2,1,
+2,2,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,
+3,0,2,1,2,3,3,3,0,2,0,2,2,0,2,1,3,2,2,1,2,1,0,0,2,2,1,0,2,1,2,2,
+0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,2,1,3,3,1,1,3,0,2,3,1,1,3,2,1,1,2,0,2,2,3,2,1,1,1,1,1,2,
+3,0,0,1,3,1,2,1,2,0,3,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
+3,3,1,1,3,2,3,3,3,1,3,2,1,3,2,1,3,2,2,2,2,1,3,3,1,2,1,3,1,2,3,0,
+2,1,1,3,2,2,2,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
+3,3,2,3,2,3,3,2,3,2,3,2,3,3,2,1,0,3,2,2,2,1,2,2,2,1,2,2,1,2,1,1,
+2,2,2,3,0,1,3,1,1,1,1,0,1,1,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,2,3,2,2,1,1,3,2,3,2,3,2,0,3,2,2,1,2,0,2,2,2,1,2,2,2,2,1,
+3,2,1,2,2,1,0,2,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,
+3,3,3,3,3,2,3,1,2,3,3,2,2,3,0,1,1,2,0,3,3,2,2,3,0,1,1,3,0,0,0,0,
+3,1,0,3,3,0,2,0,2,1,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,2,3,2,3,3,0,1,3,1,1,2,1,2,1,1,3,1,1,0,2,3,1,1,1,1,1,1,1,1,
+3,1,1,2,2,2,2,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+3,2,2,1,1,2,1,3,3,2,3,2,2,3,2,2,3,1,2,2,1,2,0,3,2,1,2,2,2,2,2,1,
+3,2,1,2,2,2,1,1,1,1,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,3,3,3,3,1,3,3,0,2,1,0,3,2,0,0,3,1,0,1,1,0,1,0,0,0,0,0,1,
+1,0,0,1,0,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,2,2,2,3,0,0,1,3,0,3,2,0,3,2,2,3,3,3,3,3,1,0,2,2,2,0,2,2,1,2,
+0,2,3,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
+3,0,2,3,1,3,3,2,3,3,0,3,3,0,3,2,2,3,2,3,3,3,0,0,2,2,3,0,1,1,1,3,
+0,0,3,0,0,0,2,2,0,1,3,0,1,2,2,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,
+3,2,3,3,2,0,3,3,2,2,3,1,3,2,1,3,2,0,1,2,2,0,2,3,2,1,0,3,0,0,0,0,
+3,0,0,2,3,1,3,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,1,3,2,2,2,1,2,0,1,3,1,1,3,1,3,0,0,2,1,1,1,1,2,1,1,1,0,2,1,0,1,
+1,2,0,0,0,3,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,3,1,0,0,0,1,0,
+3,3,3,3,2,2,2,2,2,1,3,1,1,1,2,0,1,1,2,1,2,1,3,2,0,0,3,1,1,1,1,1,
+3,1,0,2,3,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,2,3,0,3,3,0,2,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
+0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,2,3,1,3,0,0,1,2,0,0,2,0,3,3,2,3,3,3,2,3,0,0,2,2,2,0,0,0,2,2,
+0,0,1,0,0,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
+0,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,1,2,3,1,3,3,0,0,1,0,3,0,0,0,0,0,
+0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,1,2,3,1,2,3,1,0,3,0,2,2,1,0,2,1,1,2,0,1,0,0,1,1,1,1,0,1,0,0,
+1,0,0,0,0,1,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,3,3,2,1,0,1,1,1,3,1,2,2,2,2,2,2,1,1,1,1,0,3,1,0,1,3,1,1,1,1,
+1,1,0,2,0,1,3,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,
+3,0,2,2,1,3,3,2,3,3,0,1,1,0,2,2,1,2,1,3,3,1,0,0,3,2,0,0,0,0,2,1,
+0,1,0,0,0,0,1,2,0,1,1,3,1,1,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,
+0,0,3,0,0,1,0,0,0,3,0,0,3,0,3,1,0,1,1,1,3,2,0,0,0,3,0,0,0,0,2,0,
+0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,
+3,3,1,3,2,1,3,3,1,2,2,0,1,2,1,0,1,2,0,0,0,0,0,3,0,0,0,3,0,0,0,0,
+3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,1,2,0,3,3,3,2,2,0,1,1,0,1,3,0,0,0,2,2,0,0,0,0,3,1,0,1,0,0,0,
+0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,2,3,1,2,0,0,2,1,0,3,1,0,1,2,0,1,1,1,1,3,0,0,3,1,1,0,2,2,1,1,
+0,2,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,0,3,1,2,0,0,2,2,0,1,2,0,1,0,1,3,1,2,1,0,0,0,2,0,3,0,0,0,1,0,
+0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,1,1,2,2,0,0,0,2,0,2,1,0,1,1,0,1,1,1,2,1,0,0,1,1,1,0,2,1,1,1,
+0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,
+0,0,0,2,0,1,3,1,1,1,1,0,0,0,0,3,2,0,1,0,0,0,1,2,0,0,0,1,0,0,0,0,
+0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,0,2,3,2,2,0,0,0,1,0,0,0,0,2,3,2,1,2,2,3,0,0,0,2,3,1,0,0,0,1,1,
+0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,
+3,3,2,2,0,1,0,0,0,0,2,0,2,0,1,0,0,0,1,1,0,0,0,2,1,0,1,0,1,1,0,0,
+0,1,0,2,0,0,1,0,3,0,1,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,1,0,0,1,0,0,0,0,0,1,1,2,0,0,0,0,1,0,0,1,3,1,0,0,0,0,1,1,0,0,
+0,1,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,
+3,3,1,1,1,1,2,3,0,0,2,1,1,1,1,1,0,2,1,1,0,0,0,2,1,0,1,2,1,1,0,1,
+2,1,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,3,1,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,
+0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,3,2,0,0,0,0,0,0,1,2,1,0,1,1,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,2,0,0,0,1,3,0,1,0,0,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,
+3,3,0,0,1,1,2,0,0,1,2,1,0,1,1,1,0,1,1,0,0,2,1,1,0,1,0,0,1,1,1,0,
+0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,2,2,1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,
+2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,3,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+1,1,0,1,2,0,1,2,0,0,1,1,0,2,0,1,0,0,1,0,0,0,0,1,0,0,0,2,0,0,0,0,
+1,0,0,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,2,1,3,0,0,0,0,1,1,0,0,0,0,0,0,0,3,
+1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,0,1,0,1,0,0,2,0,0,2,0,0,1,1,2,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,
+1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,
+1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,
+1,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,1,1,0,0,2,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
+)
+
+TIS620ThaiModel = { \
+  'charToOrderMap': TIS620CharToOrderMap,
+  'precedenceMatrix': ThaiLangModel,
+  'mTypicalPositiveRatio': 0.926386,
+  'keepEnglishLetter': False,
+  'charsetName': "TIS-620"
+}
--- a/subsdownloader2/src/SourceCode/chardet/latin1prober.py
+++ b/subsdownloader2/src/SourceCode/chardet/latin1prober.py
@@ -1,136 +1,135 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 2001
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#   Shy Shalom - original C code
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from charsetprober import CharSetProber
-import constants
-import operator
-
-FREQ_CAT_NUM = 4
-
-UDF = 0 # undefined
-OTH = 1 # other
-ASC = 2 # ascii capital letter
-ASS = 3 # ascii small letter
-ACV = 4 # accent capital vowel
-ACO = 5 # accent capital other
-ASV = 6 # accent small vowel
-ASO = 7 # accent small other
-CLASS_NUM = 8 # total classes
-
-Latin1_CharToClass = ( \
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 00 - 07
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 08 - 0F
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 10 - 17
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 18 - 1F
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 20 - 27
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 28 - 2F
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 30 - 37
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 38 - 3F
-  OTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   # 40 - 47
-  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   # 48 - 4F
-  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   # 50 - 57
-  ASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH,   # 58 - 5F
-  OTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   # 60 - 67
-  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   # 68 - 6F
-  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   # 70 - 77
-  ASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH,   # 78 - 7F
-  OTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH,   # 80 - 87
-  OTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF,   # 88 - 8F
-  UDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 90 - 97
-  OTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO,   # 98 - 9F
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # A0 - A7
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # A8 - AF
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # B0 - B7
-  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # B8 - BF
-  ACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO,   # C0 - C7
-  ACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV,   # C8 - CF
-  ACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH,   # D0 - D7
-  ACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO,   # D8 - DF
-  ASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO,   # E0 - E7
-  ASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV,   # E8 - EF
-  ASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH,   # F0 - F7
-  ASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO,   # F8 - FF
-)
-
-# 0 : illegal 
-# 1 : very unlikely 
-# 2 : normal 
-# 3 : very likely
-Latin1ClassModel = ( \
-# UDF OTH ASC ASS ACV ACO ASV ASO
-   0,  0,  0,  0,  0,  0,  0,  0,  # UDF
-   0,  3,  3,  3,  3,  3,  3,  3,  # OTH
-   0,  3,  3,  3,  3,  3,  3,  3,  # ASC
-   0,  3,  3,  3,  1,  1,  3,  3,  # ASS
-   0,  3,  3,  3,  1,  2,  1,  2,  # ACV
-   0,  3,  3,  3,  3,  3,  3,  3,  # ACO
-   0,  3,  1,  3,  1,  1,  1,  3,  # ASV
-   0,  3,  1,  3,  1,  1,  3,  3,  # ASO
-)
-
-class Latin1Prober(CharSetProber):
-    def __init__(self):
-        CharSetProber.__init__(self)
-        self.reset()
-
-    def reset(self):
-        self._mLastCharClass = OTH
-        self._mFreqCounter = [0] * FREQ_CAT_NUM
-        CharSetProber.reset(self)
-
-    def get_charset_name(self):
-        return "windows-1252"
-
-    def feed(self, aBuf):
-        aBuf = self.filter_with_english_letters(aBuf)
-        for c in aBuf:
-            charClass = Latin1_CharToClass[ord(c)]
-            freq = Latin1ClassModel[(self._mLastCharClass * CLASS_NUM) + charClass]
-            if freq == 0:
-                self._mState = constants.eNotMe
-                break
-            self._mFreqCounter[freq] += 1
-            self._mLastCharClass = charClass
-
-        return self.get_state()
-
-    def get_confidence(self):
-        if self.get_state() == constants.eNotMe:
-            return 0.01
-  
-        total = reduce(operator.add, self._mFreqCounter)
-        if total < 0.01:
-            confidence = 0.0
-        else:
-            confidence = (self._mFreqCounter[3] / total) - (self._mFreqCounter[1] * 20.0 / total)
-        if confidence < 0.0:
-            confidence = 0.0
-        # lower the confidence of latin1 so that other more accurate detector 
-        # can take priority.
-        confidence = confidence * 0.5
-        return confidence
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 2001
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#   Shy Shalom - original C code
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .charsetprober import CharSetProber
+from . import constants
+
+FREQ_CAT_NUM = 4
+
+UDF = 0 # undefined
+OTH = 1 # other
+ASC = 2 # ascii capital letter
+ASS = 3 # ascii small letter
+ACV = 4 # accent capital vowel
+ACO = 5 # accent capital other
+ASV = 6 # accent small vowel
+ASO = 7 # accent small other
+CLASS_NUM = 8 # total classes
+
+Latin1_CharToClass = ( \
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 00 - 07
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 08 - 0F
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 10 - 17
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 18 - 1F
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 20 - 27
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 28 - 2F
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 30 - 37
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 38 - 3F
+  OTH, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   # 40 - 47
+  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   # 48 - 4F
+  ASC, ASC, ASC, ASC, ASC, ASC, ASC, ASC,   # 50 - 57
+  ASC, ASC, ASC, OTH, OTH, OTH, OTH, OTH,   # 58 - 5F
+  OTH, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   # 60 - 67
+  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   # 68 - 6F
+  ASS, ASS, ASS, ASS, ASS, ASS, ASS, ASS,   # 70 - 77
+  ASS, ASS, ASS, OTH, OTH, OTH, OTH, OTH,   # 78 - 7F
+  OTH, UDF, OTH, ASO, OTH, OTH, OTH, OTH,   # 80 - 87
+  OTH, OTH, ACO, OTH, ACO, UDF, ACO, UDF,   # 88 - 8F
+  UDF, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # 90 - 97
+  OTH, OTH, ASO, OTH, ASO, UDF, ASO, ACO,   # 98 - 9F
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # A0 - A7
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # A8 - AF
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # B0 - B7
+  OTH, OTH, OTH, OTH, OTH, OTH, OTH, OTH,   # B8 - BF
+  ACV, ACV, ACV, ACV, ACV, ACV, ACO, ACO,   # C0 - C7
+  ACV, ACV, ACV, ACV, ACV, ACV, ACV, ACV,   # C8 - CF
+  ACO, ACO, ACV, ACV, ACV, ACV, ACV, OTH,   # D0 - D7
+  ACV, ACV, ACV, ACV, ACV, ACO, ACO, ACO,   # D8 - DF
+  ASV, ASV, ASV, ASV, ASV, ASV, ASO, ASO,   # E0 - E7
+  ASV, ASV, ASV, ASV, ASV, ASV, ASV, ASV,   # E8 - EF
+  ASO, ASO, ASV, ASV, ASV, ASV, ASV, OTH,   # F0 - F7
+  ASV, ASV, ASV, ASV, ASV, ASO, ASO, ASO,   # F8 - FF
+)
+
+# 0 : illegal 
+# 1 : very unlikely 
+# 2 : normal 
+# 3 : very likely
+Latin1ClassModel = ( \
+# UDF OTH ASC ASS ACV ACO ASV ASO
+   0,  0,  0,  0,  0,  0,  0,  0,  # UDF
+   0,  3,  3,  3,  3,  3,  3,  3,  # OTH
+   0,  3,  3,  3,  3,  3,  3,  3,  # ASC
+   0,  3,  3,  3,  1,  1,  3,  3,  # ASS
+   0,  3,  3,  3,  1,  2,  1,  2,  # ACV
+   0,  3,  3,  3,  3,  3,  3,  3,  # ACO
+   0,  3,  1,  3,  1,  1,  1,  3,  # ASV
+   0,  3,  1,  3,  1,  1,  3,  3,  # ASO
+)
+
+class Latin1Prober(CharSetProber):
+    def __init__(self):
+        CharSetProber.__init__(self)
+        self.reset()
+
+    def reset(self):
+        self._mLastCharClass = OTH
+        self._mFreqCounter = [0] * FREQ_CAT_NUM
+        CharSetProber.reset(self)
+
+    def get_charset_name(self):
+        return "windows-1252"
+
+    def feed(self, aBuf):
+        aBuf = self.filter_with_english_letters(aBuf)
+        for c in aBuf:
+            charClass = Latin1_CharToClass[c]
+            freq = Latin1ClassModel[(self._mLastCharClass * CLASS_NUM) + charClass]
+            if freq == 0:
+                self._mState = constants.eNotMe
+                break
+            self._mFreqCounter[freq] += 1
+            self._mLastCharClass = charClass
+
+        return self.get_state()
+
+    def get_confidence(self):
+        if self.get_state() == constants.eNotMe:
+            return 0.01
+  
+        total = sum(self._mFreqCounter)
+        if total < 0.01:
+            confidence = 0.0
+        else:
+            confidence = (self._mFreqCounter[3] / total) - (self._mFreqCounter[1] * 20.0 / total)
+        if confidence < 0.0:
+            confidence = 0.0
+        # lower the confidence of latin1 so that other more accurate detector 
+        # can take priority.
+        confidence = confidence * 0.5
+        return confidence
--- a/subsdownloader2/src/SourceCode/chardet/mbcharsetprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/mbcharsetprober.py
@@ -1,82 +1,83 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 2001
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#   Shy Shalom - original C code
-#   Proofpoint, Inc.
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants, sys
-from constants import eStart, eError, eItsMe
-from charsetprober import CharSetProber
-
-class MultiByteCharSetProber(CharSetProber):
-    def __init__(self):
-        CharSetProber.__init__(self)
-        self._mDistributionAnalyzer = None
-        self._mCodingSM = None
-        self._mLastChar = ['\x00', '\x00']
-
-    def reset(self):
-        CharSetProber.reset(self)
-        if self._mCodingSM:
-            self._mCodingSM.reset()
-        if self._mDistributionAnalyzer:
-            self._mDistributionAnalyzer.reset()
-        self._mLastChar = ['\x00', '\x00']
-
-    def get_charset_name(self):
-        pass
-
-    def feed(self, aBuf):
-        aLen = len(aBuf)
-        for i in range(0, aLen):
-            codingState = self._mCodingSM.next_state(aBuf[i])
-            if codingState == eError:
-                if constants._debug:
-                    sys.stderr.write(self.get_charset_name() + ' prober hit error at byte ' + str(i) + '\n')
-                self._mState = constants.eNotMe
-                break
-            elif codingState == eItsMe:
-                self._mState = constants.eFoundIt
-                break
-            elif codingState == eStart:
-                charLen = self._mCodingSM.get_current_charlen()
-                if i == 0:
-                    self._mLastChar[1] = aBuf[0]
-                    self._mDistributionAnalyzer.feed(self._mLastChar, charLen)
-                else:
-                    self._mDistributionAnalyzer.feed(aBuf[i-1:i+1], charLen)
-                    
-        self._mLastChar[0] = aBuf[aLen - 1]
-        
-        if self.get_state() == constants.eDetecting:
-            if self._mDistributionAnalyzer.got_enough_data() and \
-               (self.get_confidence() > constants.SHORTCUT_THRESHOLD):
-                self._mState = constants.eFoundIt
-
-        return self.get_state()
-
-    def get_confidence(self):
-        return self._mDistributionAnalyzer.get_confidence()
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 2001
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#   Shy Shalom - original C code
+#   Proofpoint, Inc.
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+import sys
+from .constants import eStart, eError, eItsMe
+from .charsetprober import CharSetProber
+
+class MultiByteCharSetProber(CharSetProber):
+    def __init__(self):
+        CharSetProber.__init__(self)
+        self._mDistributionAnalyzer = None
+        self._mCodingSM = None
+        self._mLastChar = [0, 0]
+
+    def reset(self):
+        CharSetProber.reset(self)
+        if self._mCodingSM:
+            self._mCodingSM.reset()
+        if self._mDistributionAnalyzer:
+            self._mDistributionAnalyzer.reset()
+        self._mLastChar = [0, 0]
+
+    def get_charset_name(self):
+        pass
+
+    def feed(self, aBuf):
+        aLen = len(aBuf)
+        for i in range(0, aLen):
+            codingState = self._mCodingSM.next_state(aBuf[i])
+            if codingState == eError:
+                if constants._debug:
+                    sys.stderr.write(self.get_charset_name() + ' prober hit error at byte ' + str(i) + '\n')
+                self._mState = constants.eNotMe
+                break
+            elif codingState == eItsMe:
+                self._mState = constants.eFoundIt
+                break
+            elif codingState == eStart:
+                charLen = self._mCodingSM.get_current_charlen()
+                if i == 0:
+                    self._mLastChar[1] = aBuf[0]
+                    self._mDistributionAnalyzer.feed(self._mLastChar, charLen)
+                else:
+                    self._mDistributionAnalyzer.feed(aBuf[i-1:i+1], charLen)
+                    
+        self._mLastChar[0] = aBuf[aLen - 1]
+        
+        if self.get_state() == constants.eDetecting:
+            if self._mDistributionAnalyzer.got_enough_data() and \
+               (self.get_confidence() > constants.SHORTCUT_THRESHOLD):
+                self._mState = constants.eFoundIt
+
+        return self.get_state()
+
+    def get_confidence(self):
+        return self._mDistributionAnalyzer.get_confidence()
--- a/subsdownloader2/src/SourceCode/chardet/mbcsgroupprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/mbcsgroupprober.py
@@ -1,50 +1,50 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 2001
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#   Shy Shalom - original C code
-#   Proofpoint, Inc.
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from charsetgroupprober import CharSetGroupProber
-from utf8prober import UTF8Prober
-from sjisprober import SJISProber
-from eucjpprober import EUCJPProber
-from gb2312prober import GB2312Prober
-from euckrprober import EUCKRProber
-from big5prober import Big5Prober
-from euctwprober import EUCTWProber
-
-class MBCSGroupProber(CharSetGroupProber):
-    def __init__(self):
-        CharSetGroupProber.__init__(self)
-        self._mProbers = [ \
-            UTF8Prober(),
-            SJISProber(),
-            EUCJPProber(),
-            GB2312Prober(),
-            EUCKRProber(),
-            Big5Prober(),
-            EUCTWProber()]
-        self.reset()
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 2001
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#   Shy Shalom - original C code
+#   Proofpoint, Inc.
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .charsetgroupprober import CharSetGroupProber
+from .utf8prober import UTF8Prober
+from .sjisprober import SJISProber
+from .eucjpprober import EUCJPProber
+from .gb2312prober import GB2312Prober
+from .euckrprober import EUCKRProber
+from .big5prober import Big5Prober
+from .euctwprober import EUCTWProber
+
+class MBCSGroupProber(CharSetGroupProber):
+    def __init__(self):
+        CharSetGroupProber.__init__(self)
+        self._mProbers = [ \
+            UTF8Prober(),
+            SJISProber(),
+            EUCJPProber(),
+            GB2312Prober(),
+            EUCKRProber(),
+            Big5Prober(),
+            EUCTWProber()]
+        self.reset()
--- a/subsdownloader2/src/SourceCode/chardet/mbcssm.py
+++ b/subsdownloader2/src/SourceCode/chardet/mbcssm.py
@@ -1,514 +1,514 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from constants import eStart, eError, eItsMe
-
-# BIG5 
-
-BIG5_cls = ( \
-    1,1,1,1,1,1,1,1,  # 00 - 07    #allow 0x00 as legal value
-    1,1,1,1,1,1,0,0,  # 08 - 0f 
-    1,1,1,1,1,1,1,1,  # 10 - 17 
-    1,1,1,0,1,1,1,1,  # 18 - 1f 
-    1,1,1,1,1,1,1,1,  # 20 - 27 
-    1,1,1,1,1,1,1,1,  # 28 - 2f 
-    1,1,1,1,1,1,1,1,  # 30 - 37 
-    1,1,1,1,1,1,1,1,  # 38 - 3f 
-    2,2,2,2,2,2,2,2,  # 40 - 47 
-    2,2,2,2,2,2,2,2,  # 48 - 4f 
-    2,2,2,2,2,2,2,2,  # 50 - 57 
-    2,2,2,2,2,2,2,2,  # 58 - 5f 
-    2,2,2,2,2,2,2,2,  # 60 - 67 
-    2,2,2,2,2,2,2,2,  # 68 - 6f 
-    2,2,2,2,2,2,2,2,  # 70 - 77 
-    2,2,2,2,2,2,2,1,  # 78 - 7f 
-    4,4,4,4,4,4,4,4,  # 80 - 87 
-    4,4,4,4,4,4,4,4,  # 88 - 8f 
-    4,4,4,4,4,4,4,4,  # 90 - 97 
-    4,4,4,4,4,4,4,4,  # 98 - 9f 
-    4,3,3,3,3,3,3,3,  # a0 - a7 
-    3,3,3,3,3,3,3,3,  # a8 - af 
-    3,3,3,3,3,3,3,3,  # b0 - b7 
-    3,3,3,3,3,3,3,3,  # b8 - bf 
-    3,3,3,3,3,3,3,3,  # c0 - c7 
-    3,3,3,3,3,3,3,3,  # c8 - cf 
-    3,3,3,3,3,3,3,3,  # d0 - d7 
-    3,3,3,3,3,3,3,3,  # d8 - df 
-    3,3,3,3,3,3,3,3,  # e0 - e7 
-    3,3,3,3,3,3,3,3,  # e8 - ef 
-    3,3,3,3,3,3,3,3,  # f0 - f7 
-    3,3,3,3,3,3,3,0)  # f8 - ff 
-
-BIG5_st = ( \
-    eError,eStart,eStart,     3,eError,eError,eError,eError,#00-07 
-    eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eError,#08-0f 
-    eError,eStart,eStart,eStart,eStart,eStart,eStart,eStart)#10-17 
-
-Big5CharLenTable = (0, 1, 1, 2, 0)
-
-Big5SMModel = {'classTable': BIG5_cls,
-               'classFactor': 5,
-               'stateTable': BIG5_st,
-               'charLenTable': Big5CharLenTable,
-               'name': 'Big5'}
-
-# EUC-JP
-
-EUCJP_cls = ( \
-    4,4,4,4,4,4,4,4,  # 00 - 07 
-    4,4,4,4,4,4,5,5,  # 08 - 0f 
-    4,4,4,4,4,4,4,4,  # 10 - 17 
-    4,4,4,5,4,4,4,4,  # 18 - 1f 
-    4,4,4,4,4,4,4,4,  # 20 - 27 
-    4,4,4,4,4,4,4,4,  # 28 - 2f 
-    4,4,4,4,4,4,4,4,  # 30 - 37 
-    4,4,4,4,4,4,4,4,  # 38 - 3f 
-    4,4,4,4,4,4,4,4,  # 40 - 47 
-    4,4,4,4,4,4,4,4,  # 48 - 4f 
-    4,4,4,4,4,4,4,4,  # 50 - 57 
-    4,4,4,4,4,4,4,4,  # 58 - 5f 
-    4,4,4,4,4,4,4,4,  # 60 - 67 
-    4,4,4,4,4,4,4,4,  # 68 - 6f 
-    4,4,4,4,4,4,4,4,  # 70 - 77 
-    4,4,4,4,4,4,4,4,  # 78 - 7f 
-    5,5,5,5,5,5,5,5,  # 80 - 87 
-    5,5,5,5,5,5,1,3,  # 88 - 8f 
-    5,5,5,5,5,5,5,5,  # 90 - 97 
-    5,5,5,5,5,5,5,5,  # 98 - 9f 
-    5,2,2,2,2,2,2,2,  # a0 - a7 
-    2,2,2,2,2,2,2,2,  # a8 - af 
-    2,2,2,2,2,2,2,2,  # b0 - b7 
-    2,2,2,2,2,2,2,2,  # b8 - bf 
-    2,2,2,2,2,2,2,2,  # c0 - c7 
-    2,2,2,2,2,2,2,2,  # c8 - cf 
-    2,2,2,2,2,2,2,2,  # d0 - d7 
-    2,2,2,2,2,2,2,2,  # d8 - df 
-    0,0,0,0,0,0,0,0,  # e0 - e7 
-    0,0,0,0,0,0,0,0,  # e8 - ef 
-    0,0,0,0,0,0,0,0,  # f0 - f7 
-    0,0,0,0,0,0,0,5)  # f8 - ff 
-
-EUCJP_st = ( \
-          3,     4,     3,     5,eStart,eError,eError,eError,#00-07 
-     eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,#08-0f 
-     eItsMe,eItsMe,eStart,eError,eStart,eError,eError,eError,#10-17 
-     eError,eError,eStart,eError,eError,eError,     3,eError,#18-1f 
-          3,eError,eError,eError,eStart,eStart,eStart,eStart)#20-27 
-
-EUCJPCharLenTable = (2, 2, 2, 3, 1, 0)
-
-EUCJPSMModel = {'classTable': EUCJP_cls,
-                'classFactor': 6,
-                'stateTable': EUCJP_st,
-                'charLenTable': EUCJPCharLenTable,
-                'name': 'EUC-JP'}
-
-# EUC-KR
-
-EUCKR_cls  = ( \
-    1,1,1,1,1,1,1,1,  # 00 - 07 
-    1,1,1,1,1,1,0,0,  # 08 - 0f 
-    1,1,1,1,1,1,1,1,  # 10 - 17 
-    1,1,1,0,1,1,1,1,  # 18 - 1f 
-    1,1,1,1,1,1,1,1,  # 20 - 27 
-    1,1,1,1,1,1,1,1,  # 28 - 2f 
-    1,1,1,1,1,1,1,1,  # 30 - 37 
-    1,1,1,1,1,1,1,1,  # 38 - 3f 
-    1,1,1,1,1,1,1,1,  # 40 - 47 
-    1,1,1,1,1,1,1,1,  # 48 - 4f 
-    1,1,1,1,1,1,1,1,  # 50 - 57 
-    1,1,1,1,1,1,1,1,  # 58 - 5f 
-    1,1,1,1,1,1,1,1,  # 60 - 67 
-    1,1,1,1,1,1,1,1,  # 68 - 6f 
-    1,1,1,1,1,1,1,1,  # 70 - 77 
-    1,1,1,1,1,1,1,1,  # 78 - 7f 
-    0,0,0,0,0,0,0,0,  # 80 - 87 
-    0,0,0,0,0,0,0,0,  # 88 - 8f 
-    0,0,0,0,0,0,0,0,  # 90 - 97 
-    0,0,0,0,0,0,0,0,  # 98 - 9f 
-    0,2,2,2,2,2,2,2,  # a0 - a7 
-    2,2,2,2,2,3,3,3,  # a8 - af 
-    2,2,2,2,2,2,2,2,  # b0 - b7 
-    2,2,2,2,2,2,2,2,  # b8 - bf 
-    2,2,2,2,2,2,2,2,  # c0 - c7 
-    2,3,2,2,2,2,2,2,  # c8 - cf 
-    2,2,2,2,2,2,2,2,  # d0 - d7 
-    2,2,2,2,2,2,2,2,  # d8 - df 
-    2,2,2,2,2,2,2,2,  # e0 - e7 
-    2,2,2,2,2,2,2,2,  # e8 - ef 
-    2,2,2,2,2,2,2,2,  # f0 - f7 
-    2,2,2,2,2,2,2,0)  # f8 - ff 
-
-EUCKR_st = (
-    eError,eStart,     3,eError,eError,eError,eError,eError,#00-07 
-    eItsMe,eItsMe,eItsMe,eItsMe,eError,eError,eStart,eStart)#08-0f 
-
-EUCKRCharLenTable = (0, 1, 2, 0)
-
-EUCKRSMModel = {'classTable': EUCKR_cls,
-                'classFactor': 4,
-                'stateTable': EUCKR_st,
-                'charLenTable': EUCKRCharLenTable,
-                'name': 'EUC-KR'}
-
-# EUC-TW
-
-EUCTW_cls = ( \
-    2,2,2,2,2,2,2,2,  # 00 - 07 
-    2,2,2,2,2,2,0,0,  # 08 - 0f 
-    2,2,2,2,2,2,2,2,  # 10 - 17 
-    2,2,2,0,2,2,2,2,  # 18 - 1f 
-    2,2,2,2,2,2,2,2,  # 20 - 27 
-    2,2,2,2,2,2,2,2,  # 28 - 2f 
-    2,2,2,2,2,2,2,2,  # 30 - 37 
-    2,2,2,2,2,2,2,2,  # 38 - 3f 
-    2,2,2,2,2,2,2,2,  # 40 - 47 
-    2,2,2,2,2,2,2,2,  # 48 - 4f 
-    2,2,2,2,2,2,2,2,  # 50 - 57 
-    2,2,2,2,2,2,2,2,  # 58 - 5f 
-    2,2,2,2,2,2,2,2,  # 60 - 67 
-    2,2,2,2,2,2,2,2,  # 68 - 6f 
-    2,2,2,2,2,2,2,2,  # 70 - 77 
-    2,2,2,2,2,2,2,2,  # 78 - 7f 
-    0,0,0,0,0,0,0,0,  # 80 - 87 
-    0,0,0,0,0,0,6,0,  # 88 - 8f 
-    0,0,0,0,0,0,0,0,  # 90 - 97 
-    0,0,0,0,0,0,0,0,  # 98 - 9f 
-    0,3,4,4,4,4,4,4,  # a0 - a7 
-    5,5,1,1,1,1,1,1,  # a8 - af 
-    1,1,1,1,1,1,1,1,  # b0 - b7 
-    1,1,1,1,1,1,1,1,  # b8 - bf 
-    1,1,3,1,3,3,3,3,  # c0 - c7 
-    3,3,3,3,3,3,3,3,  # c8 - cf 
-    3,3,3,3,3,3,3,3,  # d0 - d7 
-    3,3,3,3,3,3,3,3,  # d8 - df 
-    3,3,3,3,3,3,3,3,  # e0 - e7 
-    3,3,3,3,3,3,3,3,  # e8 - ef 
-    3,3,3,3,3,3,3,3,  # f0 - f7 
-    3,3,3,3,3,3,3,0)  # f8 - ff 
-
-EUCTW_st = ( \
-    eError,eError,eStart,     3,     3,     3,     4,eError,#00-07 
-    eError,eError,eError,eError,eError,eError,eItsMe,eItsMe,#08-0f 
-    eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eError,eStart,eError,#10-17 
-    eStart,eStart,eStart,eError,eError,eError,eError,eError,#18-1f 
-         5,eError,eError,eError,eStart,eError,eStart,eStart,#20-27 
-    eStart,eError,eStart,eStart,eStart,eStart,eStart,eStart)#28-2f 
-
-EUCTWCharLenTable = (0, 0, 1, 2, 2, 2, 3)
-
-EUCTWSMModel = {'classTable': EUCTW_cls,
-                'classFactor': 7,
-                'stateTable': EUCTW_st,
-                'charLenTable': EUCTWCharLenTable,
-                'name': 'x-euc-tw'}
-
-# GB2312
-
-GB2312_cls = ( \
-    1,1,1,1,1,1,1,1,  # 00 - 07 
-    1,1,1,1,1,1,0,0,  # 08 - 0f 
-    1,1,1,1,1,1,1,1,  # 10 - 17 
-    1,1,1,0,1,1,1,1,  # 18 - 1f 
-    1,1,1,1,1,1,1,1,  # 20 - 27 
-    1,1,1,1,1,1,1,1,  # 28 - 2f 
-    3,3,3,3,3,3,3,3,  # 30 - 37 
-    3,3,1,1,1,1,1,1,  # 38 - 3f 
-    2,2,2,2,2,2,2,2,  # 40 - 47 
-    2,2,2,2,2,2,2,2,  # 48 - 4f 
-    2,2,2,2,2,2,2,2,  # 50 - 57 
-    2,2,2,2,2,2,2,2,  # 58 - 5f 
-    2,2,2,2,2,2,2,2,  # 60 - 67 
-    2,2,2,2,2,2,2,2,  # 68 - 6f 
-    2,2,2,2,2,2,2,2,  # 70 - 77 
-    2,2,2,2,2,2,2,4,  # 78 - 7f 
-    5,6,6,6,6,6,6,6,  # 80 - 87 
-    6,6,6,6,6,6,6,6,  # 88 - 8f 
-    6,6,6,6,6,6,6,6,  # 90 - 97 
-    6,6,6,6,6,6,6,6,  # 98 - 9f 
-    6,6,6,6,6,6,6,6,  # a0 - a7 
-    6,6,6,6,6,6,6,6,  # a8 - af 
-    6,6,6,6,6,6,6,6,  # b0 - b7 
-    6,6,6,6,6,6,6,6,  # b8 - bf 
-    6,6,6,6,6,6,6,6,  # c0 - c7 
-    6,6,6,6,6,6,6,6,  # c8 - cf 
-    6,6,6,6,6,6,6,6,  # d0 - d7 
-    6,6,6,6,6,6,6,6,  # d8 - df 
-    6,6,6,6,6,6,6,6,  # e0 - e7 
-    6,6,6,6,6,6,6,6,  # e8 - ef 
-    6,6,6,6,6,6,6,6,  # f0 - f7 
-    6,6,6,6,6,6,6,0)  # f8 - ff 
-
-GB2312_st = ( \
-    eError,eStart,eStart,eStart,eStart,eStart,     3,eError,#00-07 
-    eError,eError,eError,eError,eError,eError,eItsMe,eItsMe,#08-0f 
-    eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eError,eError,eStart,#10-17 
-         4,eError,eStart,eStart,eError,eError,eError,eError,#18-1f 
-    eError,eError,     5,eError,eError,eError,eItsMe,eError,#20-27 
-    eError,eError,eStart,eStart,eStart,eStart,eStart,eStart)#28-2f 
-
-# To be accurate, the length of class 6 can be either 2 or 4. 
-# But it is not necessary to discriminate between the two since 
-# it is used for frequency analysis only, and we are validing 
-# each code range there as well. So it is safe to set it to be 
-# 2 here. 
-GB2312CharLenTable = (0, 1, 1, 1, 1, 1, 2)
-
-GB2312SMModel = {'classTable': GB2312_cls,
-                  'classFactor': 7,
-                  'stateTable': GB2312_st,
-                  'charLenTable': GB2312CharLenTable,
-                  'name': 'GB2312'}
-
-# Shift_JIS
-
-SJIS_cls = ( \
-    1,1,1,1,1,1,1,1,  # 00 - 07 
-    1,1,1,1,1,1,0,0,  # 08 - 0f 
-    1,1,1,1,1,1,1,1,  # 10 - 17 
-    1,1,1,0,1,1,1,1,  # 18 - 1f 
-    1,1,1,1,1,1,1,1,  # 20 - 27 
-    1,1,1,1,1,1,1,1,  # 28 - 2f 
-    1,1,1,1,1,1,1,1,  # 30 - 37 
-    1,1,1,1,1,1,1,1,  # 38 - 3f 
-    2,2,2,2,2,2,2,2,  # 40 - 47 
-    2,2,2,2,2,2,2,2,  # 48 - 4f 
-    2,2,2,2,2,2,2,2,  # 50 - 57 
-    2,2,2,2,2,2,2,2,  # 58 - 5f 
-    2,2,2,2,2,2,2,2,  # 60 - 67 
-    2,2,2,2,2,2,2,2,  # 68 - 6f 
-    2,2,2,2,2,2,2,2,  # 70 - 77 
-    2,2,2,2,2,2,2,1,  # 78 - 7f 
-    3,3,3,3,3,3,3,3,  # 80 - 87 
-    3,3,3,3,3,3,3,3,  # 88 - 8f 
-    3,3,3,3,3,3,3,3,  # 90 - 97 
-    3,3,3,3,3,3,3,3,  # 98 - 9f 
-    #0xa0 is illegal in sjis encoding, but some pages does 
-    #contain such byte. We need to be more error forgiven.
-    2,2,2,2,2,2,2,2,  # a0 - a7     
-    2,2,2,2,2,2,2,2,  # a8 - af 
-    2,2,2,2,2,2,2,2,  # b0 - b7 
-    2,2,2,2,2,2,2,2,  # b8 - bf 
-    2,2,2,2,2,2,2,2,  # c0 - c7 
-    2,2,2,2,2,2,2,2,  # c8 - cf 
-    2,2,2,2,2,2,2,2,  # d0 - d7 
-    2,2,2,2,2,2,2,2,  # d8 - df 
-    3,3,3,3,3,3,3,3,  # e0 - e7 
-    3,3,3,3,3,4,4,4,  # e8 - ef 
-    4,4,4,4,4,4,4,4,  # f0 - f7 
-    4,4,4,4,4,0,0,0)  # f8 - ff 
-
-SJIS_st = ( \
-    eError,eStart,eStart,     3,eError,eError,eError,eError,#00-07 
-    eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,#08-0f 
-    eItsMe,eItsMe,eError,eError,eStart,eStart,eStart,eStart)#10-17 
-
-SJISCharLenTable = (0, 1, 1, 2, 0, 0)
-
-SJISSMModel = {'classTable': SJIS_cls,
-               'classFactor': 6,
-               'stateTable': SJIS_st,
-               'charLenTable': SJISCharLenTable,
-               'name': 'Shift_JIS'}
-
-# UCS2-BE
-
-UCS2BE_cls = ( \
-    0,0,0,0,0,0,0,0,  # 00 - 07 
-    0,0,1,0,0,2,0,0,  # 08 - 0f 
-    0,0,0,0,0,0,0,0,  # 10 - 17 
-    0,0,0,3,0,0,0,0,  # 18 - 1f 
-    0,0,0,0,0,0,0,0,  # 20 - 27 
-    0,3,3,3,3,3,0,0,  # 28 - 2f 
-    0,0,0,0,0,0,0,0,  # 30 - 37 
-    0,0,0,0,0,0,0,0,  # 38 - 3f 
-    0,0,0,0,0,0,0,0,  # 40 - 47 
-    0,0,0,0,0,0,0,0,  # 48 - 4f 
-    0,0,0,0,0,0,0,0,  # 50 - 57 
-    0,0,0,0,0,0,0,0,  # 58 - 5f 
-    0,0,0,0,0,0,0,0,  # 60 - 67 
-    0,0,0,0,0,0,0,0,  # 68 - 6f 
-    0,0,0,0,0,0,0,0,  # 70 - 77 
-    0,0,0,0,0,0,0,0,  # 78 - 7f 
-    0,0,0,0,0,0,0,0,  # 80 - 87 
-    0,0,0,0,0,0,0,0,  # 88 - 8f 
-    0,0,0,0,0,0,0,0,  # 90 - 97 
-    0,0,0,0,0,0,0,0,  # 98 - 9f 
-    0,0,0,0,0,0,0,0,  # a0 - a7 
-    0,0,0,0,0,0,0,0,  # a8 - af 
-    0,0,0,0,0,0,0,0,  # b0 - b7 
-    0,0,0,0,0,0,0,0,  # b8 - bf 
-    0,0,0,0,0,0,0,0,  # c0 - c7 
-    0,0,0,0,0,0,0,0,  # c8 - cf 
-    0,0,0,0,0,0,0,0,  # d0 - d7 
-    0,0,0,0,0,0,0,0,  # d8 - df 
-    0,0,0,0,0,0,0,0,  # e0 - e7 
-    0,0,0,0,0,0,0,0,  # e8 - ef 
-    0,0,0,0,0,0,0,0,  # f0 - f7 
-    0,0,0,0,0,0,4,5)  # f8 - ff 
-
-UCS2BE_st  = ( \
-          5,     7,     7,eError,     4,     3,eError,eError,#00-07 
-     eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,#08-0f 
-     eItsMe,eItsMe,     6,     6,     6,     6,eError,eError,#10-17 
-          6,     6,     6,     6,     6,eItsMe,     6,     6,#18-1f 
-          6,     6,     6,     6,     5,     7,     7,eError,#20-27 
-          5,     8,     6,     6,eError,     6,     6,     6,#28-2f 
-          6,     6,     6,     6,eError,eError,eStart,eStart)#30-37 
-
-UCS2BECharLenTable = (2, 2, 2, 0, 2, 2)
-
-UCS2BESMModel = {'classTable': UCS2BE_cls,
-                 'classFactor': 6,
-                 'stateTable': UCS2BE_st,
-                 'charLenTable': UCS2BECharLenTable,
-                 'name': 'UTF-16BE'}
-
-# UCS2-LE
-
-UCS2LE_cls = ( \
-    0,0,0,0,0,0,0,0,  # 00 - 07 
-    0,0,1,0,0,2,0,0,  # 08 - 0f 
-    0,0,0,0,0,0,0,0,  # 10 - 17 
-    0,0,0,3,0,0,0,0,  # 18 - 1f 
-    0,0,0,0,0,0,0,0,  # 20 - 27 
-    0,3,3,3,3,3,0,0,  # 28 - 2f 
-    0,0,0,0,0,0,0,0,  # 30 - 37 
-    0,0,0,0,0,0,0,0,  # 38 - 3f 
-    0,0,0,0,0,0,0,0,  # 40 - 47 
-    0,0,0,0,0,0,0,0,  # 48 - 4f 
-    0,0,0,0,0,0,0,0,  # 50 - 57 
-    0,0,0,0,0,0,0,0,  # 58 - 5f 
-    0,0,0,0,0,0,0,0,  # 60 - 67 
-    0,0,0,0,0,0,0,0,  # 68 - 6f 
-    0,0,0,0,0,0,0,0,  # 70 - 77 
-    0,0,0,0,0,0,0,0,  # 78 - 7f 
-    0,0,0,0,0,0,0,0,  # 80 - 87 
-    0,0,0,0,0,0,0,0,  # 88 - 8f 
-    0,0,0,0,0,0,0,0,  # 90 - 97 
-    0,0,0,0,0,0,0,0,  # 98 - 9f 
-    0,0,0,0,0,0,0,0,  # a0 - a7 
-    0,0,0,0,0,0,0,0,  # a8 - af 
-    0,0,0,0,0,0,0,0,  # b0 - b7 
-    0,0,0,0,0,0,0,0,  # b8 - bf 
-    0,0,0,0,0,0,0,0,  # c0 - c7 
-    0,0,0,0,0,0,0,0,  # c8 - cf 
-    0,0,0,0,0,0,0,0,  # d0 - d7 
-    0,0,0,0,0,0,0,0,  # d8 - df 
-    0,0,0,0,0,0,0,0,  # e0 - e7 
-    0,0,0,0,0,0,0,0,  # e8 - ef 
-    0,0,0,0,0,0,0,0,  # f0 - f7 
-    0,0,0,0,0,0,4,5)  # f8 - ff 
-
-UCS2LE_st = ( \
-          6,     6,     7,     6,     4,     3,eError,eError,#00-07 
-     eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,#08-0f 
-     eItsMe,eItsMe,     5,     5,     5,eError,eItsMe,eError,#10-17 
-          5,     5,     5,eError,     5,eError,     6,     6,#18-1f 
-          7,     6,     8,     8,     5,     5,     5,eError,#20-27 
-          5,     5,     5,eError,eError,eError,     5,     5,#28-2f 
-          5,     5,     5,eError,     5,eError,eStart,eStart)#30-37 
-
-UCS2LECharLenTable = (2, 2, 2, 2, 2, 2)
-
-UCS2LESMModel = {'classTable': UCS2LE_cls,
-                 'classFactor': 6,
-                 'stateTable': UCS2LE_st,
-                 'charLenTable': UCS2LECharLenTable,
-                 'name': 'UTF-16LE'}
-
-# UTF-8
-
-UTF8_cls = ( \
-    1,1,1,1,1,1,1,1,  # 00 - 07  #allow 0x00 as a legal value
-    1,1,1,1,1,1,0,0,  # 08 - 0f 
-    1,1,1,1,1,1,1,1,  # 10 - 17 
-    1,1,1,0,1,1,1,1,  # 18 - 1f 
-    1,1,1,1,1,1,1,1,  # 20 - 27 
-    1,1,1,1,1,1,1,1,  # 28 - 2f 
-    1,1,1,1,1,1,1,1,  # 30 - 37 
-    1,1,1,1,1,1,1,1,  # 38 - 3f 
-    1,1,1,1,1,1,1,1,  # 40 - 47 
-    1,1,1,1,1,1,1,1,  # 48 - 4f 
-    1,1,1,1,1,1,1,1,  # 50 - 57 
-    1,1,1,1,1,1,1,1,  # 58 - 5f 
-    1,1,1,1,1,1,1,1,  # 60 - 67 
-    1,1,1,1,1,1,1,1,  # 68 - 6f 
-    1,1,1,1,1,1,1,1,  # 70 - 77 
-    1,1,1,1,1,1,1,1,  # 78 - 7f 
-    2,2,2,2,3,3,3,3,  # 80 - 87 
-    4,4,4,4,4,4,4,4,  # 88 - 8f 
-    4,4,4,4,4,4,4,4,  # 90 - 97 
-    4,4,4,4,4,4,4,4,  # 98 - 9f 
-    5,5,5,5,5,5,5,5,  # a0 - a7 
-    5,5,5,5,5,5,5,5,  # a8 - af 
-    5,5,5,5,5,5,5,5,  # b0 - b7 
-    5,5,5,5,5,5,5,5,  # b8 - bf 
-    0,0,6,6,6,6,6,6,  # c0 - c7 
-    6,6,6,6,6,6,6,6,  # c8 - cf 
-    6,6,6,6,6,6,6,6,  # d0 - d7 
-    6,6,6,6,6,6,6,6,  # d8 - df 
-    7,8,8,8,8,8,8,8,  # e0 - e7 
-    8,8,8,8,8,9,8,8,  # e8 - ef 
-    10,11,11,11,11,11,11,11,  # f0 - f7 
-    12,13,13,13,14,15,0,0)   # f8 - ff 
-
-UTF8_st = ( \
-    eError,eStart,eError,eError,eError,eError,     12,   10,#00-07 
-         9,     11,     8,     7,     6,     5,     4,    3,#08-0f 
-    eError,eError,eError,eError,eError,eError,eError,eError,#10-17 
-    eError,eError,eError,eError,eError,eError,eError,eError,#18-1f 
-    eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,#20-27 
-    eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,#28-2f 
-    eError,eError,     5,     5,     5,     5,eError,eError,#30-37 
-    eError,eError,eError,eError,eError,eError,eError,eError,#38-3f 
-    eError,eError,eError,     5,     5,     5,eError,eError,#40-47 
-    eError,eError,eError,eError,eError,eError,eError,eError,#48-4f 
-    eError,eError,     7,     7,     7,     7,eError,eError,#50-57 
-    eError,eError,eError,eError,eError,eError,eError,eError,#58-5f 
-    eError,eError,eError,eError,     7,     7,eError,eError,#60-67 
-    eError,eError,eError,eError,eError,eError,eError,eError,#68-6f 
-    eError,eError,     9,     9,     9,     9,eError,eError,#70-77 
-    eError,eError,eError,eError,eError,eError,eError,eError,#78-7f 
-    eError,eError,eError,eError,eError,     9,eError,eError,#80-87 
-    eError,eError,eError,eError,eError,eError,eError,eError,#88-8f 
-    eError,eError,    12,    12,    12,    12,eError,eError,#90-97 
-    eError,eError,eError,eError,eError,eError,eError,eError,#98-9f 
-    eError,eError,eError,eError,eError,    12,eError,eError,#a0-a7 
-    eError,eError,eError,eError,eError,eError,eError,eError,#a8-af 
-    eError,eError,    12,    12,    12,eError,eError,eError,#b0-b7 
-    eError,eError,eError,eError,eError,eError,eError,eError,#b8-bf 
-    eError,eError,eStart,eStart,eStart,eStart,eError,eError,#c0-c7 
-    eError,eError,eError,eError,eError,eError,eError,eError)#c8-cf 
-
-UTF8CharLenTable = (0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6)
-
-UTF8SMModel = {'classTable': UTF8_cls,
-               'classFactor': 16,
-               'stateTable': UTF8_st,
-               'charLenTable': UTF8CharLenTable,
-               'name': 'UTF-8'}
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .constants import eStart, eError, eItsMe
+
+# BIG5 
+
+BIG5_cls = ( \
+    1,1,1,1,1,1,1,1,  # 00 - 07    #allow 0x00 as legal value
+    1,1,1,1,1,1,0,0,  # 08 - 0f 
+    1,1,1,1,1,1,1,1,  # 10 - 17 
+    1,1,1,0,1,1,1,1,  # 18 - 1f 
+    1,1,1,1,1,1,1,1,  # 20 - 27 
+    1,1,1,1,1,1,1,1,  # 28 - 2f 
+    1,1,1,1,1,1,1,1,  # 30 - 37 
+    1,1,1,1,1,1,1,1,  # 38 - 3f 
+    2,2,2,2,2,2,2,2,  # 40 - 47 
+    2,2,2,2,2,2,2,2,  # 48 - 4f 
+    2,2,2,2,2,2,2,2,  # 50 - 57 
+    2,2,2,2,2,2,2,2,  # 58 - 5f 
+    2,2,2,2,2,2,2,2,  # 60 - 67 
+    2,2,2,2,2,2,2,2,  # 68 - 6f 
+    2,2,2,2,2,2,2,2,  # 70 - 77 
+    2,2,2,2,2,2,2,1,  # 78 - 7f 
+    4,4,4,4,4,4,4,4,  # 80 - 87 
+    4,4,4,4,4,4,4,4,  # 88 - 8f 
+    4,4,4,4,4,4,4,4,  # 90 - 97 
+    4,4,4,4,4,4,4,4,  # 98 - 9f 
+    4,3,3,3,3,3,3,3,  # a0 - a7 
+    3,3,3,3,3,3,3,3,  # a8 - af 
+    3,3,3,3,3,3,3,3,  # b0 - b7 
+    3,3,3,3,3,3,3,3,  # b8 - bf 
+    3,3,3,3,3,3,3,3,  # c0 - c7 
+    3,3,3,3,3,3,3,3,  # c8 - cf 
+    3,3,3,3,3,3,3,3,  # d0 - d7 
+    3,3,3,3,3,3,3,3,  # d8 - df 
+    3,3,3,3,3,3,3,3,  # e0 - e7 
+    3,3,3,3,3,3,3,3,  # e8 - ef 
+    3,3,3,3,3,3,3,3,  # f0 - f7 
+    3,3,3,3,3,3,3,0)  # f8 - ff 
+
+BIG5_st = ( \
+    eError,eStart,eStart,     3,eError,eError,eError,eError,#00-07 
+    eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eError,#08-0f 
+    eError,eStart,eStart,eStart,eStart,eStart,eStart,eStart)#10-17 
+
+Big5CharLenTable = (0, 1, 1, 2, 0)
+
+Big5SMModel = {'classTable': BIG5_cls,
+               'classFactor': 5,
+               'stateTable': BIG5_st,
+               'charLenTable': Big5CharLenTable,
+               'name': 'Big5'}
+
+# EUC-JP
+
+EUCJP_cls = ( \
+    4,4,4,4,4,4,4,4,  # 00 - 07 
+    4,4,4,4,4,4,5,5,  # 08 - 0f 
+    4,4,4,4,4,4,4,4,  # 10 - 17 
+    4,4,4,5,4,4,4,4,  # 18 - 1f 
+    4,4,4,4,4,4,4,4,  # 20 - 27 
+    4,4,4,4,4,4,4,4,  # 28 - 2f 
+    4,4,4,4,4,4,4,4,  # 30 - 37 
+    4,4,4,4,4,4,4,4,  # 38 - 3f 
+    4,4,4,4,4,4,4,4,  # 40 - 47 
+    4,4,4,4,4,4,4,4,  # 48 - 4f 
+    4,4,4,4,4,4,4,4,  # 50 - 57 
+    4,4,4,4,4,4,4,4,  # 58 - 5f 
+    4,4,4,4,4,4,4,4,  # 60 - 67 
+    4,4,4,4,4,4,4,4,  # 68 - 6f 
+    4,4,4,4,4,4,4,4,  # 70 - 77 
+    4,4,4,4,4,4,4,4,  # 78 - 7f 
+    5,5,5,5,5,5,5,5,  # 80 - 87 
+    5,5,5,5,5,5,1,3,  # 88 - 8f 
+    5,5,5,5,5,5,5,5,  # 90 - 97 
+    5,5,5,5,5,5,5,5,  # 98 - 9f 
+    5,2,2,2,2,2,2,2,  # a0 - a7 
+    2,2,2,2,2,2,2,2,  # a8 - af 
+    2,2,2,2,2,2,2,2,  # b0 - b7 
+    2,2,2,2,2,2,2,2,  # b8 - bf 
+    2,2,2,2,2,2,2,2,  # c0 - c7 
+    2,2,2,2,2,2,2,2,  # c8 - cf 
+    2,2,2,2,2,2,2,2,  # d0 - d7 
+    2,2,2,2,2,2,2,2,  # d8 - df 
+    0,0,0,0,0,0,0,0,  # e0 - e7 
+    0,0,0,0,0,0,0,0,  # e8 - ef 
+    0,0,0,0,0,0,0,0,  # f0 - f7 
+    0,0,0,0,0,0,0,5)  # f8 - ff 
+
+EUCJP_st = ( \
+          3,     4,     3,     5,eStart,eError,eError,eError,#00-07 
+     eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,#08-0f 
+     eItsMe,eItsMe,eStart,eError,eStart,eError,eError,eError,#10-17 
+     eError,eError,eStart,eError,eError,eError,     3,eError,#18-1f 
+          3,eError,eError,eError,eStart,eStart,eStart,eStart)#20-27 
+
+EUCJPCharLenTable = (2, 2, 2, 3, 1, 0)
+
+EUCJPSMModel = {'classTable': EUCJP_cls,
+                'classFactor': 6,
+                'stateTable': EUCJP_st,
+                'charLenTable': EUCJPCharLenTable,
+                'name': 'EUC-JP'}
+
+# EUC-KR
+
+EUCKR_cls  = ( \
+    1,1,1,1,1,1,1,1,  # 00 - 07 
+    1,1,1,1,1,1,0,0,  # 08 - 0f 
+    1,1,1,1,1,1,1,1,  # 10 - 17 
+    1,1,1,0,1,1,1,1,  # 18 - 1f 
+    1,1,1,1,1,1,1,1,  # 20 - 27 
+    1,1,1,1,1,1,1,1,  # 28 - 2f 
+    1,1,1,1,1,1,1,1,  # 30 - 37 
+    1,1,1,1,1,1,1,1,  # 38 - 3f 
+    1,1,1,1,1,1,1,1,  # 40 - 47 
+    1,1,1,1,1,1,1,1,  # 48 - 4f 
+    1,1,1,1,1,1,1,1,  # 50 - 57 
+    1,1,1,1,1,1,1,1,  # 58 - 5f 
+    1,1,1,1,1,1,1,1,  # 60 - 67 
+    1,1,1,1,1,1,1,1,  # 68 - 6f 
+    1,1,1,1,1,1,1,1,  # 70 - 77 
+    1,1,1,1,1,1,1,1,  # 78 - 7f 
+    0,0,0,0,0,0,0,0,  # 80 - 87 
+    0,0,0,0,0,0,0,0,  # 88 - 8f 
+    0,0,0,0,0,0,0,0,  # 90 - 97 
+    0,0,0,0,0,0,0,0,  # 98 - 9f 
+    0,2,2,2,2,2,2,2,  # a0 - a7 
+    2,2,2,2,2,3,3,3,  # a8 - af 
+    2,2,2,2,2,2,2,2,  # b0 - b7 
+    2,2,2,2,2,2,2,2,  # b8 - bf 
+    2,2,2,2,2,2,2,2,  # c0 - c7 
+    2,3,2,2,2,2,2,2,  # c8 - cf 
+    2,2,2,2,2,2,2,2,  # d0 - d7 
+    2,2,2,2,2,2,2,2,  # d8 - df 
+    2,2,2,2,2,2,2,2,  # e0 - e7 
+    2,2,2,2,2,2,2,2,  # e8 - ef 
+    2,2,2,2,2,2,2,2,  # f0 - f7 
+    2,2,2,2,2,2,2,0)  # f8 - ff 
+
+EUCKR_st = (
+    eError,eStart,     3,eError,eError,eError,eError,eError,#00-07 
+    eItsMe,eItsMe,eItsMe,eItsMe,eError,eError,eStart,eStart)#08-0f 
+
+EUCKRCharLenTable = (0, 1, 2, 0)
+
+EUCKRSMModel = {'classTable': EUCKR_cls,
+                'classFactor': 4,
+                'stateTable': EUCKR_st,
+                'charLenTable': EUCKRCharLenTable,
+                'name': 'EUC-KR'}
+
+# EUC-TW
+
+EUCTW_cls = ( \
+    2,2,2,2,2,2,2,2,  # 00 - 07 
+    2,2,2,2,2,2,0,0,  # 08 - 0f 
+    2,2,2,2,2,2,2,2,  # 10 - 17 
+    2,2,2,0,2,2,2,2,  # 18 - 1f 
+    2,2,2,2,2,2,2,2,  # 20 - 27 
+    2,2,2,2,2,2,2,2,  # 28 - 2f 
+    2,2,2,2,2,2,2,2,  # 30 - 37 
+    2,2,2,2,2,2,2,2,  # 38 - 3f 
+    2,2,2,2,2,2,2,2,  # 40 - 47 
+    2,2,2,2,2,2,2,2,  # 48 - 4f 
+    2,2,2,2,2,2,2,2,  # 50 - 57 
+    2,2,2,2,2,2,2,2,  # 58 - 5f 
+    2,2,2,2,2,2,2,2,  # 60 - 67 
+    2,2,2,2,2,2,2,2,  # 68 - 6f 
+    2,2,2,2,2,2,2,2,  # 70 - 77 
+    2,2,2,2,2,2,2,2,  # 78 - 7f 
+    0,0,0,0,0,0,0,0,  # 80 - 87 
+    0,0,0,0,0,0,6,0,  # 88 - 8f 
+    0,0,0,0,0,0,0,0,  # 90 - 97 
+    0,0,0,0,0,0,0,0,  # 98 - 9f 
+    0,3,4,4,4,4,4,4,  # a0 - a7 
+    5,5,1,1,1,1,1,1,  # a8 - af 
+    1,1,1,1,1,1,1,1,  # b0 - b7 
+    1,1,1,1,1,1,1,1,  # b8 - bf 
+    1,1,3,1,3,3,3,3,  # c0 - c7 
+    3,3,3,3,3,3,3,3,  # c8 - cf 
+    3,3,3,3,3,3,3,3,  # d0 - d7 
+    3,3,3,3,3,3,3,3,  # d8 - df 
+    3,3,3,3,3,3,3,3,  # e0 - e7 
+    3,3,3,3,3,3,3,3,  # e8 - ef 
+    3,3,3,3,3,3,3,3,  # f0 - f7 
+    3,3,3,3,3,3,3,0)  # f8 - ff 
+
+EUCTW_st = ( \
+    eError,eError,eStart,     3,     3,     3,     4,eError,#00-07 
+    eError,eError,eError,eError,eError,eError,eItsMe,eItsMe,#08-0f 
+    eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eError,eStart,eError,#10-17 
+    eStart,eStart,eStart,eError,eError,eError,eError,eError,#18-1f 
+         5,eError,eError,eError,eStart,eError,eStart,eStart,#20-27 
+    eStart,eError,eStart,eStart,eStart,eStart,eStart,eStart)#28-2f 
+
+EUCTWCharLenTable = (0, 0, 1, 2, 2, 2, 3)
+
+EUCTWSMModel = {'classTable': EUCTW_cls,
+                'classFactor': 7,
+                'stateTable': EUCTW_st,
+                'charLenTable': EUCTWCharLenTable,
+                'name': 'x-euc-tw'}
+
+# GB2312
+
+GB2312_cls = ( \
+    1,1,1,1,1,1,1,1,  # 00 - 07 
+    1,1,1,1,1,1,0,0,  # 08 - 0f 
+    1,1,1,1,1,1,1,1,  # 10 - 17 
+    1,1,1,0,1,1,1,1,  # 18 - 1f 
+    1,1,1,1,1,1,1,1,  # 20 - 27 
+    1,1,1,1,1,1,1,1,  # 28 - 2f 
+    3,3,3,3,3,3,3,3,  # 30 - 37 
+    3,3,1,1,1,1,1,1,  # 38 - 3f 
+    2,2,2,2,2,2,2,2,  # 40 - 47 
+    2,2,2,2,2,2,2,2,  # 48 - 4f 
+    2,2,2,2,2,2,2,2,  # 50 - 57 
+    2,2,2,2,2,2,2,2,  # 58 - 5f 
+    2,2,2,2,2,2,2,2,  # 60 - 67 
+    2,2,2,2,2,2,2,2,  # 68 - 6f 
+    2,2,2,2,2,2,2,2,  # 70 - 77 
+    2,2,2,2,2,2,2,4,  # 78 - 7f 
+    5,6,6,6,6,6,6,6,  # 80 - 87 
+    6,6,6,6,6,6,6,6,  # 88 - 8f 
+    6,6,6,6,6,6,6,6,  # 90 - 97 
+    6,6,6,6,6,6,6,6,  # 98 - 9f 
+    6,6,6,6,6,6,6,6,  # a0 - a7 
+    6,6,6,6,6,6,6,6,  # a8 - af 
+    6,6,6,6,6,6,6,6,  # b0 - b7 
+    6,6,6,6,6,6,6,6,  # b8 - bf 
+    6,6,6,6,6,6,6,6,  # c0 - c7 
+    6,6,6,6,6,6,6,6,  # c8 - cf 
+    6,6,6,6,6,6,6,6,  # d0 - d7 
+    6,6,6,6,6,6,6,6,  # d8 - df 
+    6,6,6,6,6,6,6,6,  # e0 - e7 
+    6,6,6,6,6,6,6,6,  # e8 - ef 
+    6,6,6,6,6,6,6,6,  # f0 - f7 
+    6,6,6,6,6,6,6,0)  # f8 - ff 
+
+GB2312_st = ( \
+    eError,eStart,eStart,eStart,eStart,eStart,     3,eError,#00-07 
+    eError,eError,eError,eError,eError,eError,eItsMe,eItsMe,#08-0f 
+    eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eError,eError,eStart,#10-17 
+         4,eError,eStart,eStart,eError,eError,eError,eError,#18-1f 
+    eError,eError,     5,eError,eError,eError,eItsMe,eError,#20-27 
+    eError,eError,eStart,eStart,eStart,eStart,eStart,eStart)#28-2f 
+
+# To be accurate, the length of class 6 can be either 2 or 4. 
+# But it is not necessary to discriminate between the two since 
+# it is used for frequency analysis only, and we are validing 
+# each code range there as well. So it is safe to set it to be 
+# 2 here. 
+GB2312CharLenTable = (0, 1, 1, 1, 1, 1, 2)
+
+GB2312SMModel = {'classTable': GB2312_cls,
+                  'classFactor': 7,
+                  'stateTable': GB2312_st,
+                  'charLenTable': GB2312CharLenTable,
+                  'name': 'GB2312'}
+
+# Shift_JIS
+
+SJIS_cls = ( \
+    1,1,1,1,1,1,1,1,  # 00 - 07 
+    1,1,1,1,1,1,0,0,  # 08 - 0f 
+    1,1,1,1,1,1,1,1,  # 10 - 17 
+    1,1,1,0,1,1,1,1,  # 18 - 1f 
+    1,1,1,1,1,1,1,1,  # 20 - 27 
+    1,1,1,1,1,1,1,1,  # 28 - 2f 
+    1,1,1,1,1,1,1,1,  # 30 - 37 
+    1,1,1,1,1,1,1,1,  # 38 - 3f 
+    2,2,2,2,2,2,2,2,  # 40 - 47 
+    2,2,2,2,2,2,2,2,  # 48 - 4f 
+    2,2,2,2,2,2,2,2,  # 50 - 57 
+    2,2,2,2,2,2,2,2,  # 58 - 5f 
+    2,2,2,2,2,2,2,2,  # 60 - 67 
+    2,2,2,2,2,2,2,2,  # 68 - 6f 
+    2,2,2,2,2,2,2,2,  # 70 - 77 
+    2,2,2,2,2,2,2,1,  # 78 - 7f 
+    3,3,3,3,3,3,3,3,  # 80 - 87 
+    3,3,3,3,3,3,3,3,  # 88 - 8f 
+    3,3,3,3,3,3,3,3,  # 90 - 97 
+    3,3,3,3,3,3,3,3,  # 98 - 9f 
+    #0xa0 is illegal in sjis encoding, but some pages does 
+    #contain such byte. We need to be more error forgiven.
+    2,2,2,2,2,2,2,2,  # a0 - a7     
+    2,2,2,2,2,2,2,2,  # a8 - af 
+    2,2,2,2,2,2,2,2,  # b0 - b7 
+    2,2,2,2,2,2,2,2,  # b8 - bf 
+    2,2,2,2,2,2,2,2,  # c0 - c7 
+    2,2,2,2,2,2,2,2,  # c8 - cf 
+    2,2,2,2,2,2,2,2,  # d0 - d7 
+    2,2,2,2,2,2,2,2,  # d8 - df 
+    3,3,3,3,3,3,3,3,  # e0 - e7 
+    3,3,3,3,3,4,4,4,  # e8 - ef 
+    4,4,4,4,4,4,4,4,  # f0 - f7 
+    4,4,4,4,4,0,0,0)  # f8 - ff 
+
+SJIS_st = ( \
+    eError,eStart,eStart,     3,eError,eError,eError,eError,#00-07 
+    eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,#08-0f 
+    eItsMe,eItsMe,eError,eError,eStart,eStart,eStart,eStart)#10-17 
+
+SJISCharLenTable = (0, 1, 1, 2, 0, 0)
+
+SJISSMModel = {'classTable': SJIS_cls,
+               'classFactor': 6,
+               'stateTable': SJIS_st,
+               'charLenTable': SJISCharLenTable,
+               'name': 'Shift_JIS'}
+
+# UCS2-BE
+
+UCS2BE_cls = ( \
+    0,0,0,0,0,0,0,0,  # 00 - 07 
+    0,0,1,0,0,2,0,0,  # 08 - 0f 
+    0,0,0,0,0,0,0,0,  # 10 - 17 
+    0,0,0,3,0,0,0,0,  # 18 - 1f 
+    0,0,0,0,0,0,0,0,  # 20 - 27 
+    0,3,3,3,3,3,0,0,  # 28 - 2f 
+    0,0,0,0,0,0,0,0,  # 30 - 37 
+    0,0,0,0,0,0,0,0,  # 38 - 3f 
+    0,0,0,0,0,0,0,0,  # 40 - 47 
+    0,0,0,0,0,0,0,0,  # 48 - 4f 
+    0,0,0,0,0,0,0,0,  # 50 - 57 
+    0,0,0,0,0,0,0,0,  # 58 - 5f 
+    0,0,0,0,0,0,0,0,  # 60 - 67 
+    0,0,0,0,0,0,0,0,  # 68 - 6f 
+    0,0,0,0,0,0,0,0,  # 70 - 77 
+    0,0,0,0,0,0,0,0,  # 78 - 7f 
+    0,0,0,0,0,0,0,0,  # 80 - 87 
+    0,0,0,0,0,0,0,0,  # 88 - 8f 
+    0,0,0,0,0,0,0,0,  # 90 - 97 
+    0,0,0,0,0,0,0,0,  # 98 - 9f 
+    0,0,0,0,0,0,0,0,  # a0 - a7 
+    0,0,0,0,0,0,0,0,  # a8 - af 
+    0,0,0,0,0,0,0,0,  # b0 - b7 
+    0,0,0,0,0,0,0,0,  # b8 - bf 
+    0,0,0,0,0,0,0,0,  # c0 - c7 
+    0,0,0,0,0,0,0,0,  # c8 - cf 
+    0,0,0,0,0,0,0,0,  # d0 - d7 
+    0,0,0,0,0,0,0,0,  # d8 - df 
+    0,0,0,0,0,0,0,0,  # e0 - e7 
+    0,0,0,0,0,0,0,0,  # e8 - ef 
+    0,0,0,0,0,0,0,0,  # f0 - f7 
+    0,0,0,0,0,0,4,5)  # f8 - ff 
+
+UCS2BE_st  = ( \
+          5,     7,     7,eError,     4,     3,eError,eError,#00-07 
+     eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,#08-0f 
+     eItsMe,eItsMe,     6,     6,     6,     6,eError,eError,#10-17 
+          6,     6,     6,     6,     6,eItsMe,     6,     6,#18-1f 
+          6,     6,     6,     6,     5,     7,     7,eError,#20-27 
+          5,     8,     6,     6,eError,     6,     6,     6,#28-2f 
+          6,     6,     6,     6,eError,eError,eStart,eStart)#30-37 
+
+UCS2BECharLenTable = (2, 2, 2, 0, 2, 2)
+
+UCS2BESMModel = {'classTable': UCS2BE_cls,
+                 'classFactor': 6,
+                 'stateTable': UCS2BE_st,
+                 'charLenTable': UCS2BECharLenTable,
+                 'name': 'UTF-16BE'}
+
+# UCS2-LE
+
+UCS2LE_cls = ( \
+    0,0,0,0,0,0,0,0,  # 00 - 07 
+    0,0,1,0,0,2,0,0,  # 08 - 0f 
+    0,0,0,0,0,0,0,0,  # 10 - 17 
+    0,0,0,3,0,0,0,0,  # 18 - 1f 
+    0,0,0,0,0,0,0,0,  # 20 - 27 
+    0,3,3,3,3,3,0,0,  # 28 - 2f 
+    0,0,0,0,0,0,0,0,  # 30 - 37 
+    0,0,0,0,0,0,0,0,  # 38 - 3f 
+    0,0,0,0,0,0,0,0,  # 40 - 47 
+    0,0,0,0,0,0,0,0,  # 48 - 4f 
+    0,0,0,0,0,0,0,0,  # 50 - 57 
+    0,0,0,0,0,0,0,0,  # 58 - 5f 
+    0,0,0,0,0,0,0,0,  # 60 - 67 
+    0,0,0,0,0,0,0,0,  # 68 - 6f 
+    0,0,0,0,0,0,0,0,  # 70 - 77 
+    0,0,0,0,0,0,0,0,  # 78 - 7f 
+    0,0,0,0,0,0,0,0,  # 80 - 87 
+    0,0,0,0,0,0,0,0,  # 88 - 8f 
+    0,0,0,0,0,0,0,0,  # 90 - 97 
+    0,0,0,0,0,0,0,0,  # 98 - 9f 
+    0,0,0,0,0,0,0,0,  # a0 - a7 
+    0,0,0,0,0,0,0,0,  # a8 - af 
+    0,0,0,0,0,0,0,0,  # b0 - b7 
+    0,0,0,0,0,0,0,0,  # b8 - bf 
+    0,0,0,0,0,0,0,0,  # c0 - c7 
+    0,0,0,0,0,0,0,0,  # c8 - cf 
+    0,0,0,0,0,0,0,0,  # d0 - d7 
+    0,0,0,0,0,0,0,0,  # d8 - df 
+    0,0,0,0,0,0,0,0,  # e0 - e7 
+    0,0,0,0,0,0,0,0,  # e8 - ef 
+    0,0,0,0,0,0,0,0,  # f0 - f7 
+    0,0,0,0,0,0,4,5)  # f8 - ff 
+
+UCS2LE_st = ( \
+          6,     6,     7,     6,     4,     3,eError,eError,#00-07 
+     eError,eError,eError,eError,eItsMe,eItsMe,eItsMe,eItsMe,#08-0f 
+     eItsMe,eItsMe,     5,     5,     5,eError,eItsMe,eError,#10-17 
+          5,     5,     5,eError,     5,eError,     6,     6,#18-1f 
+          7,     6,     8,     8,     5,     5,     5,eError,#20-27 
+          5,     5,     5,eError,eError,eError,     5,     5,#28-2f 
+          5,     5,     5,eError,     5,eError,eStart,eStart)#30-37 
+
+UCS2LECharLenTable = (2, 2, 2, 2, 2, 2)
+
+UCS2LESMModel = {'classTable': UCS2LE_cls,
+                 'classFactor': 6,
+                 'stateTable': UCS2LE_st,
+                 'charLenTable': UCS2LECharLenTable,
+                 'name': 'UTF-16LE'}
+
+# UTF-8
+
+UTF8_cls = ( \
+    1,1,1,1,1,1,1,1,  # 00 - 07  #allow 0x00 as a legal value
+    1,1,1,1,1,1,0,0,  # 08 - 0f 
+    1,1,1,1,1,1,1,1,  # 10 - 17 
+    1,1,1,0,1,1,1,1,  # 18 - 1f 
+    1,1,1,1,1,1,1,1,  # 20 - 27 
+    1,1,1,1,1,1,1,1,  # 28 - 2f 
+    1,1,1,1,1,1,1,1,  # 30 - 37 
+    1,1,1,1,1,1,1,1,  # 38 - 3f 
+    1,1,1,1,1,1,1,1,  # 40 - 47 
+    1,1,1,1,1,1,1,1,  # 48 - 4f 
+    1,1,1,1,1,1,1,1,  # 50 - 57 
+    1,1,1,1,1,1,1,1,  # 58 - 5f 
+    1,1,1,1,1,1,1,1,  # 60 - 67 
+    1,1,1,1,1,1,1,1,  # 68 - 6f 
+    1,1,1,1,1,1,1,1,  # 70 - 77 
+    1,1,1,1,1,1,1,1,  # 78 - 7f 
+    2,2,2,2,3,3,3,3,  # 80 - 87 
+    4,4,4,4,4,4,4,4,  # 88 - 8f 
+    4,4,4,4,4,4,4,4,  # 90 - 97 
+    4,4,4,4,4,4,4,4,  # 98 - 9f 
+    5,5,5,5,5,5,5,5,  # a0 - a7 
+    5,5,5,5,5,5,5,5,  # a8 - af 
+    5,5,5,5,5,5,5,5,  # b0 - b7 
+    5,5,5,5,5,5,5,5,  # b8 - bf 
+    0,0,6,6,6,6,6,6,  # c0 - c7 
+    6,6,6,6,6,6,6,6,  # c8 - cf 
+    6,6,6,6,6,6,6,6,  # d0 - d7 
+    6,6,6,6,6,6,6,6,  # d8 - df 
+    7,8,8,8,8,8,8,8,  # e0 - e7 
+    8,8,8,8,8,9,8,8,  # e8 - ef 
+    10,11,11,11,11,11,11,11,  # f0 - f7 
+    12,13,13,13,14,15,0,0)   # f8 - ff 
+
+UTF8_st = ( \
+    eError,eStart,eError,eError,eError,eError,     12,   10,#00-07 
+         9,     11,     8,     7,     6,     5,     4,    3,#08-0f 
+    eError,eError,eError,eError,eError,eError,eError,eError,#10-17 
+    eError,eError,eError,eError,eError,eError,eError,eError,#18-1f 
+    eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,#20-27 
+    eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,eItsMe,#28-2f 
+    eError,eError,     5,     5,     5,     5,eError,eError,#30-37 
+    eError,eError,eError,eError,eError,eError,eError,eError,#38-3f 
+    eError,eError,eError,     5,     5,     5,eError,eError,#40-47 
+    eError,eError,eError,eError,eError,eError,eError,eError,#48-4f 
+    eError,eError,     7,     7,     7,     7,eError,eError,#50-57 
+    eError,eError,eError,eError,eError,eError,eError,eError,#58-5f 
+    eError,eError,eError,eError,     7,     7,eError,eError,#60-67 
+    eError,eError,eError,eError,eError,eError,eError,eError,#68-6f 
+    eError,eError,     9,     9,     9,     9,eError,eError,#70-77 
+    eError,eError,eError,eError,eError,eError,eError,eError,#78-7f 
+    eError,eError,eError,eError,eError,     9,eError,eError,#80-87 
+    eError,eError,eError,eError,eError,eError,eError,eError,#88-8f 
+    eError,eError,    12,    12,    12,    12,eError,eError,#90-97 
+    eError,eError,eError,eError,eError,eError,eError,eError,#98-9f 
+    eError,eError,eError,eError,eError,    12,eError,eError,#a0-a7 
+    eError,eError,eError,eError,eError,eError,eError,eError,#a8-af 
+    eError,eError,    12,    12,    12,eError,eError,eError,#b0-b7 
+    eError,eError,eError,eError,eError,eError,eError,eError,#b8-bf 
+    eError,eError,eStart,eStart,eStart,eStart,eError,eError,#c0-c7 
+    eError,eError,eError,eError,eError,eError,eError,eError)#c8-cf 
+
+UTF8CharLenTable = (0, 1, 0, 0, 0, 0, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6)
+
+UTF8SMModel = {'classTable': UTF8_cls,
+               'classFactor': 16,
+               'stateTable': UTF8_st,
+               'charLenTable': UTF8CharLenTable,
+               'name': 'UTF-8'}
--- a/subsdownloader2/src/SourceCode/chardet/sbcharsetprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/sbcharsetprober.py
@@ -1,106 +1,107 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 2001
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#   Shy Shalom - original C code
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants, sys
-from charsetprober import CharSetProber
-
-SAMPLE_SIZE = 64
-SB_ENOUGH_REL_THRESHOLD = 1024
-POSITIVE_SHORTCUT_THRESHOLD = 0.95
-NEGATIVE_SHORTCUT_THRESHOLD = 0.05
-SYMBOL_CAT_ORDER = 250
-NUMBER_OF_SEQ_CAT = 4
-POSITIVE_CAT = NUMBER_OF_SEQ_CAT - 1
-#NEGATIVE_CAT = 0
- 
-class SingleByteCharSetProber(CharSetProber):
-    def __init__(self, model, reversed=constants.False, nameProber=None):
-        CharSetProber.__init__(self)
-        self._mModel = model
-        self._mReversed = reversed # TRUE if we need to reverse every pair in the model lookup
-        self._mNameProber = nameProber # Optional auxiliary prober for name decision
-        self.reset()
-
-    def reset(self):
-        CharSetProber.reset(self)
-        self._mLastOrder = 255 # char order of last character
-        self._mSeqCounters = [0] * NUMBER_OF_SEQ_CAT
-        self._mTotalSeqs = 0
-        self._mTotalChar = 0
-        self._mFreqChar = 0 # characters that fall in our sampling range
-
-    def get_charset_name(self):
-        if self._mNameProber:
-            return self._mNameProber.get_charset_name()
-        else:
-            return self._mModel['charsetName']
-
-    def feed(self, aBuf):
-        if not self._mModel['keepEnglishLetter']:
-            aBuf = self.filter_without_english_letters(aBuf)
-        aLen = len(aBuf)
-        if not aLen:
-            return self.get_state()
-        for c in aBuf:
-            order = self._mModel['charToOrderMap'][ord(c)]
-            if order < SYMBOL_CAT_ORDER:
-                self._mTotalChar += 1
-            if order < SAMPLE_SIZE:
-                self._mFreqChar += 1
-                if self._mLastOrder < SAMPLE_SIZE:
-                    self._mTotalSeqs += 1
-                    if not self._mReversed:
-                        self._mSeqCounters[self._mModel['precedenceMatrix'][(self._mLastOrder * SAMPLE_SIZE) + order]] += 1
-                    else: # reverse the order of the letters in the lookup
-                        self._mSeqCounters[self._mModel['precedenceMatrix'][(order * SAMPLE_SIZE) + self._mLastOrder]] += 1
-            self._mLastOrder = order
-
-        if self.get_state() == constants.eDetecting:
-            if self._mTotalSeqs > SB_ENOUGH_REL_THRESHOLD:
-                cf = self.get_confidence()
-                if cf > POSITIVE_SHORTCUT_THRESHOLD:
-                    if constants._debug:
-                        sys.stderr.write('%s confidence = %s, we have a winner\n' % (self._mModel['charsetName'], cf))
-                    self._mState = constants.eFoundIt
-                elif cf < NEGATIVE_SHORTCUT_THRESHOLD:
-                    if constants._debug:
-                        sys.stderr.write('%s confidence = %s, below negative shortcut threshhold %s\n' % (self._mModel['charsetName'], cf, NEGATIVE_SHORTCUT_THRESHOLD))
-                    self._mState = constants.eNotMe
-
-        return self.get_state()
-
-    def get_confidence(self):
-        r = 0.01
-        if self._mTotalSeqs > 0:
-#            print self._mSeqCounters[POSITIVE_CAT], self._mTotalSeqs, self._mModel['mTypicalPositiveRatio']
-            r = (1.0 * self._mSeqCounters[POSITIVE_CAT]) / self._mTotalSeqs / self._mModel['mTypicalPositiveRatio']
-#            print r, self._mFreqChar, self._mTotalChar
-            r = r * self._mFreqChar / self._mTotalChar
-            if r >= 1.0:
-                r = 0.99
-        return r
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 2001
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#   Shy Shalom - original C code
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+import sys
+from .charsetprober import CharSetProber
+
+SAMPLE_SIZE = 64
+SB_ENOUGH_REL_THRESHOLD = 1024
+POSITIVE_SHORTCUT_THRESHOLD = 0.95
+NEGATIVE_SHORTCUT_THRESHOLD = 0.05
+SYMBOL_CAT_ORDER = 250
+NUMBER_OF_SEQ_CAT = 4
+POSITIVE_CAT = NUMBER_OF_SEQ_CAT - 1
+#NEGATIVE_CAT = 0
+ 
+class SingleByteCharSetProber(CharSetProber):
+    def __init__(self, model, reversed=False, nameProber=None):
+        CharSetProber.__init__(self)
+        self._mModel = model
+        self._mReversed = reversed # TRUE if we need to reverse every pair in the model lookup
+        self._mNameProber = nameProber # Optional auxiliary prober for name decision
+        self.reset()
+
+    def reset(self):
+        CharSetProber.reset(self)
+        self._mLastOrder = 255 # char order of last character
+        self._mSeqCounters = [0] * NUMBER_OF_SEQ_CAT
+        self._mTotalSeqs = 0
+        self._mTotalChar = 0
+        self._mFreqChar = 0 # characters that fall in our sampling range
+
+    def get_charset_name(self):
+        if self._mNameProber:
+            return self._mNameProber.get_charset_name()
+        else:
+            return self._mModel['charsetName']
+
+    def feed(self, aBuf):
+        if not self._mModel['keepEnglishLetter']:
+            aBuf = self.filter_without_english_letters(aBuf)
+        aLen = len(aBuf)
+        if not aLen:
+            return self.get_state()
+        for c in aBuf:
+            order = self._mModel['charToOrderMap'][c]
+            if order < SYMBOL_CAT_ORDER:
+                self._mTotalChar += 1
+            if order < SAMPLE_SIZE:
+                self._mFreqChar += 1
+                if self._mLastOrder < SAMPLE_SIZE:
+                    self._mTotalSeqs += 1
+                    if not self._mReversed:
+                        self._mSeqCounters[self._mModel['precedenceMatrix'][(self._mLastOrder * SAMPLE_SIZE) + order]] += 1
+                    else: # reverse the order of the letters in the lookup
+                        self._mSeqCounters[self._mModel['precedenceMatrix'][(order * SAMPLE_SIZE) + self._mLastOrder]] += 1
+            self._mLastOrder = order
+
+        if self.get_state() == constants.eDetecting:
+            if self._mTotalSeqs > SB_ENOUGH_REL_THRESHOLD:
+                cf = self.get_confidence()
+                if cf > POSITIVE_SHORTCUT_THRESHOLD:
+                    if constants._debug:
+                        sys.stderr.write('%s confidence = %s, we have a winner\n' % (self._mModel['charsetName'], cf))
+                    self._mState = constants.eFoundIt
+                elif cf < NEGATIVE_SHORTCUT_THRESHOLD:
+                    if constants._debug:
+                        sys.stderr.write('%s confidence = %s, below negative shortcut threshhold %s\n' % (self._mModel['charsetName'], cf, NEGATIVE_SHORTCUT_THRESHOLD))
+                    self._mState = constants.eNotMe
+
+        return self.get_state()
+
+    def get_confidence(self):
+        r = 0.01
+        if self._mTotalSeqs > 0:
+#            print self._mSeqCounters[POSITIVE_CAT], self._mTotalSeqs, self._mModel['mTypicalPositiveRatio']
+            r = (1.0 * self._mSeqCounters[POSITIVE_CAT]) / self._mTotalSeqs / self._mModel['mTypicalPositiveRatio']
+#            print r, self._mFreqChar, self._mTotalChar
+            r = r * self._mFreqChar / self._mTotalChar
+            if r >= 1.0:
+                r = 0.99
+        return r
--- a/subsdownloader2/src/SourceCode/chardet/sbcsgroupprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/sbcsgroupprober.py
@@ -1,64 +1,65 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 2001
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#   Shy Shalom - original C code
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants, sys
-from charsetgroupprober import CharSetGroupProber
-from sbcharsetprober import SingleByteCharSetProber
-from langcyrillicmodel import Win1251CyrillicModel, Koi8rModel, Latin5CyrillicModel, MacCyrillicModel, Ibm866Model, Ibm855Model
-from langgreekmodel import Latin7GreekModel, Win1253GreekModel
-from langbulgarianmodel import Latin5BulgarianModel, Win1251BulgarianModel
-from langhungarianmodel import Latin2HungarianModel, Win1250HungarianModel
-from langthaimodel import TIS620ThaiModel
-from langhebrewmodel import Win1255HebrewModel
-from hebrewprober import HebrewProber
-
-class SBCSGroupProber(CharSetGroupProber):
-    def __init__(self):
-        CharSetGroupProber.__init__(self)
-        self._mProbers = [ \
-            SingleByteCharSetProber(Win1251CyrillicModel),
-            SingleByteCharSetProber(Koi8rModel),
-            SingleByteCharSetProber(Latin5CyrillicModel),
-            SingleByteCharSetProber(MacCyrillicModel),
-            SingleByteCharSetProber(Ibm866Model),
-            SingleByteCharSetProber(Ibm855Model),
-            SingleByteCharSetProber(Latin7GreekModel),
-            SingleByteCharSetProber(Win1253GreekModel),
-            SingleByteCharSetProber(Latin5BulgarianModel),
-            SingleByteCharSetProber(Win1251BulgarianModel),
-            SingleByteCharSetProber(Latin2HungarianModel),
-            SingleByteCharSetProber(Win1250HungarianModel),
-            SingleByteCharSetProber(TIS620ThaiModel),
-            ]
-        hebrewProber = HebrewProber()
-        logicalHebrewProber = SingleByteCharSetProber(Win1255HebrewModel, constants.False, hebrewProber)
-        visualHebrewProber = SingleByteCharSetProber(Win1255HebrewModel, constants.True, hebrewProber)
-        hebrewProber.set_model_probers(logicalHebrewProber, visualHebrewProber)
-        self._mProbers.extend([hebrewProber, logicalHebrewProber, visualHebrewProber])
-
-        self.reset()
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 2001
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#   Shy Shalom - original C code
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+import sys
+from .charsetgroupprober import CharSetGroupProber
+from .sbcharsetprober import SingleByteCharSetProber
+from .langcyrillicmodel import Win1251CyrillicModel, Koi8rModel, Latin5CyrillicModel, MacCyrillicModel, Ibm866Model, Ibm855Model
+from .langgreekmodel import Latin7GreekModel, Win1253GreekModel
+from .langbulgarianmodel import Latin5BulgarianModel, Win1251BulgarianModel
+from .langhungarianmodel import Latin2HungarianModel, Win1250HungarianModel
+from .langthaimodel import TIS620ThaiModel
+from .langhebrewmodel import Win1255HebrewModel
+from .hebrewprober import HebrewProber
+
+class SBCSGroupProber(CharSetGroupProber):
+    def __init__(self):
+        CharSetGroupProber.__init__(self)
+        self._mProbers = [ \
+            SingleByteCharSetProber(Win1251CyrillicModel),
+            SingleByteCharSetProber(Koi8rModel),
+            SingleByteCharSetProber(Latin5CyrillicModel),
+            SingleByteCharSetProber(MacCyrillicModel),
+            SingleByteCharSetProber(Ibm866Model),
+            SingleByteCharSetProber(Ibm855Model),
+            SingleByteCharSetProber(Latin7GreekModel),
+            SingleByteCharSetProber(Win1253GreekModel),
+            SingleByteCharSetProber(Latin5BulgarianModel),
+            SingleByteCharSetProber(Win1251BulgarianModel),
+            SingleByteCharSetProber(Latin2HungarianModel),
+            SingleByteCharSetProber(Win1250HungarianModel),
+            SingleByteCharSetProber(TIS620ThaiModel),
+            ]
+        hebrewProber = HebrewProber()
+        logicalHebrewProber = SingleByteCharSetProber(Win1255HebrewModel, False, hebrewProber)
+        visualHebrewProber = SingleByteCharSetProber(Win1255HebrewModel, True, hebrewProber)
+        hebrewProber.set_model_probers(logicalHebrewProber, visualHebrewProber)
+        self._mProbers.extend([hebrewProber, logicalHebrewProber, visualHebrewProber])
+
+        self.reset()
--- a/subsdownloader2/src/SourceCode/chardet/sjisprober.py
+++ b/subsdownloader2/src/SourceCode/chardet/sjisprober.py
@@ -1,85 +1,86 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-from mbcharsetprober import MultiByteCharSetProber
-from codingstatemachine import CodingStateMachine
-from chardistribution import SJISDistributionAnalysis
-from jpcntx import SJISContextAnalysis
-from mbcssm import SJISSMModel
-import constants, sys
-from constants import eStart, eError, eItsMe
-
-class SJISProber(MultiByteCharSetProber):
-    def __init__(self):
-        MultiByteCharSetProber.__init__(self)
-        self._mCodingSM = CodingStateMachine(SJISSMModel)
-        self._mDistributionAnalyzer = SJISDistributionAnalysis()
-        self._mContextAnalyzer = SJISContextAnalysis()
-        self.reset()
-
-    def reset(self):
-        MultiByteCharSetProber.reset(self)
-        self._mContextAnalyzer.reset()
-        
-    def get_charset_name(self):
-        return "SHIFT_JIS"
-
-    def feed(self, aBuf):
-        aLen = len(aBuf)
-        for i in range(0, aLen):
-            codingState = self._mCodingSM.next_state(aBuf[i])
-            if codingState == eError:
-                if constants._debug:
-                    sys.stderr.write(self.get_charset_name() + ' prober hit error at byte ' + str(i) + '\n')
-                self._mState = constants.eNotMe
-                break
-            elif codingState == eItsMe:
-                self._mState = constants.eFoundIt
-                break
-            elif codingState == eStart:
-                charLen = self._mCodingSM.get_current_charlen()
-                if i == 0:
-                    self._mLastChar[1] = aBuf[0]
-                    self._mContextAnalyzer.feed(self._mLastChar[2 - charLen :], charLen)
-                    self._mDistributionAnalyzer.feed(self._mLastChar, charLen)
-                else:
-                    self._mContextAnalyzer.feed(aBuf[i + 1 - charLen : i + 3 - charLen], charLen)
-                    self._mDistributionAnalyzer.feed(aBuf[i - 1 : i + 1], charLen)
-                    
-        self._mLastChar[0] = aBuf[aLen - 1]
-        
-        if self.get_state() == constants.eDetecting:
-            if self._mContextAnalyzer.got_enough_data() and \
-                   (self.get_confidence() > constants.SHORTCUT_THRESHOLD):
-                self._mState = constants.eFoundIt
-
-        return self.get_state()
-
-    def get_confidence(self):
-        contxtCf = self._mContextAnalyzer.get_confidence()
-        distribCf = self._mDistributionAnalyzer.get_confidence()
-        return max(contxtCf, distribCf)
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from .mbcharsetprober import MultiByteCharSetProber
+from .codingstatemachine import CodingStateMachine
+from .chardistribution import SJISDistributionAnalysis
+from .jpcntx import SJISContextAnalysis
+from .mbcssm import SJISSMModel
+from . import constants
+import sys
+from .constants import eStart, eError, eItsMe
+
+class SJISProber(MultiByteCharSetProber):
+    def __init__(self):
+        MultiByteCharSetProber.__init__(self)
+        self._mCodingSM = CodingStateMachine(SJISSMModel)
+        self._mDistributionAnalyzer = SJISDistributionAnalysis()
+        self._mContextAnalyzer = SJISContextAnalysis()
+        self.reset()
+
+    def reset(self):
+        MultiByteCharSetProber.reset(self)
+        self._mContextAnalyzer.reset()
+        
+    def get_charset_name(self):
+        return "SHIFT_JIS"
+
+    def feed(self, aBuf):
+        aLen = len(aBuf)
+        for i in range(0, aLen):
+            codingState = self._mCodingSM.next_state(aBuf[i])
+            if codingState == eError:
+                if constants._debug:
+                    sys.stderr.write(self.get_charset_name() + ' prober hit error at byte ' + str(i) + '\n')
+                self._mState = constants.eNotMe
+                break
+            elif codingState == eItsMe:
+                self._mState = constants.eFoundIt
+                break
+            elif codingState == eStart:
+                charLen = self._mCodingSM.get_current_charlen()
+                if i == 0:
+                    self._mLastChar[1] = aBuf[0]
+                    self._mContextAnalyzer.feed(self._mLastChar[2 - charLen :], charLen)
+                    self._mDistributionAnalyzer.feed(self._mLastChar, charLen)
+                else:
+                    self._mContextAnalyzer.feed(aBuf[i + 1 - charLen : i + 3 - charLen], charLen)
+                    self._mDistributionAnalyzer.feed(aBuf[i - 1 : i + 1], charLen)
+                    
+        self._mLastChar[0] = aBuf[aLen - 1]
+        
+        if self.get_state() == constants.eDetecting:
+            if self._mContextAnalyzer.got_enough_data() and \
+                   (self.get_confidence() > constants.SHORTCUT_THRESHOLD):
+                self._mState = constants.eFoundIt
+
+        return self.get_state()
+
+    def get_confidence(self):
+        contxtCf = self._mContextAnalyzer.get_confidence()
+        distribCf = self._mDistributionAnalyzer.get_confidence()
+        return max(contxtCf, distribCf)
--- a/subsdownloader2/src/SourceCode/chardet/test.py
+++ b/subsdownloader2/src/SourceCode/chardet/test.py
@@ -1,20 +1,20 @@
-import sys, glob
-sys.path.insert(0, '..')
-from chardet.universaldetector import UniversalDetector
-
-count = 0
-u = UniversalDetector()
-for f in glob.glob(sys.argv[1]):
-    print f.ljust(60),
-    u.reset()
-    for line in file(f, 'rb'):
-        u.feed(line)
-        if u.done: break
-    u.close()
-    result = u.result
-    if result['encoding']:
-        print result['encoding'], 'with confidence', result['confidence']
-    else:
-        print '******** no result'
-    count += 1
-print count, 'tests'
+import sys, glob
+sys.path.insert(0, '..')
+from chardet.universaldetector import UniversalDetector
+
+count = 0
+u = UniversalDetector()
+for f in glob.glob(sys.argv[1]):
+    print(f.ljust(60), end=' ')
+    u.reset()
+    for line in open(f, 'rb'):
+        u.feed(line)
+        if u.done: break
+    u.close()
+    result = u.result
+    if result['encoding']:
+        print(result['encoding'], 'with confidence', result['confidence'])
+    else:
+        print('******** no result')
+    count += 1
+print(count, 'tests')
--- a/subsdownloader2/src/SourceCode/chardet/universaldetector.py
+++ b/subsdownloader2/src/SourceCode/chardet/universaldetector.py
@@ -1,154 +1,155 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is Mozilla Universal charset detector code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 2001
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#   Shy Shalom - original C code
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants, sys
-from latin1prober import Latin1Prober # windows-1252
-from mbcsgroupprober import MBCSGroupProber # multi-byte character sets
-from sbcsgroupprober import SBCSGroupProber # single-byte character sets
-from escprober import EscCharSetProber # ISO-2122, etc.
-import re
-
-MINIMUM_THRESHOLD = 0.20
-ePureAscii = 0
-eEscAscii = 1
-eHighbyte = 2
-
-class UniversalDetector:
-    def __init__(self):
-        self._highBitDetector = re.compile(r'[\x80-\xFF]')
-        self._escDetector = re.compile(r'(\033|~{)')
-        self._mEscCharSetProber = None
-        self._mCharSetProbers = []
-        self.reset()
-
-    def reset(self):
-        self.result = {'encoding': None, 'confidence': 0.0}
-        self.done = constants.False
-        self._mStart = constants.True
-        self._mGotData = constants.False
-        self._mInputState = ePureAscii
-        self._mLastChar = ''
-        if self._mEscCharSetProber:
-            self._mEscCharSetProber.reset()
-        for prober in self._mCharSetProbers:
-            prober.reset()
-
-    def feed(self, aBuf):
-        if self.done: return
-
-        aLen = len(aBuf)
-        if not aLen: return
-        
-        if not self._mGotData:
-            # If the data starts with BOM, we know it is UTF
-            if aBuf[:3] == '\xEF\xBB\xBF':
-                # EF BB BF  UTF-8 with BOM
-                self.result = {'encoding': "UTF-8", 'confidence': 1.0}
-            elif aBuf[:4] == '\xFF\xFE\x00\x00':
-                # FF FE 00 00  UTF-32, little-endian BOM
-                self.result = {'encoding': "UTF-32LE", 'confidence': 1.0}
-            elif aBuf[:4] == '\x00\x00\xFE\xFF': 
-                # 00 00 FE FF  UTF-32, big-endian BOM
-                self.result = {'encoding': "UTF-32BE", 'confidence': 1.0}
-            elif aBuf[:4] == '\xFE\xFF\x00\x00':
-                # FE FF 00 00  UCS-4, unusual octet order BOM (3412)
-                self.result = {'encoding': "X-ISO-10646-UCS-4-3412", 'confidence': 1.0}
-            elif aBuf[:4] == '\x00\x00\xFF\xFE':
-                # 00 00 FF FE  UCS-4, unusual octet order BOM (2143)
-                self.result = {'encoding': "X-ISO-10646-UCS-4-2143", 'confidence': 1.0}
-            elif aBuf[:2] == '\xFF\xFE':
-                # FF FE  UTF-16, little endian BOM
-                self.result = {'encoding': "UTF-16LE", 'confidence': 1.0}
-            elif aBuf[:2] == '\xFE\xFF':
-                # FE FF  UTF-16, big endian BOM
-                self.result = {'encoding': "UTF-16BE", 'confidence': 1.0}
-
-        self._mGotData = constants.True
-        if self.result['encoding'] and (self.result['confidence'] > 0.0):
-            self.done = constants.True
-            return
-
-        if self._mInputState == ePureAscii:
-            if self._highBitDetector.search(aBuf):
-                self._mInputState = eHighbyte
-            elif (self._mInputState == ePureAscii) and self._escDetector.search(self._mLastChar + aBuf):
-                self._mInputState = eEscAscii
-
-        self._mLastChar = aBuf[-1]
-
-        if self._mInputState == eEscAscii:
-            if not self._mEscCharSetProber:
-                self._mEscCharSetProber = EscCharSetProber()
-            if self._mEscCharSetProber.feed(aBuf) == constants.eFoundIt:
-                self.result = {'encoding': self._mEscCharSetProber.get_charset_name(),
-                               'confidence': self._mEscCharSetProber.get_confidence()}
-                self.done = constants.True
-        elif self._mInputState == eHighbyte:
-            if not self._mCharSetProbers:
-                self._mCharSetProbers = [MBCSGroupProber(), SBCSGroupProber(), Latin1Prober()]
-            for prober in self._mCharSetProbers:
-                if prober.feed(aBuf) == constants.eFoundIt:
-                    self.result = {'encoding': prober.get_charset_name(),
-                                   'confidence': prober.get_confidence()}
-                    self.done = constants.True
-                    break
-
-    def close(self):
-        if self.done: return
-        if not self._mGotData:
-            if constants._debug:
-                sys.stderr.write('no data received!\n')
-            return
-        self.done = constants.True
-        
-        if self._mInputState == ePureAscii:
-            self.result = {'encoding': 'ascii', 'confidence': 1.0}
-            return self.result
-
-        if self._mInputState == eHighbyte:
-            proberConfidence = None
-            maxProberConfidence = 0.0
-            maxProber = None
-            for prober in self._mCharSetProbers:
-                if not prober: continue
-                proberConfidence = prober.get_confidence()
-                if proberConfidence > maxProberConfidence:
-                    maxProberConfidence = proberConfidence
-                    maxProber = prober
-            if maxProber and (maxProberConfidence > MINIMUM_THRESHOLD):
-                self.result = {'encoding': maxProber.get_charset_name(),
-                               'confidence': maxProber.get_confidence()}
-                return self.result
-
-        if constants._debug:
-            sys.stderr.write('no probers hit minimum threshhold\n')
-            for prober in self._mCharSetProbers[0].mProbers:
-                if not prober: continue
-                sys.stderr.write('%s confidence = %s\n' % \
-                                 (prober.get_charset_name(), \
-                                  prober.get_confidence()))
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is Mozilla Universal charset detector code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 2001
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#   Shy Shalom - original C code
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+import sys
+from .latin1prober import Latin1Prober # windows-1252
+from .mbcsgroupprober import MBCSGroupProber # multi-byte character sets
+from .sbcsgroupprober import SBCSGroupProber # single-byte character sets
+from .escprober import EscCharSetProber # ISO-2122, etc.
+import re
+
+MINIMUM_THRESHOLD = 0.20
+ePureAscii = 0
+eEscAscii = 1
+eHighbyte = 2
+
+class UniversalDetector:
+    def __init__(self):
+        self._highBitDetector = re.compile(b'[\x80-\xFF]')
+        self._escDetector = re.compile(b'(\033|~{)')
+        self._mEscCharSetProber = None
+        self._mCharSetProbers = []
+        self.reset()
+
+    def reset(self):
+        self.result = {'encoding': None, 'confidence': 0.0}
+        self.done = False
+        self._mStart = True
+        self._mGotData = False
+        self._mInputState = ePureAscii
+        self._mLastChar = b''
+        if self._mEscCharSetProber:
+            self._mEscCharSetProber.reset()
+        for prober in self._mCharSetProbers:
+            prober.reset()
+
+    def feed(self, aBuf):
+        if self.done: return
+
+        aLen = len(aBuf)
+        if not aLen: return
+        
+        if not self._mGotData:
+            # If the data starts with BOM, we know it is UTF
+            if aBuf[:3] == b'\xEF\xBB\xBF':
+                # EF BB BF  UTF-8 with BOM
+                self.result = {'encoding': "UTF-8", 'confidence': 1.0}
+            elif aBuf[:4] == b'\xFF\xFE\x00\x00':
+                # FF FE 00 00  UTF-32, little-endian BOM
+                self.result = {'encoding': "UTF-32LE", 'confidence': 1.0}
+            elif aBuf[:4] == b'\x00\x00\xFE\xFF': 
+                # 00 00 FE FF  UTF-32, big-endian BOM
+                self.result = {'encoding': "UTF-32BE", 'confidence': 1.0}
+            elif aBuf[:4] == b'\xFE\xFF\x00\x00':
+                # FE FF 00 00  UCS-4, unusual octet order BOM (3412)
+                self.result = {'encoding': "X-ISO-10646-UCS-4-3412", 'confidence': 1.0}
+            elif aBuf[:4] == b'\x00\x00\xFF\xFE':
+                # 00 00 FF FE  UCS-4, unusual octet order BOM (2143)
+                self.result = {'encoding': "X-ISO-10646-UCS-4-2143", 'confidence': 1.0}
+            elif aBuf[:2] == b'\xFF\xFE':
+                # FF FE  UTF-16, little endian BOM
+                self.result = {'encoding': "UTF-16LE", 'confidence': 1.0}
+            elif aBuf[:2] == b'\xFE\xFF':
+                # FE FF  UTF-16, big endian BOM
+                self.result = {'encoding': "UTF-16BE", 'confidence': 1.0}
+
+        self._mGotData = True
+        if self.result['encoding'] and (self.result['confidence'] > 0.0):
+            self.done = True
+            return
+
+        if self._mInputState == ePureAscii:
+            if self._highBitDetector.search(aBuf):
+                self._mInputState = eHighbyte
+            elif (self._mInputState == ePureAscii) and self._escDetector.search(self._mLastChar + aBuf):
+                self._mInputState = eEscAscii
+
+        self._mLastChar = aBuf[-1:]
+
+        if self._mInputState == eEscAscii:
+            if not self._mEscCharSetProber:
+                self._mEscCharSetProber = EscCharSetProber()
+            if self._mEscCharSetProber.feed(aBuf) == constants.eFoundIt:
+                self.result = {'encoding': self._mEscCharSetProber.get_charset_name(),
+                               'confidence': self._mEscCharSetProber.get_confidence()}
+                self.done = True
+        elif self._mInputState == eHighbyte:
+            if not self._mCharSetProbers:
+                self._mCharSetProbers = [MBCSGroupProber(), SBCSGroupProber(), Latin1Prober()]
+            for prober in self._mCharSetProbers:
+                if prober.feed(aBuf) == constants.eFoundIt:
+                    self.result = {'encoding': prober.get_charset_name(),
+                                   'confidence': prober.get_confidence()}
+                    self.done = True
+                    break
+
+    def close(self):
+        if self.done: return
+        if not self._mGotData:
+            if constants._debug:
+                sys.stderr.write('no data received!\n')
+            return
+        self.done = True
+        
+        if self._mInputState == ePureAscii:
+            self.result = {'encoding': 'ascii', 'confidence': 1.0}
+            return self.result
+
+        if self._mInputState == eHighbyte:
+            proberConfidence = None
+            maxProberConfidence = 0.0
+            maxProber = None
+            for prober in self._mCharSetProbers:
+                if not prober: continue
+                proberConfidence = prober.get_confidence()
+                if proberConfidence > maxProberConfidence:
+                    maxProberConfidence = proberConfidence
+                    maxProber = prober
+            if maxProber and (maxProberConfidence > MINIMUM_THRESHOLD):
+                self.result = {'encoding': maxProber.get_charset_name(),
+                               'confidence': maxProber.get_confidence()}
+                return self.result
+
+        if constants._debug:
+            sys.stderr.write('no probers hit minimum threshhold\n')
+            for prober in self._mCharSetProbers[0].mProbers:
+                if not prober: continue
+                sys.stderr.write('%s confidence = %s\n' % \
+                                 (prober.get_charset_name(), \
+                                  prober.get_confidence()))
--- a/subsdownloader2/src/SourceCode/chardet/utf8prober.py
+++ b/subsdownloader2/src/SourceCode/chardet/utf8prober.py
@@ -1,76 +1,77 @@
-######################## BEGIN LICENSE BLOCK ########################
-# The Original Code is mozilla.org code.
-#
-# The Initial Developer of the Original Code is
-# Netscape Communications Corporation.
-# Portions created by the Initial Developer are Copyright (C) 1998
-# the Initial Developer. All Rights Reserved.
-#
-# Contributor(s):
-#   Mark Pilgrim - port to Python
-#
-# This library is free software; you can redistribute it and/or
-# modify it under the terms of the GNU Lesser General Public
-# License as published by the Free Software Foundation; either
-# version 2.1 of the License, or (at your option) any later version.
-# 
-# This library is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# Lesser General Public License for more details.
-# 
-# You should have received a copy of the GNU Lesser General Public
-# License along with this library; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
-# 02110-1301  USA
-######################### END LICENSE BLOCK #########################
-
-import constants, sys
-from constants import eStart, eError, eItsMe
-from charsetprober import CharSetProber
-from codingstatemachine import CodingStateMachine
-from mbcssm import UTF8SMModel
-
-ONE_CHAR_PROB = 0.5
-
-class UTF8Prober(CharSetProber):
-    def __init__(self):
-        CharSetProber.__init__(self)
-        self._mCodingSM = CodingStateMachine(UTF8SMModel)
-        self.reset()
-
-    def reset(self):
-        CharSetProber.reset(self)
-        self._mCodingSM.reset()
-        self._mNumOfMBChar = 0
-
-    def get_charset_name(self):
-        return "utf-8"
-
-    def feed(self, aBuf):
-        for c in aBuf:
-            codingState = self._mCodingSM.next_state(c)
-            if codingState == eError:
-                self._mState = constants.eNotMe
-                break
-            elif codingState == eItsMe:
-                self._mState = constants.eFoundIt
-                break
-            elif codingState == eStart:
-                if self._mCodingSM.get_current_charlen() >= 2:
-                    self._mNumOfMBChar += 1
-
-        if self.get_state() == constants.eDetecting:
-            if self.get_confidence() > constants.SHORTCUT_THRESHOLD:
-                self._mState = constants.eFoundIt
-
-        return self.get_state()
-
-    def get_confidence(self):
-        unlike = 0.99
-        if self._mNumOfMBChar < 6:
-            for i in range(0, self._mNumOfMBChar):
-                unlike = unlike * ONE_CHAR_PROB
-            return 1.0 - unlike
-        else:
-            return unlike
+######################## BEGIN LICENSE BLOCK ########################
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Mark Pilgrim - port to Python
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+# 
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+# 
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+# 02110-1301  USA
+######################### END LICENSE BLOCK #########################
+
+from . import constants
+import sys
+from .constants import eStart, eError, eItsMe
+from .charsetprober import CharSetProber
+from .codingstatemachine import CodingStateMachine
+from .mbcssm import UTF8SMModel
+
+ONE_CHAR_PROB = 0.5
+
+class UTF8Prober(CharSetProber):
+    def __init__(self):
+        CharSetProber.__init__(self)
+        self._mCodingSM = CodingStateMachine(UTF8SMModel)
+        self.reset()
+
+    def reset(self):
+        CharSetProber.reset(self)
+        self._mCodingSM.reset()
+        self._mNumOfMBChar = 0
+
+    def get_charset_name(self):
+        return "utf-8"
+
+    def feed(self, aBuf):
+        for c in aBuf:
+            codingState = self._mCodingSM.next_state(c)
+            if codingState == eError:
+                self._mState = constants.eNotMe
+                break
+            elif codingState == eItsMe:
+                self._mState = constants.eFoundIt
+                break
+            elif codingState == eStart:
+                if self._mCodingSM.get_current_charlen() >= 2:
+                    self._mNumOfMBChar += 1
+
+        if self.get_state() == constants.eDetecting:
+            if self.get_confidence() > constants.SHORTCUT_THRESHOLD:
+                self._mState = constants.eFoundIt
+
+        return self.get_state()
+
+    def get_confidence(self):
+        unlike = 0.99
+        if self._mNumOfMBChar < 6:
+            for i in range(0, self._mNumOfMBChar):
+                unlike = unlike * ONE_CHAR_PROB
+            return 1.0 - unlike
+        else:
+            return unlike
--- a/subsdownloader2/src/SourceCode/periscope/SubtitleDatabase.py
+++ b/subsdownloader2/src/SourceCode/periscope/SubtitleDatabase.py
@@ -16,7 +16,7 @@
 #    along with periscope; if not, write to the Free Software
 #    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
-import os, shutil, urllib2, sys, logging, traceback, zipfile
+import os, shutil, urllib.request, urllib.error, urllib.parse, sys, logging, traceback, zipfile
 import struct
 import socket # For timeout purposes
 import re
@@ -38,10 +38,10 @@
     def __init__(self, langs, revertlangs = None):
         if langs:
             self.langs = langs
-            self.revertlangs = dict(map(lambda item: (item[1],item[0]), self.langs.items()))
+            self.revertlangs = dict([(item[1],item[0]) for item in list(self.langs.items())])
         if revertlangs:
             self.revertlangs = revertlangs
-            self.langs = dict(map(lambda item: (item[1],item[0]), self.revertlangs.items()))
+            self.langs = dict([(item[1],item[0]) for item in list(self.revertlangs.items())])
         #self.tvshowRegex = re.compile('(?P<show>.*)S(?P<season>[0-9]{2})E(?P<episode>[0-9]{2}).(?P<teams>.*)', re.IGNORECASE)
         #self.tvshowRegex2 = re.compile('(?P<show>.*).(?P<season>[0-9]{1,2})x(?P<episode>[0-9]{1,2}).(?P<teams>.*)', re.IGNORECASE)
         #self.movieRegex = re.compile('(?P<movie>.*)[\.|\[|\(| ]{1}(?P<year>(?:(?:19|20)[0-9]{2}))(?P<teams>.*)', re.IGNORECASE)
@@ -53,8 +53,8 @@
         ''' search subtitles with the given filename for the given languages'''
         try:
             subs = self.process(filename, langs)
-            map(lambda item: item.setdefault("plugin", self), subs)
-            map(lambda item: item.setdefault("filename", filename), subs)
+            list(map(lambda item: item.setdefault("plugin", self), subs))
+            list(map(lambda item: item.setdefault("filename", filename), subs))
             log.info("%s writing %s items to queue" % (self.__class__.__name__, len(subs)))
         except:
             log.exception("Error occured")
@@ -67,7 +67,7 @@
         fname = self.getFileName(filepath)
         try:
             return self.query(fname, langs)
-        except Exception, e:
+        except Exception as e:
             log.exception("Error occured")
             return []
         
@@ -104,16 +104,16 @@
         ''' Downloads the given url and returns its contents.'''
         try:
             log.debug("Downloading %s" % url)
-            req = urllib2.Request(url, headers={'Referer' : url, 'User-Agent' : USER_AGENT})
+            req = urllib.request.Request(url, headers={'Referer' : url, 'User-Agent' : USER_AGENT})
             if timeout:
                 socket.setdefaulttimeout(timeout)
-            f = urllib2.urlopen(req)
+            f = urllib.request.urlopen(req)
             content = f.read()
             f.close()
             return content
-        except urllib2.HTTPError, e:
+        except urllib.error.HTTPError as e:
             log.warning("HTTP Error: %s - %s" % (e.code, url))
-        except urllib2.URLError, e:
+        except urllib.error.URLError as e:
             log.warning("URL Error: %s - %s" % (e.reason, url))
 
     def downloadFile(self, url, filename):
@@ -128,14 +128,14 @@
         ''' Returns the short (two-character) representation of the long language name'''
         try:
             return self.revertlangs[language]
-        except KeyError, e:
+        except KeyError as e:
             log.warn("Ooops, you found a missing language in the config file of %s: %s. Send a bug report to have it added." %(self.__class__.__name__, language))
         
     def getLanguage(self, lg):
         ''' Returns the long naming of the language on a two character code '''
         try:
             return self.langs[lg]
-        except KeyError, e:
+        except KeyError as e:
             log.warn("Ooops, you found a missing language in the config file of %s: %s. Send a bug report to have it added." %(self.__class__.__name__, lg))
     
     def query(self, token):
@@ -157,7 +157,7 @@
         return fname
         
     def guessFileData(self, filename):
-        filename = unicode(self.getFileName(filename).lower())
+        filename = str(self.getFileName(filename).lower())
         matches_tvshow = self.tvshowRegex.match(filename)
         if matches_tvshow: # It looks like a tv show
             (tvshow, season, episode, teams) = matches_tvshow.groups()
--- a/subsdownloader2/src/SourceCode/periscope/services/BierDopje/services.py
+++ b/subsdownloader2/src/SourceCode/periscope/services/BierDopje/services.py
@@ -16,8 +16,8 @@
 #    along with periscope; if not, write to the Free Software
 #    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
-import urllib
-import urllib2
+import urllib.request, urllib.parse, urllib.error
+import urllib.request, urllib.error, urllib.parse
 import logging
 import os
 import pickle
@@ -86,7 +86,7 @@
          
         try:
             subs = self.query(fname, langs)
-            print str(subs)
+            print(str(subs))
             
             
             if not subs and fname.rfind(".[") > 0:
@@ -96,7 +96,7 @@
                 return subs
             else:
                 return subs
-        except Exception, e:
+        except Exception as e:
             log.exception("Error raised by plugin")
             return []
             
@@ -127,14 +127,14 @@
         
         # Query the show to get the show id
         showName = guessedData['name'].lower()
-        if exceptions.has_key(showName):
+        if showName in exceptions:
             show_id = exceptions.get(showName)
-        elif self.cache['showids'].has_key(showName):
+        elif showName in self.cache['showids']:
             show_id = self.cache['showids'].get(showName)
         else :
-            getShowId_url = "%sGetShowByName/%s" %(self.api, urllib.quote(showName))
+            getShowId_url = "%sGetShowByName/%s" %(self.api, urllib.parse.quote(showName))
             log.debug("Looking for show Id @ %s" % getShowId_url)
-            page = urllib2.urlopen(getShowId_url)
+            page = urllib.request.urlopen(getShowId_url)
             dom = minidom.parse(page)
             if not dom or len(dom.getElementsByTagName('showid')) == 0 :
                 page.close()
@@ -150,7 +150,7 @@
         for lang in availableLangs :
             getAllSubs_url = "%sGetAllSubsFor/%s/%s/%s/%s" %(self.api, show_id, guessedData['season'], guessedData['episode'], lang)
             log.debug("Looking for subs @ %s" %getAllSubs_url)
-            page = urllib2.urlopen(getAllSubs_url)
+            page = urllib.request.urlopen(getAllSubs_url)
             dom = minidom.parse(page)
             page.close()
             for sub in dom.getElementsByTagName('result'):
--- a/subsdownloader2/src/SourceCode/periscope/services/OpenSubtitle/services.py
+++ b/subsdownloader2/src/SourceCode/periscope/services/OpenSubtitle/services.py
@@ -19,7 +19,7 @@
 
 import socket # For timeout purposes
 from Plugins.Extensions.SubsDownloader2.SourceCode import xmlrpclib
-import os, struct, commands, traceback, logging
+import os, struct, subprocess, traceback, logging
 from Plugins.Extensions.SubsDownloader2.SourceCode.xbmc_subtitles.utilities import toOpenSubtitles_two
 #from Screens.MessageBox import MessageBox
 #from Screens.Screen import Screen
@@ -92,7 +92,7 @@
     def __init__(self, config, cache_folder_path):
         super(OpenSubtitle, self).__init__(OS_LANGS)
         self.server_url = 'http://api.opensubtitles.org/xml-rpc'
-        self.revertlangs = dict(map(lambda item: (item[1],item[0]), self.langs.items()))
+        self.revertlangs = dict([(item[1],item[0]) for item in list(self.langs.items())])
 
     def process(self, filepath, langs):
         ''' main method to call on the plugin, pass the filename and the wished 
@@ -229,7 +229,7 @@
         try:
             if search:
                 results = self.server.SearchSubtitles(token, [search])
-        except Exception, e:
+        except Exception as e:
             logging.error("Could not query the server OpenSubtitles")
             logging.debug(e)
             return []
@@ -246,7 +246,7 @@
                 result["link"] = r['SubDownloadLink']
                 result["page"] = r['SubDownloadLink']
                 result["lang"] = self.getLG(r['SubLanguageID'])
-                if search.has_key("query") : #We are using the guessed file name, let's remove some results
+                if "query" in search : #We are using the guessed file name, let's remove some results
                     if r["MovieReleaseName"].startswith(self.filename):
                         sublinks.append(result)
                     else:
--- a/subsdownloader2/src/SourceCode/periscope/services/Subtitulos/services.py
+++ b/subsdownloader2/src/SourceCode/periscope/services/Subtitulos/services.py
@@ -16,7 +16,7 @@
 #    along with periscope; if not, write to the Free Software
 #    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
-import zipfile, os, urllib2, urllib, logging, traceback, httplib, re
+import zipfile, os, urllib.request, urllib.error, urllib.parse, urllib.request, urllib.parse, urllib.error, logging, traceback, http.client, re
 from Plugins.Extensions.SubsDownloader2.SourceCode.BeautifulSoup import BeautifulSoup
 from Plugins.Extensions.SubsDownloader2.SourceCode.periscope import SubtitleDatabase
 from Plugins.Extensions.SubsDownloader2.SourceCode.xbmc_subtitles.utilities import toOpenSubtitles_two
@@ -151,9 +151,9 @@
 
     def downloadFile(self, url, filename):
         ''' Downloads the given url to the given filename '''
-        req = urllib2.Request(url, headers={'Referer' : url, 'User-Agent' : 'Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3)'})
+        req = urllib.request.Request(url, headers={'Referer' : url, 'User-Agent' : 'Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.3)'})
         
-        f = urllib2.urlopen(req)
+        f = urllib.request.urlopen(req)
         dump = open(filename, "wb")
         dump.write(f.read())
         dump.close()
--- a/subsdownloader2/src/SourceCode/xbmc_subtitles/utilities.py
+++ b/subsdownloader2/src/SourceCode/xbmc_subtitles/utilities.py
@@ -22,7 +22,7 @@
 #---
 #-  xbmc.output("### [%s-%s] - %s" % (__scriptname__,module,msg,),level=xbmc.LOGDEBUG )
 #+++
-  print(msg, module, "D")
+  print((msg, module, "D"))
 #+++ 
 
 ###-------------------------  Hash  -----------------###############
@@ -41,7 +41,7 @@
       for x in range(65536/bytesize):
         buffer = b[x*bytesize:x*bytesize+bytesize]
         (l2, l1)= struct.unpack(longlongformat, buffer) 
-        l_value = (long(l1) << 32) | long(l2) 
+        l_value = (int(l1) << 32) | int(l2) 
         hash += l_value 
         hash = hash & 0xFFFFFFFFFFFFFFFF #to remain as 64bit number
       
@@ -50,7 +50,7 @@
       for x in range(65536/bytesize):
         buffer = b[x*bytesize:x*bytesize+bytesize]
         (l2, l1) = struct.unpack(longlongformat, buffer)
-        l_value = (long(l1) << 32) | long(l2)
+        l_value = (int(l1) << 32) | int(l2)
         hash += l_value
         hash = hash & 0xFFFFFFFFFFFFFFFF
       
@@ -83,7 +83,7 @@
     for regex in regex_expressions:
       response_file = re.findall(regex, file)                  
       if len(response_file) > 0 : 
-        print "Regex File Se: %s, Ep: %s," % (str(response_file[0][0]),str(response_file[0][1]),)
+        print("Regex File Se: %s, Ep: %s," % (str(response_file[0][0]),str(response_file[0][1]),))
         tvshow = 1
         if not compare :
             title = re.split(regex, file)[0]
--- a/subsdownloader2/src/SourceCode/xbmc_subtitles/services/Itasa/service.py
+++ b/subsdownloader2/src/SourceCode/xbmc_subtitles/services/Itasa/service.py
@@ -1,6 +1,6 @@
 # -*- coding: UTF-8 -*-
 
-import os, sys, re, string, time, urllib, urllib2, cookielib
+import os, sys, re, string, time, urllib.request, urllib.parse, urllib.error, urllib.request, urllib.error, urllib.parse, http.cookiejar
 from Screens.MessageBox import MessageBox
 from Components.config import config
 #import xbmc, xbmcgui
@@ -38,7 +38,7 @@
 def geturl(url):
     log( __name__ , " Getting url: %s" % (url))
     try:
-        response = urllib2.urlopen(url)
+        response = urllib.request.urlopen(url)
         content = response.read()
     except:
         log( __name__ , " Failed to get url:%s" % (url))
@@ -59,13 +59,13 @@
                 return_value = match.group(1)
                 unique_name = match.group(2)
                 unique_value = match.group(3)
-                login_postdata = urllib.urlencode({'username': username, 'passwd': password, 'remember': 'yes', 'Submit': 'Login', 'remember': 'yes', 'option': 'com_user', 'task': 'login', 'silent': 'true', 'return': return_value, unique_name: unique_value} )
-                cj = cookielib.CookieJar()
-                my_opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))
+                login_postdata = urllib.parse.urlencode({'username': username, 'passwd': password, 'remember': 'yes', 'Submit': 'Login', 'remember': 'yes', 'option': 'com_user', 'task': 'login', 'silent': 'true', 'return': return_value, unique_name: unique_value} )
+                cj = http.cookiejar.CookieJar()
+                my_opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj))
                 my_opener.addheaders = [('Referer', main_url)]
-                urllib2.install_opener(my_opener)
-                request = urllib2.Request(main_url + 'index.php',login_postdata)
-                response = urllib2.urlopen(request).read()
+                urllib.request.install_opener(my_opener)
+                request = urllib.request.Request(main_url + 'index.php',login_postdata)
+                response = urllib.request.urlopen(request).read()
                 match = re.search('logouticon.png', response, re.IGNORECASE | re.DOTALL)
                 if match:
                     return 1
--- a/subsdownloader2/src/SourceCode/xbmc_subtitles/services/Napisyme/service.py
+++ b/subsdownloader2/src/SourceCode/xbmc_subtitles/services/Napisyme/service.py
@@ -6,7 +6,7 @@
 # Credits to amet, Guilherme Jardim, and many more.
 # mrto
 
-import urllib2, re, string, sys, os
+import urllib.request, urllib.error, urllib.parse, re, string, sys, os
 #, xbmc
 from Plugins.Extensions.SubsDownloader2.SourceCode.xbmc_subtitles.utilities import log, twotofull
 from Plugins.Extensions.SubsDownloader2.SourceCode.archives_extractor import zip_extractor
@@ -72,15 +72,15 @@
       movie_title_plus = original_title.replace(" ","+")
       url = '%s%s' % (main_url, movie_title_plus)
     log( __name__ , "Pobieram z [ %s ]" % (url))     
-    response = urllib2.urlopen(url)
+    response = urllib.request.urlopen(url)
     content = response.read()
     getallsubs(content, title, subtitles_list, file_original_path)
     return subtitles_list, "", "" #standard output
 
 #def download_subtitles (subtitles_list, pos, zip_subs, tmp_sub_dir, sub_folder, session_id): #standard input
 def download_subtitles (subtitles_list, pos, zip_subs, tmp_sub_dir, sub_folder, session_id, screen_session):  #standard input
-    import urllib
-    f = urllib.urlopen(subtitles_list[pos][ "link" ])
+    import urllib.request, urllib.parse, urllib.error
+    f = urllib.request.urlopen(subtitles_list[pos][ "link" ])
     language = subtitles_list[pos][ "language_name" ]
    
     local_tmp_file = os.path.join(tmp_sub_dir, "zipsubs.zip")
--- a/svdrp/src/SVDRP.py
+++ b/svdrp/src/SVDRP.py
@@ -1,4 +1,4 @@
-from __future__ import print_function
+
 
 from twisted.internet.defer import Deferred
 from twisted.internet.protocol import ClientFactory, ServerFactory
--- a/svdrp/src/plugin.py
+++ b/svdrp/src/plugin.py
@@ -1,6 +1,6 @@
 from Plugins.Plugin import PluginDescriptor
 
-from SVDRP import SimpleVDRProtocolAbstraction
+from .SVDRP import SimpleVDRProtocolAbstraction
 
 connection = None
 
--- a/toolkit/src/TagStrip.py
+++ b/toolkit/src/TagStrip.py
@@ -2,12 +2,12 @@
 from re import sub, finditer
 
 try:
-	import htmlentitydefs
-	iteritems = lambda d: d.iteritems()
+	import html.entities
+	iteritems = lambda d: iter(d.items())
 except ImportError as ie:
 	from html import entities as htmlentitydefs
-	iteritems = lambda d: d.items()
-	unichr = chr
+	iteritems = lambda d: list(d.items())
+	chr = chr
 
 def strip_readable(html):
 	# Newlines are rendered as whitespace in html
@@ -43,7 +43,7 @@
 	for x in entities:
 		key = x.group(0)
 		if key not in entitydict:
-			entitydict[key] = htmlentitydefs.name2codepoint[x.group(1)]
+			entitydict[key] = html.entities.name2codepoint[x.group(1)]
 
 	entities = finditer('&#x([0-9A-Fa-f]{2,2}?);', html)
 	for x in entities:
@@ -58,7 +58,7 @@
 			entitydict[key] = x.group(1)
 
 	for key, codepoint in iteritems(entitydict):
-		html = html.replace(key, unichr(int(codepoint)))
+		html = html.replace(key, chr(int(codepoint)))
 
 	# Return result with leading/trailing whitespaces removed
 	return html.strip()
--- a/trafficinfo/src/plugin.py
+++ b/trafficinfo/src/plugin.py
@@ -140,9 +140,9 @@
                 name = i.toxml().split(">")[1].split("<")[0]
                 self.sections.append(TrafficInfoSection(name,link))
             self.onSectionsLoaded()
-        except xml.parsers.expat.ExpatError,e:
-            print e
-            print raw
+        except xml.parsers.expat.ExpatError as e:
+            print(e)
+            print(raw)
             self.setStatusLabel("loading sections failed")
 
     def onSectionsLoaded(self):
@@ -168,14 +168,14 @@
 
     ##########
     def getItemsOfSection(self,section):
-        print "loading section",section.name  ,section.link
+        print("loading section",section.name  ,section.link)
         self.setStatusLabel("loading messages "+section.name)
         self.loadinginprogress = True    
         getPage("http://wap.verkehrsinfo.de"+section.link).addCallback(self.trafficitemsLoaded).addErrback(self.trafficitemsLoadingFaild)
 
     def trafficitemsLoadingFaild(self,raw):
         self.loadinginprogress = False
-        print "loading items faild",raw
+        print("loading items faild",raw)
         self.setStatusLabel("loading messages faild"+raw)
         
     def trafficitemsLoaded(self,raw):
@@ -187,9 +187,9 @@
             for item in  xmldoc.getElementsByTagName("p"):
                 self.trafficitems.append(self.parseItem(item))
             self.onItemsLoaded()
-        except xml.parsers.expat.ExpatError,e:
-            print e
-            print raw
+        except xml.parsers.expat.ExpatError as e:
+            print(e)
+            print(raw)
             self.setStatusLabel("loading messages faild! Parsing Error")
         
     def parseItem(self,item):
--- a/tvcharts/src/plugin.py
+++ b/tvcharts/src/plugin.py
@@ -36,7 +36,7 @@
 from time import time, gmtime, strftime
 from twisted.web.client import getPage
 from xml.dom.minidom import parse, parseString
-from urllib import urlencode
+from urllib.parse import urlencode
 
 import timer
 import xml.etree.cElementTree
@@ -173,7 +173,7 @@
 			else:
 				self.session.open(MessageBox, "Sorry, no EPG Info available for this event", type=MessageBox.TYPE_ERROR, timeout=10)
 		elif self.mode == "moviecharts":
-			print "[TVCharts] ToDo: Show Movie Info here ..."
+			print("[TVCharts] ToDo: Show Movie Info here ...")
 			return
 
 	def addTimerCallback(self, answer):
@@ -188,7 +188,7 @@
 				if simulTimerList is not None:
 					self.session.openWithCallback(self.finishSanityCorrection, TimerSanityConflict, simulTimerList)
 		else:
-			print "Timeredit aborted"
+			print("Timeredit aborted")
 
 	def finishSanityCorrection(self, answer):
 		self.addTimerCallback(answer)
@@ -237,7 +237,7 @@
 					self.eventcache.append((eventinfo[0], eventinfo[7], eventinfo[8], eventinfo[4]))
 
 		except Exception:
-			print "[TVCharts Plugin] Error creating eventcache!"
+			print("[TVCharts Plugin] Error creating eventcache!")
 
 	def switchToTVCharts(self):
 		self.mode = "tvcharts"
@@ -268,7 +268,7 @@
 			self["info"].setText("Error: Plugin disabled in Settings ...")
 
 	def downloadListError(self, error=""):
-		print str(error)
+		print(str(error))
 		self.session.open(MessageBox, "Error downloading Feed:\n%s" % str(error), type=MessageBox.TYPE_ERROR)
 		self["info"].setText("Error downloading Feed!")
 
@@ -496,7 +496,7 @@
 				self.DBStatusTimer.stop()
 
 	def updateStatus(self):
-		print "[TVCharts] Status Update ..."
+		print("[TVCharts] Status Update ...")
 		self.DBStatusTimer.stop()
 
 		if not config.plugins.tvcharts.enabled.value or Screens.Standby.inStandby:
@@ -543,7 +543,7 @@
 					if timer.disabled == 0 and timer.justplay == 0:
 						self.timerlist += "%s|%s|%s|%s|%s|%s|%s\n" % (timer.eit,str(int(timer.begin)+(config.recording.margin_before.value*60)), str(int(timer.end)-(config.recording.margin_after.value*60)), str(timer.service_ref), timer.name, timer.service_ref.getServiceName().replace('\xc2\x86', '').replace('\xc2\x87', '').decode("utf-8", "ignore").encode("utf-8"), timer.repeated)
 			except Exception:
-				print "[TVCharts] Error loading timers!"
+				print("[TVCharts] Error loading timers!")
 
 		# Get Pluginlist
 		if config.plugins.tvcharts.submitplugins.value and self.pluginlist == "":
@@ -553,7 +553,7 @@
 					self.pluginlist += plugin[0:plugin.find(' - ')]+"\n"
 				os_system("rm -f /tmp/plugins.txt")
 			except Exception:
-				print "[TVCharts] Error loading plugins!"
+				print("[TVCharts] Error loading plugins!")
 		
 		# Status Update
 		getPage(url='http://www.dreambox-plugins.de/feeds/TVCharts/status.php', agent="Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US)", timeout=60, method='POST', headers={'Content-Type':'application/x-www-form-urlencoded'}, postdata=urlencode({'boxid' : self.BoxID, 'devicename' : self.DeviceName, 'imageversion' : self.ImageVersion, 'enigmaversion' : self.EnigmaVersion, 'lastchannel' : channel_name, 'lastevent' : event_name, 'eventdescr' : event_description, 'lastbegin' : event_begin, 'lastserviceref' : self.serviceref, 'timerlist' : self.timerlist, 'pluginlist' : self.pluginlist})).addErrback(self.updateError)
--- a/valixdcontrol/src/comp/vConvClockToText.py
+++ b/valixdcontrol/src/comp/vConvClockToText.py
@@ -44,7 +44,7 @@
 			self.type = self.DEFAULT
 		if config.osd.language.value == "de_DE":
 			self.Tage = ["Mo", "Di", "Mi", "Do", "Fr", "Sa", "So"]
-			self.Monate = ["Jan", "Feb", u"M\xe4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"]
+			self.Monate = ["Jan", "Feb", "M\xe4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"]
 		elif (config.osd.language.value == "it_IT") or (config.osd.language.value == "es_ES"):
 			self.Tage = ["Lu", "Ma", "Me", "Gi", "Ve", "Sa", "Do"]
 			self.Monate = ["Gen", "Feb", "Mar", "Apr", "Mag", "Giu", "Lug", "Ago", "Set", "Ott", "Nov", "Dic"]
--- a/webinterface/src/WebIfConfig.py
+++ b/webinterface/src/WebIfConfig.py
@@ -1,6 +1,6 @@
 Version = '$Header$';
 
-from __init__ import _
+from .__init__ import _
 
 from enigma import eListboxPythonMultiContent, gFont
 from Screens.Screen import Screen
@@ -90,13 +90,13 @@
 		self.setTitle(_("Webinterface: Main Setup"))
 
 	def save(self):
-		print "[Webinterface] Saving Configuration"
+		print("[Webinterface] Saving Configuration")
 		for x in self["config"].list:
 			x[1].save()
 		self.close(True, self.session)
 
 	def cancel(self):
-		print "[Webinterface] Cancel setup changes"
+		print("[Webinterface] Cancel setup changes")
 		for x in self["config"].list:
 			x[1].cancel()
 		self.close(False, self.session)
--- a/webinterface/src/WebScreens.py
+++ b/webinterface/src/WebScreens.py
@@ -1,7 +1,7 @@
 from enigma import eServiceReference
 from Screens.Screen import Screen
 from Tools.BoundFunction import boundFunction
-from WebComponents.Sources.RequestData import RequestData
+from .WebComponents.Sources.RequestData import RequestData
 
 
 class WebScreen(Screen):
@@ -26,14 +26,14 @@
 		WebScreen.__init__(self, session, request)
 		from Components.Sources.Clock import Clock
 		self["CurrentTime"] = Clock()
-		from WebComponents.Sources.Volume import Volume
+		from .WebComponents.Sources.Volume import Volume
 		self["Volume"] = Volume(session)
 
 
 class MessageWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.Message import Message
+		from .WebComponents.Sources.Message import Message
 
 		self["Message"] = Message(session, func=Message.PRINT)
 		self["GetAnswer"] = Message(session, func=Message.ANSWER)
@@ -41,14 +41,14 @@
 class ServiceListReloadWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.ServiceListReload import ServiceListReload
+		from .WebComponents.Sources.ServiceListReload import ServiceListReload
 
 		self["ServiceListReload"] = ServiceListReload(session)
 
 class AudioWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.AudioTracks import AudioTracks
+		from .WebComponents.Sources.AudioTracks import AudioTracks
 
 		self["AudioTracks"] = AudioTracks(session, func=AudioTracks.GET)
 		self["SelectAudioTrack"] = AudioTracks(session, func=AudioTracks.SET)
@@ -57,10 +57,10 @@
 class AboutWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.About import About
-		from WebComponents.Sources.Frontend import Frontend
-		from WebComponents.Sources.Hdd import Hdd
-		from WebComponents.Sources.Network import Network
+		from .WebComponents.Sources.About import About
+		from .WebComponents.Sources.Frontend import Frontend
+		from .WebComponents.Sources.Hdd import Hdd
+		from .WebComponents.Sources.Network import Network
 		from Components.config import config
 		from Components.About import about
 		from Components.Sources.StaticText import StaticText
@@ -91,27 +91,27 @@
 class VolumeWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.Volume import Volume
+		from .WebComponents.Sources.Volume import Volume
 		self["Volume"] = Volume(session)
 
 class SettingsWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.Settings import Settings
+		from .WebComponents.Sources.Settings import Settings
 
 		self["Settings"] = Settings(session)
 
 class SubServiceWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.SubServices import SubServices
+		from .WebComponents.Sources.SubServices import SubServices
 
 		self["SubServices"] = SubServices(session)
 
 class StreamSubServiceWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.SubServices import SubServices
+		from .WebComponents.Sources.SubServices import SubServices
 
 		self["StreamSubServices"] = SubServices(session, streamingScreens)
 
@@ -132,26 +132,26 @@
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
 
-		from WebComponents.Sources.ServiceListRecursive import ServiceListRecursive
+		from .WebComponents.Sources.ServiceListRecursive import ServiceListRecursive
 		self["ServiceListRecursive"] = ServiceListRecursive(session, func=ServiceListRecursive.FETCH)
 
 class SwitchServiceWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
 
-		from WebComponents.Sources.SwitchService import SwitchService
+		from .WebComponents.Sources.SwitchService import SwitchService
 		self["SwitchService"] = SwitchService(session)
 
 class ReadPluginListWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.ReadPluginList import ReadPluginList
+		from .WebComponents.Sources.ReadPluginList import ReadPluginList
 		self["ReadPluginList"] = ReadPluginList(session)
 
 class LocationsAndTagsWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.LocationsAndTags import LocationsAndTags
+		from .WebComponents.Sources.LocationsAndTags import LocationsAndTags
 
 		self["CurrentLocation"] = LocationsAndTags(session, LocationsAndTags.CURRLOCATION)
 		self["Locations"] = LocationsAndTags(session, LocationsAndTags.LOCATIONS)
@@ -162,7 +162,7 @@
 class EpgWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.EPG import EPG
+		from .WebComponents.Sources.EPG import EPG
 
 		self["EpgSearch"] = EPG(session, func=EPG.SEARCH)
 		self["EpgSearchSimilar"] = EPG(session, func=EPG.SEARCHSIMILAR)
@@ -185,7 +185,7 @@
 		WebScreen.__init__(self, session, request)
 		from Components.MovieList import MovieList
 		from Tools.Directories import resolveFilename, SCOPE_HDD
-		from WebComponents.Sources.Movie import Movie
+		from .WebComponents.Sources.Movie import Movie
 
 		movielist = MovieList(None)
 		self["MovieList"] = Movie(session, movielist, func=Movie.LIST)
@@ -195,7 +195,7 @@
 class MediaPlayerWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.MP import MP
+		from .WebComponents.Sources.MP import MP
 
 		self["FileList"] = MP(session, func=MP.LIST)
 		self["PlayFile"] = MP(session, func=MP.PLAY)
@@ -209,7 +209,7 @@
 class AutoTimerWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.AT import AT
+		from .WebComponents.Sources.AT import AT
 
 		self["AutoTimerList"] = AT(session, func=AT.LIST)
 		self["AutoTimerWrite"] = AT(session, func=AT.WRITE)
@@ -217,7 +217,7 @@
 class TimerWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.Timer import Timer
+		from .WebComponents.Sources.Timer import Timer
 
 		self["TimerList"] = Timer(session, func=Timer.LIST)
 		self["TimerAddEventID"] = Timer(session, func=Timer.ADDBYID)
@@ -249,28 +249,28 @@
 class RemoteWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.RemoteControl import RemoteControl
+		from .WebComponents.Sources.RemoteControl import RemoteControl
 
 		self["RemoteControl"] = RemoteControl(session)
 
 class PowerWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.PowerState import PowerState
+		from .WebComponents.Sources.PowerState import PowerState
 
 		self["PowerState"] = PowerState(session)
 
 class ParentControlWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
-		from WebComponents.Sources.ParentControl import ParentControl
+		from .WebComponents.Sources.ParentControl import ParentControl
 
 		self["ParentControlList"] = ParentControl(session)
 
 class WapWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.WAPfunctions import WAPfunctions
+		from .WebComponents.Sources.WAPfunctions import WAPfunctions
 
 		self["WAPFillOptionListYear"] = WAPfunctions(session, func=WAPfunctions.LISTTIME)
 		self["WAPFillOptionListDay"] = WAPfunctions(session, func=WAPfunctions.LISTTIME)
@@ -315,12 +315,12 @@
 			f(event, self)
 
 	def getRecordService(self):
-		if self.has_key("StreamService"):
+		if "StreamService" in self:
 			return self["StreamService"].getService()
 		return None
 
 	def getRecordServiceRef(self):
-		if self.has_key("StreamService"):
+		if "StreamService" in self:
 			return self["StreamService"].ref
 		return None
 
@@ -335,7 +335,7 @@
 class M3uStreamingCurrentServiceWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.CurrentService import CurrentService
+		from .WebComponents.Sources.CurrentService import CurrentService
 		self["CurrentService"] = CurrentService(session)
 
 class TsM3uWebScreen(WebScreen):
@@ -349,7 +349,7 @@
 class RestartWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		import plugin
+		from . import plugin
 		plugin.restartWebserver(session)
 
 class GetPidWebScreen(WebScreen):
@@ -370,9 +370,9 @@
 class DeviceInfoWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.Network import Network
-		from WebComponents.Sources.Hdd import Hdd
-		from WebComponents.Sources.Frontend import Frontend
+		from .WebComponents.Sources.Network import Network
+		from .WebComponents.Sources.Hdd import Hdd
+		from .WebComponents.Sources.Frontend import Frontend
 		from Components.config import config
 		from Components.About import about
 		from Components.Sources.StaticText import StaticText
@@ -396,14 +396,14 @@
 class ServicePlayableWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.ServicePlayable import ServicePlayable
+		from .WebComponents.Sources.ServicePlayable import ServicePlayable
 
 		self["ServicePlayable"] = ServicePlayable(session, type=ServicePlayable.SINGLE)
 
 class ServiceListPlayableWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
-		from WebComponents.Sources.ServicePlayable import ServicePlayable
+		from .WebComponents.Sources.ServicePlayable import ServicePlayable
 
 		self["ServiceListPlayable"] = ServicePlayable(session, type=ServicePlayable.BOUQUET)
 
@@ -411,41 +411,41 @@
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
 
-		from WebComponents.Sources.SleepTimer import SleepTimer
+		from .WebComponents.Sources.SleepTimer import SleepTimer
 		self["SleepTimer"] = SleepTimer(session)
 
 class TPMWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
 
-		from WebComponents.Sources.TPMChallenge import TPMChallenge
+		from .WebComponents.Sources.TPMChallenge import TPMChallenge
 		self["TPM"] = TPMChallenge()
 
 class ExternalWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
 
-		from WebComponents.Sources.External import External
+		from .WebComponents.Sources.External import External
 		self["External"] = External()
 
 class StringsWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
 
-		from WebComponents.Sources.Strings import Strings
+		from .WebComponents.Sources.Strings import Strings
 		self["Strings"] = Strings()
 
 class SessionWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request)
 
-		from WebComponents.Sources.WebSession import WebSession
+		from .WebComponents.Sources.WebSession import WebSession
 		self["Session"] = WebSession(request)
 
 class BackupWebScreen(WebScreen):
 	def __init__(self, session, request):
 		WebScreen.__init__(self, session, request, allow_GET = False)
 
-		from WebComponents.Sources.Backup import Backup
+		from .WebComponents.Sources.Backup import Backup
 		self["Backup"] = Backup(Backup.BACKUP)
 		self["Restore"] = Backup(Backup.RESTORE)
--- a/webinterface/src/__init__.py
+++ b/webinterface/src/__init__.py
@@ -3,6 +3,7 @@
 from Components.Language import language
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS, SCOPE_LANGUAGE
 import os, gettext
+from functools import reduce
 
 __version__ = "1.7.5"
 
@@ -15,12 +16,12 @@
 def _(txt):
 	t = gettext.dgettext(PluginLanguageDomain, txt)
 	if t == txt:
-		print "[" + PluginLanguageDomain + "] fallback to default translation for " + txt
+		print("[" + PluginLanguageDomain + "] fallback to default translation for " + txt)
 		t = gettext.gettext(txt)
 	return t
 
 def bin2long(s):
-	return reduce( lambda x,y:(x<<8L)+y, map(ord, s))
+	return reduce( lambda x,y:(x<<8)+y, list(map(ord, s)))
 
 def long2bin(l):
 	res = ""
--- a/webinterface/src/plugin.py
+++ b/webinterface/src/plugin.py
@@ -6,8 +6,8 @@
 from Components.config import config, ConfigBoolean, ConfigSubsection, ConfigInteger, ConfigYesNo, ConfigText, ConfigEnableDisable
 from Components.Network import iNetwork
 from Screens.MessageBox import MessageBox
-from WebIfConfig import WebIfConfigScreen
-from WebChilds.Toplevel import getToplevel
+from .WebIfConfig import WebIfConfigScreen
+from .WebChilds.Toplevel import getToplevel
 from Tools.HardwareInfo import HardwareInfo
 
 from Tools.Directories import copyfile, resolveFilename, SCOPE_PLUGINS, SCOPE_CONFIG
@@ -22,8 +22,8 @@
 from time import gmtime
 from os.path import isfile as os_isfile, exists as os_exists
 
-from __init__ import _, __version__, decrypt_block
-from webif import get_random, validate_certificate
+from .__init__ import _, __version__, decrypt_block
+from .webif import get_random, validate_certificate
 
 import random, uuid, time, hashlib
 
@@ -82,7 +82,7 @@
 	def stop(self):
 		global running_defered
 		for d in running_defered:
-			print "[Webinterface] stopping interface on ", d.interface, " with port", d.port
+			print("[Webinterface] stopping interface on ", d.interface, " with port", d.port)
 			x = d.stopListening()
 
 			try:
@@ -107,7 +107,7 @@
 def installCertificates(session):
 	if not os_exists(CERT_FILE) \
 			or not os_exists(KEY_FILE):
-		print "[Webinterface].installCertificates :: Generating SSL key pair and CACert"
+		print("[Webinterface].installCertificates :: Generating SSL key pair and CACert")
 		# create a key pair
 		k = crypto.PKey()
 		k.generate_key(crypto.TYPE_RSA, 1024)
@@ -125,16 +125,16 @@
 		cert.set_notAfter("20301231235900Z")
 		cert.set_issuer(cert.get_subject())
 		cert.set_pubkey(k)
-		print "[Webinterface].installCertificates :: Signing SSL key pair with new CACert"
+		print("[Webinterface].installCertificates :: Signing SSL key pair with new CACert")
 		cert.sign(k, 'sha1')
 
 		try:
-			print "[Webinterface].installCertificates ::  Installing newly generated certificate and key pair"
+			print("[Webinterface].installCertificates ::  Installing newly generated certificate and key pair")
 			open(CERT_FILE, "wt").write(
 				crypto.dump_certificate(crypto.FILETYPE_PEM, cert))
 			open(KEY_FILE, "wt").write(
 				crypto.dump_privatekey(crypto.FILETYPE_PEM, k))
-		except IOError, e:
+		except IOError as e:
 			#Disable https
 			config.plugins.Webinterface.https.enabled.value = False
 			config.plugins.Webinterface.https.enabled.save()
@@ -175,7 +175,7 @@
 	errors = ""
 
 	if config.plugins.Webinterface.enabled.value is not True:
-		print "[Webinterface] is disabled!"
+		print("[Webinterface] is disabled!")
 
 	else:
 		# IF SSL is enabled we need to check for the certs first
@@ -247,17 +247,17 @@
 		try:
 			d = reactor.listenSSL(port, site, ctx, interface=ipaddress)
 		except CannotListenError:
-			print "[Webinterface] FAILED to listen on %s:%i auth=%s ssl=%s" % (ipaddress, port, useauth, usessl)
+			print("[Webinterface] FAILED to listen on %s:%i auth=%s ssl=%s" % (ipaddress, port, useauth, usessl))
 			return False
 	else:
 		try:
 			d = reactor.listenTCP(port, site, interface=ipaddress)
 		except CannotListenError:
-			print "[Webinterface] FAILED to listen on %s:%i auth=%s ssl=%s" % (ipaddress, port, useauth, usessl)
+			print("[Webinterface] FAILED to listen on %s:%i auth=%s ssl=%s" % (ipaddress, port, useauth, usessl))
 			return False
 
 	running_defered.append(d)
-	print "[Webinterface] started on %s:%i auth=%s ssl=%s" % (ipaddress, port, useauth, usessl)
+	print("[Webinterface] started on %s:%i auth=%s ssl=%s" % (ipaddress, port, useauth, usessl))
 	return True
 
 	#except Exception, e:
@@ -313,7 +313,7 @@
 		'/web/stream.m3u', '/web/stream', '/web/streamcurrent.m3u', '/web/strings.js', '/web/ts.m3u']
 
 	def __init__(self, res):
-		print "[HTTPRootResource}.__init__"
+		print("[HTTPRootResource}.__init__")
 		resource.Resource.__init__(self)
 		self.resource = res
 		self.sessionInvalidResource = resource.ErrorPage(http.PRECONDITION_FAILED, "Precondition failed!", "sessionid is missing, invalid or expired!")
@@ -329,7 +329,7 @@
 		if session is None or session.expired():
 			session = SimpleSession()
 			key = self.getClientToken(request)
-			print "[HTTPRootResource].isSessionValid :: created session with id '%s' for client with token '%s'" %(session.id, key)
+			print("[HTTPRootResource].isSessionValid :: created session with id '%s' for client with token '%s'" %(session.id, key))
 			self._sessions[ key ] = session
 
 		request.enigma2_session = session
@@ -366,7 +366,7 @@
 		if self.isSessionValid(request):
 			return self.resource.getChildWithDefault(path, request)
 		else:
-			print "[Webinterface.HTTPRootResource.render] !!! session invalid !!!"
+			print("[Webinterface.HTTPRootResource.render] !!! session invalid !!!")
 			return self.sessionInvalidResource
 
 #===============================================================================
@@ -390,14 +390,14 @@
 		#If streamauth is disabled allow all acces from localhost
 		if not config.plugins.Webinterface.streamauth.value:
 			if( host == "127.0.0.1" or host == "localhost" ):
-				print "[WebInterface.plugin.isAuthenticated] Streaming auth is disabled bypassing authcheck because host is '%s'" %host
+				print("[WebInterface.plugin.isAuthenticated] Streaming auth is disabled bypassing authcheck because host is '%s'" %host)
 				return True
 
 		# get the Session from the Request
 		http_session = request.getSession().sessionNamespaces
 
 		# if the auth-information has not yet been stored to the http_session
-		if not http_session.has_key('authenticated'):
+		if 'authenticated' not in http_session:
 			if request.getUser() != '':
 				http_session['authenticated'] = check_passwd(request.getUser(), request.getPassword())
 			else:
@@ -418,7 +418,7 @@
 		if self.isAuthenticated(request) is True:
 			return HTTPRootResource.render(self, request)
 		else:
-			print "[Webinterface.HTTPAuthResource.render] !!! unauthorized !!!"
+			print("[Webinterface.HTTPAuthResource.render] !!! unauthorized !!!")
 			return self.unauthorized(request).render(request)
 
 #===============================================================================
@@ -428,7 +428,7 @@
 		if self.isAuthenticated(request) is True:
 			return HTTPRootResource.getChildWithDefault(self, path, request)
 		else:
-			print "[Webinterface.HTTPAuthResource.getChildWithDefault] !!! unauthorized !!!"
+			print("[Webinterface.HTTPAuthResource.getChildWithDefault] !!! unauthorized !!!")
 			return self.unauthorized(request)
 
 # Password verfication stuff
@@ -474,11 +474,11 @@
 
 		service = bonjour.buildService(protocol, port)
 		bonjour.registerService(service, True)
-		print "[WebInterface.registerBonjourService] Service for protocol '%s' with port '%i' registered!" %(protocol, port)
+		print("[WebInterface.registerBonjourService] Service for protocol '%s' with port '%i' registered!" %(protocol, port))
 		return True
 
-	except ImportError, e:
-		print "[WebInterface.registerBonjourService] %s" %e
+	except ImportError as e:
+		print("[WebInterface.registerBonjourService] %s" %e)
 		return False
 
 def unregisterBonjourService(protocol):
@@ -486,11 +486,11 @@
 		from Plugins.Extensions.Bonjour.Bonjour import bonjour
 
 		bonjour.unregisterService(protocol)
-		print "[WebInterface.unregisterBonjourService] Service for protocol '%s' unregistered!" %(protocol)
+		print("[WebInterface.unregisterBonjourService] Service for protocol '%s' unregistered!" %(protocol))
 		return True
 
-	except ImportError, e:
-		print "[WebInterface.unregisterBonjourService] %s" %e
+	except ImportError as e:
+		print("[WebInterface.unregisterBonjourService] %s" %e)
 		return False
 
 def checkBonjour():
@@ -520,11 +520,11 @@
 def configCB(result, session):
 	l2k = None
 	if result:
-		print "[WebIf] config changed"
+		print("[WebIf] config changed")
 		restartWebserver(session, l2k)
 		checkBonjour()
 	else:
-		print "[WebIf] config not changed"
+		print("[WebIf] config not changed")
 
 def Plugins(**kwargs):
 	p = PluginDescriptor(where=[PluginDescriptor.WHERE_SESSIONSTART], fnc=sessionstart)
--- a/webinterface/src/webif.py
+++ b/webinterface/src/webif.py
@@ -17,15 +17,15 @@
 from xml.sax.saxutils import escape as escape_xml
 from twisted.python import util
 from twisted.web import http, resource
-from urllib2 import quote
+from urllib.parse import quote
 from time import time
 
 #DO NOT REMOVE THIS IMPORT
 #It IS used (dynamically)
-from WebScreens import *
+from .WebScreens import *
 #DO NOT REMOVE THIS IMPORT
 
-from __init__ import decrypt_block
+from .__init__ import decrypt_block
 from os import urandom
 
 # The classes and Function in File handle all ScreenPage-based requests
@@ -200,7 +200,7 @@
 		list = [ ]
 		append = list.append
 		for element in conv_args:
-			if isinstance(element, basestring):
+			if isinstance(element, str):
 				append((element, None))
 			elif isinstance(element, ListItem):
 				append((element, element.filternum))
@@ -243,7 +243,7 @@
 		lutlist = [ ]
 		append = lutlist.append
 		for element in conv_args:
-			if isinstance(element, basestring):
+			if isinstance(element, str):
 				append((element, None))
 			elif isinstance(element, ListItem):
 				append((lut[element.name], element.filternum))
@@ -342,18 +342,18 @@
 		while len(path) > 1:
 			scr = self.screen.getRelatedScreen(path[0])
 			if scr is None:
-				print "[webif.py] Parent Screen not found!"
-				print wsource
+				print("[webif.py] Parent Screen not found!")
+				print(wsource)
 			path = path[1:]
 
 		source = scr.get(path[0])
 
 		if isinstance(source, ObsoleteSource):
 			# however, if we found an "obsolete source", issue warning, and resolve the real source.
-			print "WARNING: WEBIF '%s' USES OBSOLETE SOURCE '%s', USE '%s' INSTEAD!" % (name, wsource, source.new_source)
-			print "OBSOLETE SOURCE WILL BE REMOVED %s, PLEASE UPDATE!" % (source.removal_date)
+			print("WARNING: WEBIF '%s' USES OBSOLETE SOURCE '%s', USE '%s' INSTEAD!" % (name, wsource, source.new_source))
+			print("OBSOLETE SOURCE WILL BE REMOVED %s, PLEASE UPDATE!" % (source.removal_date))
 			if source.description:
-				print source.description
+				print(source.description)
 
 			wsource = source.new_source
 		else:
@@ -414,7 +414,7 @@
 	def startElement(self, name, attrs):
 		if name == "e2:screen":
 			if "external_module" in attrs:
-				exec "from " + attrs["external_module"] + " import *"
+				exec("from " + attrs["external_module"] + " import *")
 			self.screen = eval(attrs["name"])(self.session, self.request) # fixme
 			self.screens.append(self.screen)
 			return
@@ -423,7 +423,7 @@
 		if n3 == "e2:":
 			self.mode += 1
 
-		tag = '<' + name + ''.join([' %s="%s"' % x for x in attrs.items()]) + '>'
+		tag = '<' + name + ''.join([' %s="%s"' % x for x in list(attrs.items())]) + '>'
 		#tag = tag.encode('utf-8')
 
 		if self.mode == 0:
@@ -479,7 +479,7 @@
 			screen.execBegin()
 
 	def cleanup(self):
-		print "screen cleanup!"
+		print("screen cleanup!")
 		for screen in self.screens:
 			screen.execEnd()
 			screen.doClose()
@@ -515,7 +515,7 @@
 				if not request._disconnected:
 					request.finish()
 				else:
-					print "[renderPage] request already finished!"
+					print("[renderPage] request already finished!")
 				return
 
 	# first, apply "commands" (aka. URL argument)
@@ -573,7 +573,7 @@
 			if not request._disconnected:
 				request.finish()
 			else:
-				print "[requestFinish] request already finished!"
+				print("[requestFinish] request already finished!")
 		except:
 			pass
 
--- a/webinterface/src/WebChilds/FileStreamer.py
+++ b/webinterface/src/WebChilds/FileStreamer.py
@@ -1,5 +1,5 @@
 from twisted.web import resource, http, server, static
-from urllib import unquote
+from urllib.parse import unquote
 from os import path as os_path
 from Tools.Directories import resolveFilename, SCOPE_HDD
 
@@ -22,7 +22,7 @@
 			if not os_path.exists(path):
 				path = resolveFilename(SCOPE_HDD, filename)
 
-			print "[WebChilds.FileStreamer] path is %s" %path
+			print("[WebChilds.FileStreamer] path is %s" %path)
 
 			if os_path.exists(path):
 				basename = filename.decode('utf-8', 'ignore').encode('ascii', 'ignore')
--- a/webinterface/src/WebChilds/IPKG.py
+++ b/webinterface/src/WebChilds/IPKG.py
@@ -32,7 +32,7 @@
 
 	def buildCmd(self, parms=[]):
 		cmd = [IPKGResource.IPKG_PATH, "ipkg", self.command] + parms
-		print "[IPKG.py] cmd: %s" % cmd
+		print("[IPKG.py] cmd: %s" % cmd)
 		return cmd
 
 	def execCmd(self, request, parms=[]):
@@ -115,7 +115,7 @@
 			self.request.finish()
 
 	def dataAvail(self, data):
-		print"[IPKGConsoleStream].dataAvail: '%s'" %data
+		print("[IPKGConsoleStream].dataAvail: '%s'" %data)
 		#FIXME - filter strange reapeated outputs since we switched to opkg
 		if data != self.lastdata or self.lastdata is None and self.stillAlive:
 			self.lastdata = data
--- a/webinterface/src/WebChilds/PlayService.py
+++ b/webinterface/src/WebChilds/PlayService.py
@@ -22,7 +22,7 @@
 		return output[1]
 
 	def playFile(self, path):
-		print "[ServiceplayerResource] playing file", path
+		print("[ServiceplayerResource] playing file", path)
 		if os_path.exists(path) is not True:
 			return False, "given path is not existing, %s" % path
 		else:
@@ -38,7 +38,7 @@
 		return False, "Not implemented"
 
 	def startServicePlay(self, esref):
-		print "[ServiceplayerResource] playing sref", esref.toString()
+		print("[ServiceplayerResource] playing sref", esref.toString())
 		csref = self.session.nav.getCurrentlyPlayingServiceReference()
 		if csref is not None:
 			if csref.toString().startswith("4097") is not True:
@@ -48,7 +48,7 @@
 		self.session.nav.playService(esref)
 
 	def stopServicePlay(self):
-		print "[ServiceplayerResource] stopping service", self.oldservice
+		print("[ServiceplayerResource] stopping service", self.oldservice)
 		self.session.nav.stopService()
 		if self.oldservice is not None:
 			self.session.nav.playService(self.oldservice[1])
--- a/webinterface/src/WebChilds/Screengrab.py
+++ b/webinterface/src/WebChilds/Screengrab.py
@@ -23,7 +23,7 @@
 		videoOnly = False
 		save = False
 
-		for key, value in request.args.items():
+		for key, value in list(request.args.items()):
 			if key in GrabResource.SPECIAL_ARGS:
 				if key == 'format':
 					format = value[0]
@@ -99,14 +99,14 @@
 		if hasattr(self.request, 'notifyFinish'):
 			self.request.notifyFinish().addErrback(self.connectionLost)
 
-		print '[Screengrab.py] starting AiO grab with cmdline:', cmd
+		print('[Screengrab.py] starting AiO grab with cmdline:', cmd)
 		self.container.execute(*cmd)
 
 	def connectionLost(self, err):
 		self.stillAlive = False
 
 	def cmdFinished(self, data):
-		print '[Screengrab.py] cmdFinished'
+		print('[Screengrab.py] cmdFinished')
 		if self.stillAlive:
 			self.request.setResponseCode(http.OK)
 			if int(data) is 0 and self.target is not None:
@@ -116,8 +116,8 @@
 						self.request.write(fp.read())
 					if self.save is False:
 						os_remove(self.target)
-						print '[Screengrab.py] %s removed' %self.target
-				except Exception,e:
+						print('[Screengrab.py] %s removed' %self.target)
+				except Exception as e:
 					self.request.write('Internal error while reading target file')
 					self.request.setResponseCode(http.INTERNAL_SERVER_ERROR)
 
@@ -130,7 +130,7 @@
 
 			self.request.finish()
 		else:
-			print '[Screengrab.py] already disconnected!'
+			print('[Screengrab.py] already disconnected!')
 
 	def requestFinished(self, val):
 		pass
--- a/webinterface/src/WebChilds/ServiceListSave.py
+++ b/webinterface/src/WebChilds/ServiceListSave.py
@@ -3,7 +3,7 @@
 from Tools.Directories import resolveFilename, SCOPE_CONFIG
 import os
 from xml.dom.minidom import parseString as xml_dom_minidom_parseString
-from urllib import unquote as urllib_unquote
+from urllib.parse import unquote as urllib_unquote
 ##########################
 class ServiceList(resource.Resource):
 	def __init__(self, session):
@@ -31,7 +31,7 @@
 							<e2statetext>Servicelist reloaded</e2statetext>
 						</e2simplexmlresult>"""
 
-		except Exception, e:
+		except Exception as e:
 			request.setResponseCode(http.OK)
 
 			return """<?xml version="1.0" encoding="UTF-8"?>
@@ -132,7 +132,7 @@
 			# reloading *.tv and *.radio
 			db = eDVBDB.getInstance()
 			db.reloadBouquets()
-			print "servicelists reloaded"
+			print("servicelists reloaded")
 			result = """<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n
 						<e2simplexmlresult>\n
 							<e2state>True</e2state>
@@ -143,8 +143,8 @@
 			request.setResponseCode(http.OK)
 			request.write(result)
 
-		except Exception, e:
-			print e
+		except Exception as e:
+			print(e)
 			result = """<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n
 						<e2simplexmlresult>\n
 							<e2state>False</e2state>
@@ -159,11 +159,11 @@
 		return server.NOT_DONE_YET
 
 	def parseXML(self, xmldata):
-		print "parsing xmldata with length", len(xmldata)
+		print("parsing xmldata with length", len(xmldata))
 		xmldoc = xml_dom_minidom_parseString(xmldata);
 		blist = xmldoc.getElementsByTagName("e2bouquetlist")[0]
-		print "Num TV Bouquets", len(blist.getElementsByTagName('e2tvbouquetlist')[0].getElementsByTagName('e2bouquet'))
-		print "Num RADIO Bouquets", len(blist.getElementsByTagName('e2radiobouquetlist')[0].getElementsByTagName('e2bouquet'))
+		print("Num TV Bouquets", len(blist.getElementsByTagName('e2tvbouquetlist')[0].getElementsByTagName('e2bouquet')))
+		print("Num RADIO Bouquets", len(blist.getElementsByTagName('e2radiobouquetlist')[0].getElementsByTagName('e2bouquet')))
 
 		bouquets_tv = self.parseBouquets(blist.getElementsByTagName('e2tvbouquetlist')[0])
 		bouquets_radio = self.parseBouquets(blist.getElementsByTagName('e2radiobouquetlist')[0])
@@ -191,7 +191,7 @@
 		return list
 
 	def createBouquetFile(self, type, bname, list_services, counter):
-		print "creating file for bouquet", bname, "with", len(list_services), "services for type", type
+		print("creating file for bouquet", bname, "with", len(list_services), "services for type", type)
 		filename = self.getFilenameForBouquet(type, bname, counter)
 		fcontent = "#NAME %s\n" % bname
 		for service in list_services:
@@ -203,7 +203,7 @@
 		fp.close()
 
 	def createIndexFile(self, type, bouquets):
-		print "creating Indexfile with", len(bouquets), "num bouquets for type", type
+		print("creating Indexfile with", len(bouquets), "num bouquets for type", type)
 		filename = self.getFilenameForIndex(type)
 		if(type == self.TYPE_TV):
 			fcontent = "#NAME User - bouquets (TV)\n"
--- a/webinterface/src/WebChilds/Toplevel.py
+++ b/webinterface/src/WebChilds/Toplevel.py
@@ -4,17 +4,17 @@
 from Components.config import config
 
 from Plugins.Extensions.WebInterface import __file__
-from Screenpage import ScreenPage
-from FileStreamer import FileStreamer
-from Screengrab import GrabResource
-from IPKG import IPKGResource
-from PlayService import ServiceplayerResource
-from Uploader import UploadResource
-from ServiceListSave import ServiceList
-from RedirecToCurrentStream import RedirecToCurrentStreamResource
+from .Screenpage import ScreenPage
+from .FileStreamer import FileStreamer
+from .Screengrab import GrabResource
+from .IPKG import IPKGResource
+from .PlayService import ServiceplayerResource
+from .Uploader import UploadResource
+from .ServiceListSave import ServiceList
+from .RedirecToCurrentStream import RedirecToCurrentStreamResource
 from Tools.Directories import resolveFilename, SCOPE_MEDIA
 
-from External.__init__ import importExternalModules
+from .External.__init__ import importExternalModules
 externalChildren = []
 
 """
--- a/webinterface/src/WebChilds/Uploader.py
+++ b/webinterface/src/WebChilds/Uploader.py
@@ -47,7 +47,7 @@
 		try:
 			matches = search('.*?filename="(.*?)"\r\n.*?', req.content.getvalue())
 			fn = os_path.join(uploaddir, matches.group(1))
-		except Exception, e:
+		except Exception as e:
 			fn = None
 
 		# NOTE: we only accept the given filename if no such file exists yet or the user requested it AND we think its safe
@@ -57,12 +57,12 @@
 			fd, fn = mkstemp(dir = uploaddir)
 		cnt = os_write(fd, data)
 		os_close(fd)
-		os_chmod(fn, 0755)
+		os_chmod(fn, 0o755)
 		
 		if cnt <= 0: # well, actually we should check against len(data) but lets assume we fail big time or not at all
 			try:
 				os_unlink(fn)
-			except OSError, oe:
+			except OSError as oe:
 				pass
 			return self.out_POST(req, False, "error writing to disk, not uploaded", isXml)
 		else:
--- a/webinterface/src/WebChilds/External/__init__.py
+++ b/webinterface/src/WebChilds/External/__init__.py
@@ -8,9 +8,9 @@
 
 		if ext == '.py' and module_name != "__init__":				
 			try:
-				exec "import " + module_name
-				print '[Toplevel.importExternalModules] Imported external module: %s' % (module_name)
+				exec("import " + module_name)
+				print('[Toplevel.importExternalModules] Imported external module: %s' % (module_name))
 		
-			except ImportError, e:				
-				print '[Toplevel.importExternalModules] Could NOT import external module: %s' % (module_name)
-				print '[Toplevel.importExternalModules] Exception Caught\n%s' %e
\
+			except ImportError as e:				
+				print('[Toplevel.importExternalModules] Could NOT import external module: %s' % (module_name))
+				print('[Toplevel.importExternalModules] Exception Caught\n%s' %e)
\
--- a/webinterface/src/WebComponents/Sources/AT.py
+++ b/webinterface/src/WebComponents/Sources/AT.py
@@ -7,14 +7,14 @@
 	WRITE = 1
 
 	def __init__(self, session, func=LIST):
-		print "AutoTimer: init: ", func
+		print("AutoTimer: init: ", func)
 		Source.__init__(self)
 		self.func = func
 		self.session = session
 		self.result = []
 
 	def handleCommand(self, cmd):
-		print "AutoTimer: handleCommand: ", cmd
+		print("AutoTimer: handleCommand: ", cmd)
 		if cmd is not None:
 			self.cmd = cmd
 			if self.func is self.LIST:
@@ -23,7 +23,7 @@
 				self.result = self.writeTimer(cmd)
 
 	def timerList(self):
-		print "timerList"
+		print("timerList")
 
 		try:
 			from Plugins.Extensions.AutoTimer.plugin import autotimer
@@ -37,7 +37,7 @@
 		returnList = []
 
 		for timer in autotimer.getTimerList():
-			print "TIMER: ", timer
+			print("TIMER: ", timer)
 			innerList = [
 				timer.getName(),
 				timer.getMatch()
@@ -114,7 +114,7 @@
 			else:
 				innerList.append("") # 24
 
-			print "Enabled", timer.getEnabled()
+			print("Enabled", timer.getEnabled())
 			innerList.append(timer.getEnabled()) # 25
 			innerList.append("off") # 26
 
@@ -123,12 +123,12 @@
 		return returnList
 
 	def writeTimer(self, param):
-		print "writeTimer: ", param
+		print("writeTimer: ", param)
 		# TODO: fix error handling
 		return
 
 	def command(self, param):
-		print "command: ", param
+		print("command: ", param)
 		return
 
 		param = int(param)
--- a/webinterface/src/WebComponents/Sources/About.py
+++ b/webinterface/src/WebComponents/Sources/About.py
@@ -15,7 +15,7 @@
 
 		if iNetwork.getNumberOfAdapters > 0:
 			iface = iNetwork.getAdapterList()[0]
-			print "[WebComponents.About] iface: %s" % iface
+			print("[WebComponents.About] iface: %s" % iface)
 			l = (
 				iNetwork.getAdapterAttribute(iface, "mac"),
 				iNetwork.getAdapterAttribute(iface, "dhcp"),
@@ -24,7 +24,7 @@
 				ConvertIP(iNetwork.getAdapterAttribute(iface, "gateway")),
 			)
 		else:
-			print "[WebComponents.About] no network iface configured!"
+			print("[WebComponents.About] no network iface configured!")
 			l = (
 				"N/A",
 				"N/A",
--- a/webinterface/src/WebComponents/Sources/AudioTracks.py
+++ b/webinterface/src/WebComponents/Sources/AudioTracks.py
@@ -31,7 +31,7 @@
 			except ValueError:
 				cmd = -1
 
-			print "COMMAND is %s" % self.cmd
+			print("COMMAND is %s" % self.cmd)
 			if self.session.nav.getCurrentService().audioTracks().getNumberOfTracks() > cmd and cmd >= 0:
 				audio.selectTrack(cmd)
 				return _("Success")
@@ -64,7 +64,7 @@
 			currentTrack = audio.getCurrentTrack()
 
 			if n > 0:
-				print "[AudioTracks.py] got %s Audiotracks!" % (n)
+				print("[AudioTracks.py] got %s Audiotracks!" % (n))
 
 				x = 0
 				while x < n:
@@ -79,7 +79,7 @@
 					for lang in languages:
 						if cnt:
 							language += ' / '
-						if LanguageCodes.has_key(lang):
+						if lang in LanguageCodes:
 							language += LanguageCodes[lang][0]
 						else:
 							language += lang
--- a/webinterface/src/WebComponents/Sources/EPG.py
+++ b/webinterface/src/WebComponents/Sources/EPG.py
@@ -24,7 +24,7 @@
 		self.search = False
 
 	def handleCommand(self, cmd):
-		print "[WebComponents.EPG] setting command to '%s' " %cmd
+		print("[WebComponents.EPG] setting command to '%s' " %cmd)
 		self.command = cmd
 
 	def do_func(self):
@@ -72,7 +72,7 @@
 		return self.getEPGofBouquet(ref,  True)
 
 	def getEPGNowNext(self, ref, type, service=False):
-		print "[WebComponents.EPG] getting EPG NOW/NEXT", ref
+		print("[WebComponents.EPG] getting EPG NOW/NEXT", ref)
 
 		if service:
 			events = self.epgcache.lookupEvent(['IBDCTSERNX', (ref, type, -1)])
@@ -95,7 +95,7 @@
 		return events or ()
 
 	def getEPGofService(self, param, options='IBDCTSERN'):
-		print "[WebComponents.EPG] getEPGofService param: ", param
+		print("[WebComponents.EPG] getEPGofService param: ", param)
 
 		if "sRef" in param:
 			service = param["sRef"]
@@ -146,7 +146,7 @@
 		return list
 
 	def getEPGofBouquet(self, param, multi = False):
-		print "[WebComponents.EPG] getting EPG for Bouquet", param
+		print("[WebComponents.EPG] getting EPG for Bouquet", param)
 
 		if 'bRef' not in param:
 			return ()
@@ -186,7 +186,7 @@
 		return ()
 
 	def searchEvent(self, needle):
-		print "[WebComponents.EPG] searching EPG: ", needle
+		print("[WebComponents.EPG] searching EPG: ", needle)
 
 		self.search = True
 
@@ -196,7 +196,7 @@
 		return ()
 
 	def searchSimilarEvent(self, needle):
-		print "[WebComponents.EPG] searching similar eventid: ",needle
+		print("[WebComponents.EPG] searching similar eventid: ",needle)
 
 		events = self.epgcache.search(('IBDCTSERN', 256, eEPGCache.SIMILAR_BROADCASTINGS_SEARCH, needle['sRef'], int(needle['eventid'])));
 		if events:
--- a/webinterface/src/WebComponents/Sources/LocationsAndTags.py
+++ b/webinterface/src/WebComponents/Sources/LocationsAndTags.py
@@ -45,12 +45,12 @@
 			while "" in tags:
 				tags.remove("")
 			file.close()
-		except IOError, ioe:
+		except IOError as ioe:
 			tags = ()
 		return tags
 
 	def addLocation(self, param):
-		print "[WebComponents.LocationsAndTags] addLocation: ", param
+		print("[WebComponents.LocationsAndTags] addLocation: ", param)
 		if param['dirname'] is None:
 			return ( False, "Missing Parameter: dirname" )
 		dirname = param['dirname']
@@ -78,7 +78,7 @@
 		return ( True, _("Location '%s' added successfully") % (dirname) )
 
 	def removeLocation(self, param):
-		print "[WebComponents.LocationsAndTags] removeLocation: ", param
+		print("[WebComponents.LocationsAndTags] removeLocation: ", param)
 		if len(param) == 0:
 			return ( False, _("Missing value for parameter dirname") )
 		dirname = param
--- a/webinterface/src/WebComponents/Sources/MP.py
+++ b/webinterface/src/WebComponents/Sources/MP.py
@@ -48,7 +48,7 @@
 			mp = self.session.mediaplayer
 			try:
 				len(mp.playlist)
-			except Exception, e:
+			except Exception as e:
 				pass
 			else:
 				return mp
@@ -57,7 +57,7 @@
 		try:
 			from Plugins.Extensions.MediaPlayer.plugin import MediaPlayer, MyPlayList
 		# nope, bail out
-		except ImportError, ie:
+		except ImportError as ie:
 			return None
 		else:
 			# mp installed, see if it's running
--- a/webinterface/src/WebComponents/Sources/Message.py
+++ b/webinterface/src/WebComponents/Sources/Message.py
@@ -25,7 +25,7 @@
 			self.res = self.getYesNoAnswer(cmd)
 
 	def printMessage(self, param):
-		print "printMessage"
+		print("printMessage")
 
 		if self.cmd['text'] == "" or self.cmd['text'] is None:
 			return ( False, _("No Messagetext given") )
@@ -34,7 +34,7 @@
 
 		try:
 			typeint = int(self.cmd['type'])
-		except (ValueError, TypeError), e:
+		except (ValueError, TypeError) as e:
 			return ( False, _("type %s is not a number") % self.cmd['type'] )
 
 		if typeint == MessageBox.TYPE_YESNO:
@@ -51,7 +51,7 @@
 
 		try:
 			mtimeout = int(self.cmd['timeout'])
-		except (ValueError, TypeError), e:
+		except (ValueError, TypeError) as e:
 			mtimeout = -1
 
 		if typeint == MessageBox.TYPE_YESNO:
@@ -62,7 +62,7 @@
 		return ( True, _("Message sent successfully!") )
 
 	def yesNoAnswer(self, confirmed):
-		print "yesNoAnswer", confirmed
+		print("yesNoAnswer", confirmed)
 		#self.session.messageboxanswer = confirmed
 
 		yesnoFile = self.yesnoFile
@@ -74,7 +74,7 @@
 		system(cmdstr)
 
 	def getYesNoAnswer(self, param):
-		print "getYesNoAnswer"#,self.session.messageboxanswer
+		print("getYesNoAnswer")#,self.session.messageboxanswer
 		yesnoFile = self.yesnoFile
 		if path.exists(yesnoFile) == True:
 			file = open(yesnoFile, "r")
@@ -82,7 +82,7 @@
 			file.close()
 			cmdstr = "rm %s" % yesnoFile
 			system(cmdstr)
-			print "Answer: (%s)" % lines[0]
+			print("Answer: (%s)" % lines[0])
 			if lines[0] == "yes":
 				return ( True, "Answer is YES!" )
 			else:
--- a/webinterface/src/WebComponents/Sources/ParentControl.py
+++ b/webinterface/src/WebComponents/Sources/ParentControl.py
@@ -9,7 +9,7 @@
 		self.session = session
 
 	def command(self):
-		print "ParentControl was called"
+		print("ParentControl was called")
 
 		if config.ParentalControl.configured.value:
 			parentalControl.open()
@@ -22,7 +22,7 @@
 		else:
 			list = []
 
-		print "list", list
+		print("list", list)
 		return list
 
 	list = property(command)
--- a/webinterface/src/WebComponents/Sources/PowerState.py
+++ b/webinterface/src/WebComponents/Sources/PowerState.py
@@ -36,7 +36,7 @@
 				return self.getStandby()
 
 			elif type == 0:
-				print "[PowerState.py] Standby 0"
+				print("[PowerState.py] Standby 0")
 				if inStandby == None:
 					self.session.open(Standby)
 					return "true"
@@ -45,35 +45,35 @@
 					return "false"
 
 			elif type == 4:
-				print "[PowerState.py] Standby 4"
+				print("[PowerState.py] Standby 4")
 				if inStandby != None:
 					inStandby.Power()
 					return "false"
 				else:
 					return "true"
 			elif type == 5:
-				print "[PowerState.py] Standby 5"
+				print("[PowerState.py] Standby 5")
 				if inStandby == None:
 					self.session.open(Standby)
 					return "true"
 				else:
 					return "false"
 			elif type == 6:
-				print "[PowerState.py] Standby 6"
+				print("[PowerState.py] Standby 6")
 				from twisted.internet import reactor
 				import os
 				reactor.callLater(1, os.popen, 'killall -9 enigma2')
 				return "true"
 
 			elif 0 < type < 4:
-				print "[PowerState.py] TryQuitMainloop"
+				print("[PowerState.py] TryQuitMainloop")
 				from Screens.Standby import TryQuitMainloop
 				from twisted.internet import reactor
 				reactor.callLater(1, self.session.open, TryQuitMainloop, type)
 				return "true"
 
 			else:
-				print "[PowerState.py] cmd unknown" % type
+				print("[PowerState.py] cmd unknown" % type)
 				return "error"
 
 		except ValueError:
--- a/webinterface/src/WebComponents/Sources/ReadPluginList.py
+++ b/webinterface/src/WebComponents/Sources/ReadPluginList.py
@@ -8,7 +8,7 @@
 		self.session = session
 
 	def command(self):
-		print "[WebComponents.ReadPluginList] readPluginList"
+		print("[WebComponents.ReadPluginList] readPluginList")
 
 		plugins.readPluginList(resolveFilename(SCOPE_PLUGINS))
 		return ( True, _("List of Plugins has been read" ))
--- a/webinterface/src/WebComponents/Sources/RemoteControl.py
+++ b/webinterface/src/WebComponents/Sources/RemoteControl.py
@@ -29,7 +29,7 @@
 		else:
 			self.remotetype = self.TYPE_STANDARD
 
-		print "[RemoteControl.__init__] Configured RCU-Type is '%s'" %(self.remotetype)
+		print("[RemoteControl.__init__] Configured RCU-Type is '%s'" %(self.remotetype))
 
 	def handleCommand(self, cmd):
 		self.cmd = cmd
@@ -37,18 +37,18 @@
 
 	def sendEvent(self):
 		if not self.cmd:
-			print "[RemoteControl.sendEvent] cmd is empty or None"
+			print("[RemoteControl.sendEvent] cmd is empty or None")
 			return self.res
 
 		key = self.cmd.get("command", None)
 		if key is None:
-			print "[RemoteControl.sendEvent] Obligatory parameter 'command' is missing!"
+			print("[RemoteControl.sendEvent] Obligatory parameter 'command' is missing!")
 			return ( False, _("Obligatory parameter 'command' is missing!" ))
 
 		key = int(key)
 
 		if key <= 0:
-			print "[RemoteControl.sendEvent] command <= 0 (%s)" % key
+			print("[RemoteControl.sendEvent] command <= 0 (%s)" % key)
 			return ( False, _("the command was not > 0") )
 
 		#type can be "long" or "ascii", everything else will result in FLAG_MAKE
@@ -81,7 +81,7 @@
 		#Release the key
 		self.eam.keyPressed(remotetype, key, self.FLAG_BREAK)
 
-		print "[RemoteControl.sendEvent] command was was sent (key: %s, flag: %s)" %(key, flag)
+		print("[RemoteControl.sendEvent] command was was sent (key: %s, flag: %s)" %(key, flag))
 		return ( True, _("RC command '%s' has been issued") %str(key))
 
 	result = property(lambda self: self.res)
--- a/webinterface/src/WebComponents/Sources/ServiceListReload.py
+++ b/webinterface/src/WebComponents/Sources/ServiceListReload.py
@@ -25,16 +25,16 @@
 			elif self.cmd is self.USERBOUQUETS:
 				self.res = self.reloadUserBouquets()
 				self.res = ( True, _('reloaded bouquets') )
-		except Exception, e:
+		except Exception as e:
 			pass
 
 	def reloadLameDB(self):
-		print "[ServiceListReload] reloading lamedb"
+		print("[ServiceListReload] reloading lamedb")
 		self.eDVBDB.removeServices()
 		self.eDVBDB.reloadServicelist()
 
 	def reloadUserBouquets(self):
-		print "[ServiceListReload] reloading userbouquets"
+		print("[ServiceListReload] reloading userbouquets")
 		self.eDVBDB.reloadBouquets()
 
 	def getResult(self):
--- a/webinterface/src/WebComponents/Sources/Settings.py
+++ b/webinterface/src/WebComponents/Sources/Settings.py
@@ -16,7 +16,7 @@
 		return result
 
 	def pickle_this(self, prefix, topickle, result):
-		for (key, val) in topickle.items():
+		for (key, val) in list(topickle.items()):
 			name = prefix + "." + key
 			if isinstance(val, dict):
 				self.pickle_this(name, val, result)
--- a/webinterface/src/WebComponents/Sources/SleepTimer.py
+++ b/webinterface/src/WebComponents/Sources/SleepTimer.py
@@ -16,11 +16,11 @@
 					_("Obligatory parameters missing [cmd [set,get], time [0-999], action [standby,shutdown], enabled [True,False]") )
 
 	def handleCommand(self, cmd):
-		print "[WebComponents.SleepTimer].handleCommand"
+		print("[WebComponents.SleepTimer].handleCommand")
 		self.res = self.setSleeptimer(cmd)
 
 	def setSleeptimer(self, cmd):
-		print "[WebComponents.SleepTimer].setSleeptimer, cmd=%s" %cmd
+		print("[WebComponents.SleepTimer].setSleeptimer, cmd=%s" %cmd)
 
 		from Screens.Standby import inStandby
 
--- a/webinterface/src/WebComponents/Sources/SubServices.py
+++ b/webinterface/src/WebComponents/Sources/SubServices.py
@@ -11,11 +11,11 @@
 
 	def handleCommand(self, cmd):
 		if cmd is not None:
-			print "[SubServices].handleCommand %s" %cmd
+			print("[SubServices].handleCommand %s" %cmd)
 			self.cmd = cmd
 
 	def getSubservices(self):
-		print "[SubServices].getSubservices called"
+		print("[SubServices].getSubservices called")
 		list = []
 
 		if self.streamingScreens is None:
@@ -39,21 +39,21 @@
 			else:
 				list = (("N/A", "N/A"),)
 
-			print "SubServices is returning list ", list
+			print("SubServices is returning list ", list)
 			return list
 
 		elif self.cmd is not None:
-			print "[SubServices].getSubservices for Streaming Service"
+			print("[SubServices].getSubservices for Streaming Service")
 			for screen in self.streamingScreens:
 				if screen is not None:
 					service = screen.getRecordService()
 					sref = ServiceReference(screen.getRecordServiceRef())
 					if service is not None:
-						print "[SubServices] serviceref: %s | cmd: %s" %(sref, self.cmd)
+						print("[SubServices] serviceref: %s | cmd: %s" %(sref, self.cmd))
 
 						if sref.__str__() == self.cmd:
 							list.append((sref.__str__(), sref.getServiceName()))
-							print "[SubServices] Matching recordSerivce found!"
+							print("[SubServices] Matching recordSerivce found!")
 							subservices = service and service.subServices()
 							if subservices and subservices.getNumberOfSubservices() != 0:
 								n = subservices and subservices.getNumberOfSubservices()
@@ -65,9 +65,9 @@
 
 								return list
 							else:
-								print "[SubServices] no items: %s" %subservices
+								print("[SubServices] no items: %s" %subservices)
 					else:
-						print "[SubServices] Service is None!"
+						print("[SubServices] Service is None!")
 		if not list:
 			return (("N/A", "N/A"),)
 
--- a/webinterface/src/WebComponents/Sources/SwitchService.py
+++ b/webinterface/src/WebComponents/Sources/SwitchService.py
@@ -15,7 +15,7 @@
 		self.res = self.switchService(cmd)
 
 	def switchService(self, cmd):
-		print "[SwitchService] ref=%s" % cmd["sRef"]
+		print("[SwitchService] ref=%s" % cmd["sRef"])
 		if config.plugins.Webinterface.allowzapping.value:
 			from Screens.Standby import inStandby
 			if inStandby == None:
--- a/webinterface/src/WebComponents/Sources/Timer.py
+++ b/webinterface/src/WebComponents/Sources/Timer.py
@@ -64,14 +64,14 @@
 			self.res = ( False, _("Unknown function: '%s'") % (self.func) )
 
 	def cleanupTimer(self):
-		print "[WebComponents.Timer] cleanupTimer"
+		print("[WebComponents.Timer] cleanupTimer")
 
 		self.session.nav.RecordTimer.cleanup()
 		return ( True, _("List of Timers has been cleaned") )
 
 
 	def delTimer(self, param):
-		print "[WebComponents.Timer] delTimer"
+		print("[WebComponents.Timer] delTimer")
 
 		if 'sRef' in param:
 			service_ref = ServiceReference(param['sRef'])
@@ -112,7 +112,7 @@
 		to delete something:
 			&command=del&&year={year}&month={month}&day={day}&shour={start_hour}&smin={start_minute}&ehour={end_hour}&emin={end_minute}&sRef={urlencode(channel_name_external, "utf8")}
 		"""
-		print "[WebComponents.Timer] tvbrowser"
+		print("[WebComponents.Timer] tvbrowser")
 
 		listDate = ('year', 'month', 'day', 'shour', 'smin', 'ehour', 'emin')
 		for element in listDate:
@@ -176,7 +176,7 @@
 			service = self.session.nav.getCurrentService()
 			event = service.info().getEvent(0)
 		except Exception:
-			print "[Webcomponents.Timer] recordNow Exception!"
+			print("[Webcomponents.Timer] recordNow Exception!")
 
 		begin = time()
 		end = begin + 3600 * 10
@@ -214,7 +214,7 @@
 # an existing timer with corresponding values will be changed.
 #===============================================================================
 	def editTimer(self, param):
-		print "[WebComponents.Timer] editTimer"
+		print("[WebComponents.Timer] editTimer")
 
 		#OK first we need to parse all of your Parameters
 		#For some of them (like afterEvent or justplay) we can use default values
@@ -263,7 +263,7 @@
 			try: eit = int(eit)
 			except ValueError: return ( False, _("Illegal Parameter value for Parameter eit : '%s'") % eit )
 
-		print "[WebComponents.Sources.Timer]: eit=%d" %eit
+		print("[WebComponents.Sources.Timer]: eit=%d" %eit)
 		if eit != 0:
 			#check if the given event exists, if it doesn't the timer may be already running
 			epgcache = eEPGCache.getInstance()
@@ -272,7 +272,7 @@
 				eit = event.getEventId()
 				#TODO add some subservice handling
 			else:
-				print "[WebComponents.Sources.Timer] event not found, will be ignored"
+				print("[WebComponents.Sources.Timer] event not found, will be ignored")
 
 		disabled = False #Default to: Enabled
 		if 'disabled' in param:
@@ -356,10 +356,10 @@
 
 								if conflicts is None:
 									self.recordtimer.timeChanged(timer) #go and save it
-									print "[WebComponents.Timer] editTimer: Timer changed!"
+									print("[WebComponents.Timer] editTimer: Timer changed!")
 									return ( True, "Timer '%s' changed" %(timer.name) )
 								else:
-									print "[WebComponents.Timer] editTimer conflicting Timers: %s" %(conflicts)
+									print("[WebComponents.Timer] editTimer conflicting Timers: %s" %(conflicts))
 									msg = ""
 									for t in conflicts:
 										msg = "%s / %s" %(msg, t.name)
@@ -369,7 +369,7 @@
 			except Exception as e:
 				#obviously some value was not good, return an error
 				import traceback
-				print traceback.format_exc()
+				print(traceback.format_exc())
 				return ( False, _("Changing the timer for '%s' failed!") % name )
 
 
@@ -386,22 +386,22 @@
 			if conflicts is None:
 				return ( True, _("Timer '%s' added") %(timer.name) )
 			else:
-				print "[WebComponents.Timer] editTimer conflicting Timers: %s" %(conflicts)
+				print("[WebComponents.Timer] editTimer conflicting Timers: %s" %(conflicts))
 				msg = ""
 				for timer in conflicts:
 					msg = "%s / %s" %(msg, timer.name)
 
 				return (False, _("Conflicting Timer(s) detected! %s") %(msg))
 
-		except Exception, e:
+		except Exception as e:
 			#something went wrong, most possibly one of the given paramater-values was wrong
-			print "[WebComponents.Timer] editTimer exception: %s" %(e)
+			print("[WebComponents.Timer] editTimer exception: %s" %(e))
 			return ( False, _("Could not add timer '%s'!") % name )
 
 		return ( False, "Unexpected Error" )
 
 	def addTimerByEventID(self, param):
-		print "[WebComponents.Timer] addTimerByEventID", param
+		print("[WebComponents.Timer] addTimerByEventID", param)
 		if param['sRef'] is None:
 			return ( False, _("Missing Parameter: sRef") )
 		if param['eventid'] is None:
@@ -433,7 +433,7 @@
 		if conflicts is None:
 			return ( True, _("Timer '%s' added") %(timer.name) )
 		else:
-			print "[WebComponents.Timer] editTimer conflicting Timers: %s" %(conflicts)
+			print("[WebComponents.Timer] editTimer conflicting Timers: %s" %(conflicts))
 			msg = ""
 			for timer in conflicts:
 				msg = "%s / %s" %(msg, timer.name)
@@ -444,7 +444,7 @@
 	def writeTimerList(self, force=False):
 		# is there an easier and better way? :\
 		if config.plugins.Webinterface.autowritetimer.value or force:
-			print "Timer.py writing timer to flash"
+			print("Timer.py writing timer to flash")
 			self.session.nav.RecordTimer.saveTimer()
 			return ( True, _("TimerList has been saved") )
 		else:
--- a/webinterface/src/WebComponents/Sources/WAPfunctions.py
+++ b/webinterface/src/WebComponents/Sources/WAPfunctions.py
@@ -31,7 +31,7 @@
 		self.result = ( "unknown command (%s)" % (self.func), )
 
 	def handleCommand(self, cmd):
-		print "WAPfunctions: handleCommand", cmd
+		print("WAPfunctions: handleCommand", cmd)
 		if self.func is self.LISTTIME:
 			self.result = self.fillListTime(cmd)
 		elif self.func is self.REPEATED:
@@ -52,7 +52,7 @@
 			self.result = ( "unknown command cmd(%s) self.func(%s)" % (cmd, self.func), )
 
 	def fillListTime(self, param):
-		print "fillListTime", param
+		print("fillListTime", param)
 
 		input = 0
 		start = 1
@@ -130,7 +130,7 @@
 		return returnList
 
 	def fillRepeated(self, param):
-		print "fillRepeated", param
+		print("fillRepeated", param)
 		repeated = param or 0
 		repeated = int(repeated)
 
@@ -222,7 +222,7 @@
 		self.servicelist.setRoot(ref)
 		returnList = []
 		for (ref2, name) in self.servicelist.getServicesAsList():
-			print "ref2: (", ref2, ") name: (", name, ")"
+			print("ref2: (", ref2, ") name: (", name, ")")
 			returnListPart = [
 				name,
 				ref2
@@ -236,7 +236,7 @@
 		return returnList
 
 	def serviceList(self, param):
-		print "serviceList: ", param
+		print("serviceList: ", param)
 		sRef = str(param["sRef"])
 		bouquet = str(param["bouquet"])
 		self.sRefFound = 0
@@ -272,7 +272,7 @@
 		self.servicelist.root = ref
 
 	def locationList(self, param):
-		print "locationList", param
+		print("locationList", param)
 		dirname = param
 		lst = config.movielist.videodirs.value
 		if not dirname:
@@ -283,7 +283,7 @@
 		return returnList
 
 	def tagList(self, param):
-		print "tagList", param
+		print("tagList", param)
 		tag = param
 		try:
 			file = open(resolveFilename(SCOPE_CONFIG, "movietags"))
@@ -291,7 +291,7 @@
 			while "" in taglist:
 				taglist.remove("")
 			file.close()
-		except IOError, ioe:
+		except IOError as ioe:
 			taglist = []
 		if not tag in taglist:
 			taglist = [tag] + taglist
@@ -301,7 +301,7 @@
 		return returnList
 
 	def fillOptionList(self, param):
-		print "fillOptionList", param
+		print("fillOptionList", param)
 		if "justplay" in param:
 			number = param["justplay"] or 0
 			number = int(number)
@@ -322,7 +322,7 @@
 			return ()
 
 	def deleteOldSaved(self, param):
-		print "deleteOldSaved", param
+		print("deleteOldSaved", param)
 		returnList = [
 			("deleteOldOnSave", param["deleteOldOnSave"], ""),
 			("command", param["command"], "")
@@ -336,7 +336,7 @@
 		return returnList
 
 	def fillValue(self, param):
-		print "fillValue: ", param
+		print("fillValue: ", param)
 		return (("", param, ""),)
 
 	def getText(self):
--- a/yttrailer/src/plugin.py
+++ b/yttrailer/src/plugin.py
@@ -221,10 +221,10 @@
 		watch_url = 'http://www.youtube.com/watch?v=%s&gl=US&hl=en' % video_id
 		watchrequest = Request(watch_url, None, std_headers)
 		try:
-			print "[YTTrailer] trying to find out if a HD Stream is available",watch_url
+			print("[YTTrailer] trying to find out if a HD Stream is available",watch_url)
 			watchvideopage = urlopen2(watchrequest).read()
-		except (URLError, HTTPException, socket_error), err:
-			print "[YTTrailer] Error: Unable to retrieve watchpage - Error code: ", str(err)
+		except (URLError, HTTPException, socket_error) as err:
+			print("[YTTrailer] Error: Unable to retrieve watchpage - Error code: ", str(err))
 			return video_url
 
 		# Get video info
@@ -236,17 +236,17 @@
 				videoinfo = parse_qs(infopage)
 				if ('url_encoded_fmt_stream_map' or 'fmt_url_map') in videoinfo:
 					break
-			except (URLError, HTTPException, socket_error), err:
-				print "[YTTrailer] Error: unable to download video infopage",str(err)
+			except (URLError, HTTPException, socket_error) as err:
+				print("[YTTrailer] Error: unable to download video infopage",str(err))
 				return video_url
 
 		if ('url_encoded_fmt_stream_map' or 'fmt_url_map') not in videoinfo:
 			# Attempt to see if YouTube has issued an error message
 			if 'reason' not in videoinfo:
-				print '[YTTrailer] Error: unable to extract "url_encoded_fmt_stream_map" or "fmt_url_map" parameter for unknown reason'
+				print('[YTTrailer] Error: unable to extract "url_encoded_fmt_stream_map" or "fmt_url_map" parameter for unknown reason')
 			else:
 				reason = unquote_plus(videoinfo['reason'][0])
-				print '[YTTrailer] Error: YouTube said: %s' % reason.decode('utf-8')
+				print('[YTTrailer] Error: YouTube said: %s' % reason.decode('utf-8'))
 			return video_url
 
 		video_fmt_map = {}
@@ -261,7 +261,7 @@
 				try:
 					for arg in fmtstring.split('&'):
 						if arg.find('=') >= 0:
-							print arg.split('=')
+							print(arg.split('='))
 							key, value = arg.split('=')
 							if key == 'itag':
 								if len(value) > 3:
@@ -278,7 +278,7 @@
 					fmturl = fmtid = fmtsig = ""
 
 				except:
-					print "error parsing fmtstring:",fmtstring
+					print("error parsing fmtstring:",fmtstring)
 
                         else:
 				(fmtid,fmturl) = fmtstring.split('|')
@@ -285,7 +285,7 @@
 			if VIDEO_FMT_PRIORITY_MAP.has_key(fmtid) and fmtid != "":
 					video_fmt_map[VIDEO_FMT_PRIORITY_MAP[fmtid]] = { 'fmtid': fmtid, 'fmturl': unquote_plus(fmturl) }
 				fmt_infomap[int(fmtid)] = unquote_plus(fmturl)
-		print "[YTTrailer] got",sorted(fmt_infomap.iterkeys())
+		print("[YTTrailer] got",sorted(fmt_infomap.iterkeys()))
 		if video_fmt_map and len(video_fmt_map):
 			if self.l3cert:
 				l3key = validate_cert(self.l3cert, l2key)
@@ -294,10 +294,10 @@
 					val = etpm.challenge(rnd)
 					result = decrypt_block(val, l3key)
 					if result[80:88] == rnd:
-						print "[YTTrailer] found best available video format:",video_fmt_map[sorted(video_fmt_map.iterkeys())[0]]['fmtid']
+						print("[YTTrailer] found best available video format:",video_fmt_map[sorted(video_fmt_map.iterkeys())[0]]['fmtid'])
 						best_video = video_fmt_map[sorted(video_fmt_map.iterkeys())[0]]
 						video_url = "%s&signature=%s" %(best_video['fmturl'].split(';')[0], best_video['fmtsig'])
-						print "[YTTrailer] found best available video url:",video_url
+						print("[YTTrailer] found best available video url:",video_url)
 		return video_url
 
 class YTTrailerList(Screen, YTTrailer):
--- a/yttrailer/src/__init__.py
+++ b/yttrailer/src/__init__.py
@@ -5,6 +5,7 @@
 import gettext
 
 import sha
+from functools import reduce
 rootkey = ['\x9f', '|', '\xe4', 'G', '\xc9', '\xb4', '\xf4', '#', '&', '\xce', '\xb3', '\xfe', '\xda', '\xc9', 'U', '`', '\xd8', '\x8c', 's', 'o', '\x90', '\x9b', '\\', 'b', '\xc0', '\x89', '\xd1', '\x8c', '\x9e', 'J', 'T', '\xc5', 'X', '\xa1', '\xb8', '\x13', '5', 'E', '\x02', '\xc9', '\xb2', '\xe6', 't', '\x89', '\xde', '\xcd', '\x9d', '\x11', '\xdd', '\xc7', '\xf4', '\xe4', '\xe4', '\xbc', '\xdb', '\x9c', '\xea', '}', '\xad', '\xda', 't', 'r', '\x9b', '\xdc', '\xbc', '\x18', '3', '\xe7', '\xaf', '|', '\xae', '\x0c', '\xe3', '\xb5', '\x84', '\x8d', '\r', '\x8d', '\x9d', '2', '\xd0', '\xce', '\xd5', 'q', '\t', '\x84', 'c', '\xa8', ')', '\x99', '\xdc', '<', '"', 'x', '\xe8', '\x87', '\x8f', '\x02', ';', 'S', 'm', '\xd5', '\xf0', '\xa3', '_', '\xb7', 'T', '\t', '\xde', '\xa7', '\xf1', '\xc9', '\xae', '\x8a', '\xd7', '\xd2', '\xcf', '\xb2', '.', '\x13', '\xfb', '\xac', 'j', '\xdf', '\xb1', '\x1d', ':', '?']
 l2key = None
 
@@ -15,7 +16,7 @@
 def _(txt):
 	t = gettext.dgettext("YTTrailer", txt)
 	if t == txt:
-		print "[YTTrailer] fallback to default translation for", txt
+		print("[YTTrailer] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
@@ -23,7 +24,7 @@
 language.addCallback(localeInit)
 
 def bin2long(s):
-	return reduce( lambda x,y:(x<<8L)+y, map(ord, s))
+	return reduce( lambda x,y:(x<<8)+y, list(map(ord, s)))
 
 def long2bin(l):
 	res = ""
--- a/zdfmediathek/src/plugin.py
+++ b/zdfmediathek/src/plugin.py
@@ -22,7 +22,7 @@
 from Tools.HardwareInfo import HardwareInfo
 from Tools.LoadPixmap import LoadPixmap
 from twisted.web.client import downloadPage, getPage
-import htmlentitydefs, re, urllib2
+import html.entities, re, urllib.request, urllib.error, urllib.parse
 
 ###################################################
 
@@ -71,20 +71,20 @@
 def decode(line):
 	pat = re.compile(r'\\u(....)')
 	def sub(mo):
-		return unichr(fromHex(mo.group(1)))
-	return pat.sub(sub, unicode(line))
+		return chr(fromHex(mo.group(1)))
+	return pat.sub(sub, str(line))
 
 def decode2(line):
 	pat = re.compile(r'&#(\d+);')
 	def sub(mo):
-		return unichr(int(mo.group(1)))
-	return decode3(pat.sub(sub, unicode(line)))
+		return chr(int(mo.group(1)))
+	return decode3(pat.sub(sub, str(line)))
 
 def decode3(line):
-	dic = htmlentitydefs.name2codepoint
-	for key in dic.keys():
+	dic = html.entities.name2codepoint
+	for key in list(dic.keys()):
 		entity = "&" + key + ";"
-		line = line.replace(entity, unichr(dic[key]))
+		line = line.replace(entity, chr(dic[key]))
 	return line
 
 def fromHex(h):
@@ -243,7 +243,7 @@
 
 def getMovieUrl(url):
 	try:
-		f = urllib2.urlopen(url)
+		f = urllib.request.urlopen(url)
 		txt = f.read()
 		f.close()
 	except:
@@ -418,7 +418,7 @@
 		if len(self.menu):
 			self.select(self.current-1)
 
-	def next(self):
+	def __next__(self):
 		if len(self.menu):
 			self.select(self.current+1)
 
@@ -462,8 +462,8 @@
 		if not thumbUrl.startswith("http://"):
 			thumbUrl = "%s%s"%(MAIN_PAGE, thumbUrl)
 		try:
-			req = urllib2.Request(thumbUrl)
-			url_handle = urllib2.urlopen(req)
+			req = urllib.request.Request(thumbUrl)
+			url_handle = urllib.request.urlopen(req)
 			headers = url_handle.info()
 			contentType = headers.getheader("content-type")
 		except:
@@ -476,7 +476,7 @@
 			elif 'image/png' in contentType:
 				self.thumb = "/tmp/zdf.png"
 			else:
-				print "[ZDF Mediathek] Unknown thumbnail content-type:", contentType
+				print("[ZDF Mediathek] Unknown thumbnail content-type:", contentType)
 				self.thumb = None
 		else:
 			self.thumb = None
@@ -486,7 +486,7 @@
 			self.buildEntry(None)
 
 	def downloadThumbnailError(self, err):
-		print "[ZDF Mediathek] Error:", err
+		print("[ZDF Mediathek] Error:", err)
 		self.buildEntry(None)
 
 	def downloadThumbnailCallback(self, txt=""):
@@ -629,7 +629,7 @@
 		getPage(url).addCallback(self.gotPage).addErrback(self.error)
 
 	def error(self, err=""):
-		print "[ZDF Mediathek] Error:", err
+		print("[ZDF Mediathek] Error:", err)
 		self.working = False
 		self.deactivateCacheDialog()
 
@@ -834,7 +834,7 @@
 	def down(self):
 		if not self.working:
 			if self.currentList == LIST_LEFT:
-				self["leftList"].next()
+				next(self["leftList"])
 			elif self.currentList == LIST_RIGHT:
 				self["rightList"].down()
 
--- a/zapstatistic/src/plugin.py
+++ b/zapstatistic/src/plugin.py
@@ -36,7 +36,7 @@
 
 def decode_charset(str, charset):
 	try:
-		uni = unicode(str, charset, 'strict')
+		uni = str(str, charset, 'strict')
 	except:
 		uni = str
 	return uni
@@ -121,7 +121,7 @@
 					if ref and begin and end:
 						self.zapEntries.append(ZapEntry(ref, float(begin), float(end)))
 			except:
-				print "[ZapStatistic] Error while reading xml file"
+				print("[ZapStatistic] Error while reading xml file")
 
 	def saveZapEntries(self):
 		xml = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<zapstastistic>\n'
@@ -135,7 +135,7 @@
 			f.write(xml.encode("UTF-8"))
 			f.close()
 		except:
-			print "[ZapStatistic] Error while writing xml file"
+			print("[ZapStatistic] Error while writing xml file")
 
 	def handlePlayServiceCommand(self, ref):
 		self.handleStopServiceCommand()
--- a/zaphistorybrowser/src/plugin.py
+++ b/zaphistorybrowser/src/plugin.py
@@ -54,7 +54,7 @@
 		tmp = instance.servicePath[:]
 		tmp.append(ref)
 		try: del instance.history[instance.history_pos+1:]
-		except Exception, e: pass
+		except Exception as e: pass
 		if config.plugins.ZapHistoryConfigurator.e1_like_history.value and tmp in instance.history:
 			instance.history.remove(tmp)
 		instance.history.append(tmp)
@@ -117,7 +117,7 @@
 			from Screens.InfoBar import InfoBar
 			try:
 				csel = InfoBar.instance.servicelist
-			except AttributeError, e:
+			except AttributeError as e:
 				pass
 			else:
 				config.plugins.ZapHistoryConfigurator.history_tv.value = [[y.toString() for y in x] for x in csel.history_tv]
--- a/youtubeplayer/src/ConfigTextWithSuggestions.py
+++ b/youtubeplayer/src/ConfigTextWithSuggestions.py
@@ -18,7 +18,7 @@
 #    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
 ############################################################################
 
-from GoogleSuggestions import GoogleSuggestions
+from .GoogleSuggestions import GoogleSuggestions
 
 from Screens.Screen import Screen
 from Components.config import ConfigText
--- a/youtubeplayer/src/DirectYouTubePlayer.py
+++ b/youtubeplayer/src/DirectYouTubePlayer.py
@@ -18,7 +18,7 @@
 from Components.ActionMap import ActionMap
 from Components.config import config
 
-from YouTubeContextMenu import YouTubeEntryContextMenu, YouTubeEntryContextMenuList
+from .YouTubeContextMenu import YouTubeEntryContextMenu, YouTubeEntryContextMenuList
 
 class DirectYouTubePlayerSummary(Screen):
 	skin = """
@@ -129,7 +129,7 @@
 		self.play()
 
 	def createSummary(self):
-		print "[YTB] createSummary"
+		print("[YTB] createSummary")
 		return DirectYouTubePlayerSummary
 		
 	def __onClose(self):
@@ -138,8 +138,8 @@
 		self.session.nav.playService(self.oldNavService)
 
 	def __evEOF(self):
-		print "evEOF=%d" % iPlayableService.evEOF
-		print "Event EOF"
+		print("evEOF=%d" % iPlayableService.evEOF)
+		print("Event EOF")
 		self.close()
 
 	def __setHideTimer(self):
@@ -190,25 +190,25 @@
 #		self.state = self.STATE_IDLE
 
 	def playpauseService(self):
-		print "playpauseService"
+		print("playpauseService")
 		if self.state == self.STATE_PLAYING:
 			self.pauseService()
 		elif self.state == self.STATE_PAUSED:
 			self.unPauseService()
 
 	def pauseService(self):
-		print "pauseService"
+		print("pauseService")
 		if self.state == self.STATE_PLAYING:
 			self.setSeekState(self.STATE_PAUSED)
 
 	def unPauseService(self):
-		print "unPauseService"
+		print("unPauseService")
 		if self.state == self.STATE_PAUSED:
 			self.setSeekState(self.STATE_PLAYING)
 
 
 	def playNextFile(self):
-		print "[YTB] playNextFile"
+		print("[YTB] playNextFile")
 		if self.currentList != None:
 			media, name = self.currentList.getNextFile()
 			if media is None:
@@ -221,7 +221,7 @@
 				self.showInfobar()
 
 	def playPrevFile(self):
-		print "[YTB] playPrevFile"
+		print("[YTB] playPrevFile")
 		if self.currentList != None:
 			media, name = self.currentList.getPrevFile()
 			if media is None:
@@ -252,42 +252,42 @@
 		return True
 
 	def __seekableStatusChanged(self):
-		print "seekable status changed!"
+		print("seekable status changed!")
 		if not self.isSeekable():
 			self.setSeekState(self.STATE_PLAYING)
 		else:
-			print "seekable"
+			print("seekable")
 
 	def __serviceStarted(self):
 		self.state = self.STATE_PLAYING
 		self.__seekableStatusChanged()
 
 	def setSeekState(self, wantstate):
-		print "setSeekState"
+		print("setSeekState")
 		if wantstate == self.STATE_PAUSED:
-			print "trying to switch to Pause- state:",self.STATE_PAUSED
+			print("trying to switch to Pause- state:",self.STATE_PAUSED)
 		elif wantstate == self.STATE_PLAYING:
-			print "trying to switch to playing- state:",self.STATE_PLAYING
+			print("trying to switch to playing- state:",self.STATE_PLAYING)
 		service = self.session.nav.getCurrentService()
 		if service is None:
-			print "No Service found"
+			print("No Service found")
 			return False
 		pauseable = service.pause()
 		if pauseable is None:
-			print "not pauseable."
+			print("not pauseable.")
 			self.state = self.STATE_PLAYING
 
 		if pauseable is not None:
-			print "service is pausable"
+			print("service is pausable")
 			if wantstate == self.STATE_PAUSED:
-				print "WANT TO PAUSE"
+				print("WANT TO PAUSE")
 				pauseable.pause()
 				self.state = self.STATE_PAUSED
 				if not self.shown:
 					self.hidetimer.stop()
 					self.show()
 			elif wantstate == self.STATE_PLAYING:
-				print "WANT TO PLAY"
+				print("WANT TO PLAY")
 				pauseable.unpause()
 				self.state = self.STATE_PLAYING
 				if self.shown:
--- a/youtubeplayer/src/GoogleSuggestions.py
+++ b/youtubeplayer/src/GoogleSuggestions.py
@@ -18,15 +18,15 @@
 #    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
 ############################################################################
 
-import urllib
-import httplib
+import urllib.request, urllib.parse, urllib.error
+import http.client
 import socket
 
 
 class GoogleSuggestions():
 	def __init__(self, callback, ds = None, json = None, hl = None):
 		self.callback = callback
-		self.conn = httplib.HTTPConnection("google.com")
+		self.conn = http.client.HTTPConnection("google.com")
 		self.prepQuerry = "/complete/search?"
 		if ds is not None:
 			self.prepQuerry = self.prepQuerry + "ds=" + ds + "&"
@@ -43,22 +43,22 @@
 
 	def getSuggestions(self, querryString):
 		if querryString is not "":
-			querry = self.prepQuerry + urllib.quote(querryString)
+			querry = self.prepQuerry + urllib.parse.quote(querryString)
 			try:
 				self.conn.request("GET", querry)
-			except (httplib.CannotSendRequest, socket.gaierror, socket.error):
-				print "[YTB] Can not send request for suggestions"
+			except (http.client.CannotSendRequest, socket.gaierror, socket.error):
+				print("[YTB] Can not send request for suggestions")
 				self.callback(None)
 			else:
 				try:
 					response = self.conn.getresponse()
-				except httplib.BadStatusLine:
-					print "[YTB] Can not get a response from google"
+				except http.client.BadStatusLine:
+					print("[YTB] Can not get a response from google")
 					self.callback(None)
 				else:
 					if response.status == 200:
 						data = response.read()
-						exec data
+						exec(data)
 					else:
 						self.callback(None)
 			self.conn.close()
--- a/youtubeplayer/src/SkinLoader.py
+++ b/youtubeplayer/src/SkinLoader.py
@@ -25,7 +25,7 @@
 
 def loadSkinReal(skinPath):
 	if os.path.exists(skinPath):
-		print "[SKLDR] Loading skin ", skinPath
+		print("[SKLDR] Loading skin ", skinPath)
 		loadSkin(skinPath)
 
 
--- a/youtubeplayer/src/YouTubeAddPlayList.py
+++ b/youtubeplayer/src/YouTubeAddPlayList.py
@@ -28,7 +28,7 @@
 from Components.ActionMap import ActionMap
 from Components.Button import Button
 
-from ConfigTextWithSuggestions import ConfigTextWithSuggestions
+from .ConfigTextWithSuggestions import ConfigTextWithSuggestions
 
 from . import _
 
--- a/youtubeplayer/src/YouTubeInterface.py
+++ b/youtubeplayer/src/YouTubeInterface.py
@@ -27,14 +27,13 @@
 from Tools.LoadPixmap import LoadPixmap
 
 from twisted.web.client import downloadPage
-
-from urllib2 import urlopen, Request, URLError, HTTPError
-#, quote, unquote, unquote_plus
-from urllib import quote, unquote_plus, unquote
-
-from httplib import HTTPConnection, HTTPException
-
-from urlparse import parse_qs
+from urllib.request import urlopen, Request
+from urllib.error import URLError, HTTPError
+from urllib.parse import quote, unquote_plus, unquote
+
+from http.client import HTTPConnection, HTTPException
+
+from urllib.parse import parse_qs
 
 from socket import gaierror, error
 
@@ -89,7 +88,7 @@
 
 class YouTubeFeed():
 	def __init__(self, feed, favoritesFeed = False):
-		print "[YTB] YouTubeFeed::__init__()"
+		print("[YTB] YouTubeFeed::__init__()")
 		self.feed = feed
 		self.favoritesFeed = favoritesFeed
 		self.entries = []
@@ -97,9 +96,9 @@
 
 
 	def update(self):
-		print "[YTB] YouTubeFeed::update()"
+		print("[YTB] YouTubeFeed::update()")
 		sequenceNumber = int(self.feed.start_index.text)
-		print self.feed.entry
+		print(self.feed.entry)
 		for entry in self.feed.entry:
 			self.entries.append(YouTubeEntry(self, entry, sequenceNumber, self.favoritesFeed))
 			sequenceNumber = sequenceNumber + 1
@@ -110,12 +109,12 @@
 
 
 	def getEntries(self):
-		print "[YTB] YouTubeFeed::getEntries()"
+		print("[YTB] YouTubeFeed::getEntries()")
 		return self.entries
 
 
 	def itemCount(self):
-		print "[YTB] YouTubeFeed::itemCount()"
+		print("[YTB] YouTubeFeed::itemCount()")
 		return self.feed.items_per_page.text
 
 
@@ -124,7 +123,7 @@
 	
 
 	def getNextFeed(self):
-		print "[YTB] YouTubeFeed::getNextFeed()"
+		print("[YTB] YouTubeFeed::getNextFeed()")
 		for link in self.feed.link:
 			if link.rel == "next":
 				return link.href
@@ -132,7 +131,7 @@
 
 
 	def getPreviousFeed(self):
-		print "[YTB] YouTubeFeed::getPreviousFeed()"
+		print("[YTB] YouTubeFeed::getPreviousFeed()")
 		for link in self.feed.link:
 			if link.rel == "previous":
 				return link.href
@@ -140,7 +139,7 @@
 
 
 	def getSelfFeed(self):
-		print "[YTB] YouTubeFeed::getSelfFeed()"
+		print("[YTB] YouTubeFeed::getSelfFeed()")
 		for link in self.feed.link:
 			if link.rel == "self":
 				return link.href
@@ -148,14 +147,14 @@
 
 
 	def loadThumbnails(self, callback):
-		print "[YTB] YouTubeFeed::loadThumbnails()"
+		print("[YTB] YouTubeFeed::loadThumbnails()")
 		for entry in self.entries:
 			entry.loadThumbnails(callback)
 
 
 class YouTubeEntry():
 	def __init__(self, feed, entry, sequenceNumber, favoritesFeed = False):
-		print "[YTB] YouTubeEntry::__init__()"
+		print("[YTB] YouTubeEntry::__init__()")
 		self.feed = feed
 		self.entry = entry
 		self.sequenceNumber = sequenceNumber
@@ -168,7 +167,7 @@
 
 
 	def getYouTubeId(self):
-		print "[YTB] YouTubeEntry::getYouTubeId()"
+		print("[YTB] YouTubeEntry::getYouTubeId()")
 		ret = None
 		if self.entry.media.player:
 			split = self.entry.media.player.url.split("=")
@@ -182,42 +181,42 @@
 
 
 	def getTitle(self):
-		print "[YTB] YouTubeEntry::getTitle()"
+		print("[YTB] YouTubeEntry::getTitle()")
 		return self.entry.media.title.text
 
 
 	def getDescription(self):
-		print "[YTB] YouTubeEntry::getDescription()"
+		print("[YTB] YouTubeEntry::getDescription()")
 		return self.entry.media.description.text
 
 
 	def getThumbnailUrl(self, index):
-		print "[YTB] YouTubeEntry::getThumbnailUrl"
+		print("[YTB] YouTubeEntry::getThumbnailUrl")
 		if index < len(self.entry.media.thumbnail):
 			return self.entry.media.thumbnail[index].url
 		return None
 
 
 	def getRelatedFeed(self):
-		print "[YTB] YouTubeEntry::getRelatedFeed()"
+		print("[YTB] YouTubeEntry::getRelatedFeed()")
 		for link in self.entry.link:
-			print "Related link: ", link.rel.endswith
+			print("Related link: ", link.rel.endswith)
 			if link.rel.endswith("video.related"):
-				print "Found Related: ", link.href
+				print("Found Related: ", link.href)
 				return link.href
 
 
 	def getResponsesFeed(self):
-		print "[YTB] YouTubeEntry::getResponseFeed()"
+		print("[YTB] YouTubeEntry::getResponseFeed()")
 		for link in self.entry.link:
-			print "Responses link: ", link.rel.endswith
+			print("Responses link: ", link.rel.endswith)
 			if link.rel.endswith("video.responses"):
-				print "Found Responses: ", link.href
+				print("Found Responses: ", link.href)
 				return link.href
 
 
 	def loadThumbnail(self, index, callback):
-		print "[YTB] YouTubeEntry::loadThumbnail()"
+		print("[YTB] YouTubeEntry::loadThumbnail()")
 		thumbnailUrl = self.getThumbnailUrl(index)
 		if thumbnailUrl is not None and self.getYouTubeId() is not None:
 			thumbnailFile = "/tmp/" + self.getYouTubeId() + "_" + str(index) + ".jpg"
@@ -227,7 +226,7 @@
 
 
 	def loadThumbnails(self, callback):
-		print "[YTB] YouTubeEntry::loadThumbnails()"
+		print("[YTB] YouTubeEntry::loadThumbnails()")
 		self.loadThumbnail(0, callback)
 		
 	def verify_url(self, url):
@@ -237,7 +236,7 @@
 			data.read(1)
 			url = data.geturl()
 			data.close()
-		except (OSError, IOError, URLError, HTTPException, error), err:
+		except (OSError, IOError, URLError, HTTPException, error) as err:
 					return None
 		else:
 			return url
@@ -255,7 +254,7 @@
 				video_info = parse_qs(video_info_page)
 				if 'token' in video_info:
 					break
-			except (URLError, HTTPException, error), err:
+			except (URLError, HTTPException, error) as err:
 				return None #, ('ERROR: unable to download video info webpage: %s' % str(err))
 		if 'token' not in video_info:
 			if 'reason' not in video_info:
@@ -267,18 +266,18 @@
 			quality_fallback_dict = dict({"22" : "18",  "18" : "6",  "6" : "1"})
 			token = video_info['token'][0]
 			while True: 
-				print "[YTB] Trying fmt=" + fmt
+				print("[YTB] Trying fmt=" + fmt)
 				video_real_url = 'http://www.youtube.com/get_video?video_id=%s&t=%s&eurl=&el=detailpage&ps=default&gl=US&hl=en&fmt=%s' % (video_id, token, fmt)
 				video_real_url = self.verify_url(video_real_url)
 				if video_real_url is None:
 					if fmt == "1":
-						print "[YTB] no valid fmt found"
+						print("[YTB] no valid fmt found")
 						break
 					else:
-						print "[YTB] not found"
+						print("[YTB] not found")
 						fmt = quality_fallback_dict[fmt]
 				else:
-					print "[YTB] found"
+					print("[YTB] found")
 					break
 			return video_real_url #, 'OK'
 
@@ -358,51 +357,51 @@
 
 class YouTubePlaylistFeed():
 	def __init__(self, feed):
-		print "[YTB] YouTubePlayListFeed::__init__()"
+		print("[YTB] YouTubePlayListFeed::__init__()")
 		self.feed = feed
 		self.entries = []
 		self.update()
 
 
 	def update(self):
-		print "[YTB] YouTubePlayListFeed::update()"
+		print("[YTB] YouTubePlayListFeed::update()")
 		for entry in self.feed.entry:
 			self.entries.append(YouTubePlaylistEntry(entry))
 
 
 	def getTitle(self):
-		print "[YTB] YouTubePlayListFeed::getTitle()"
+		print("[YTB] YouTubePlayListFeed::getTitle()")
 		return self.feed.title.text
 
 
 	def getEntries(self):
-		print "[YTB] YouTubePlayListFeed::getEntries()"
+		print("[YTB] YouTubePlayListFeed::getEntries()")
 		return self.entries
 
 
 class YouTubePlaylistEntry():
 	def __init__(self, entry):
-		print "[YTB] YouTubePlaylistEntry::__init__()"
+		print("[YTB] YouTubePlaylistEntry::__init__()")
 		self.entry = entry
 
 
 	def getTitle(self):
-		print "[YTB] YouTubePlaylistEntry::getTitle()"
+		print("[YTB] YouTubePlaylistEntry::getTitle()")
 		return self.entry.title.text
 
 
 	def getDescription(self):
-		print "[YTB] YouTubePlaylistEntry::getDescription()"
+		print("[YTB] YouTubePlaylistEntry::getDescription()")
 		return self.entry.description.text
 
 
 	def getFeed(self, index = 0):
-		print "[YTB] YouTubePlaylistEntry::getFeed()"
+		print("[YTB] YouTubePlaylistEntry::getFeed()")
 		return self.entry.feed_link[index].href
 
 	
 	def getSelfFeed(self):
-		print "[YTB] YouTubeFeed::getSelfFeed()"
+		print("[YTB] YouTubeFeed::getSelfFeed()")
 		for link in self.entry.link:
 			if link.rel == "self":
 				return link.href
@@ -411,20 +410,20 @@
 
 class YouTubePlaylistVideoFeed(YouTubeFeed):
 	def __init__(self, feed):
-		print "[YTB] YouTubePlaylistVideoFeed::__init__()"
+		print("[YTB] YouTubePlaylistVideoFeed::__init__()")
 		YouTubeFeed.__init__(self, feed)
 
 
 	def update(self):
-		print "[YTB] YouTubePlaylistVideoFeed::update()"
+		print("[YTB] YouTubePlaylistVideoFeed::update()")
 		sequenceNumber = 1
-		print self.feed.entry
+		print(self.feed.entry)
 		for entry in self.feed.entry:
 			self.entries.append(YouTubePlaylistVideoEntry(self, entry, sequenceNumber))
 			sequenceNumber = sequenceNumber + 1
 
 	def getFeed(self):
-		print "[YTB] YouTubeFeed::getSelfFeed()"
+		print("[YTB] YouTubeFeed::getSelfFeed()")
 		for link in self.feed.link:
 			if link.rel == "feed":
 				return link.href
@@ -433,7 +432,7 @@
 
 class YouTubePlaylistVideoEntry(YouTubeEntry):
 	def __init__(self, feed, entry, sequenceNumber):
-		print "[YTB] YouTubePlaylistVideoEntry::__init__()"
+		print("[YTB] YouTubePlaylistVideoEntry::__init__()")
 		YouTubeEntry.__init__(self, feed, entry, sequenceNumber)
 
 
@@ -442,7 +441,7 @@
 
 
 	def getSelf(self):
-		print "[YTB] YouTubePlaylistVideoEntry::getSelfFeed()"
+		print("[YTB] YouTubePlaylistVideoEntry::getSelfFeed()")
 		for link in self.entry.link:
 			if link.rel == "self":
 				return link.href
@@ -462,23 +461,23 @@
 #	ClientId: ytapi-VolkerChristian-YouTubePlayer-pq3mrg1o-0
 #	DeveloperKey: AI39si7t0WNyg_tvjBPdRIvBfaUA_XrTY1LNzfjLgCn8A_m92YKtWTcR_auEmI5gKGitJb4SskrjxJSmRc3yhQ4YlHTBAzPSig
 	def __init__(self):
-		print "[YTB] YouTubeInterface::__init__()"
+		print("[YTB] YouTubeInterface::__init__()")
 
 
 	def open(self):
 		self.ytService = gdata.youtube.service.YouTubeService()
-		print "[YTB] YouTubeInterface::open()"
+		print("[YTB] YouTubeInterface::open()")
 		self.loggedIn = False
 
 
 	def close(self):
-		print "[YTB] YouTubeInterface::close()"
+		print("[YTB] YouTubeInterface::close()")
 		del self.ytService
 		self.loggedIn = False
 
 
 	def login(self, user):
-		print "[YTB] YouTubeInterface::login()"
+		print("[YTB] YouTubeInterface::login()")
 		ret = False
 		if user is not None:
 			# http://code.google.com/apis/youtube/developers_guide_python.html#ClientLogin
@@ -504,7 +503,7 @@
 	def search(self, searchTerms, startIndex = 1, maxResults = 25,
 					orderby = "relevance", time = "all_time", racy = "include", 
 					author = "", lr = "", categories = "", sortOrder = "ascending", format = "6"):
-		print "[YTB] YouTubeInterface::search()"
+		print("[YTB] YouTubeInterface::search()")
 		query = gdata.youtube.service.YouTubeVideoQuery()
 		query.vq = searchTerms
 		query.orderby = orderby
@@ -534,7 +533,7 @@
 
 
 	def getUserPlaylistFeed(self, playlistEntry):
-		print "[YTB] getUserPlaylistFeed: ", playlistEntry.getFeed()
+		print("[YTB] getUserPlaylistFeed: ", playlistEntry.getFeed())
 		return YouTubePlaylistVideoFeed(self.ytService.GetYouTubePlaylistVideoFeed(playlistEntry.getFeed()))
 
 
@@ -542,7 +541,7 @@
 		response = self.ytService.AddVideoEntryToFavorites(entry.entry)
 		# The response, if succesfully posted is a YouTubeVideoEntry
 		if isinstance(response, gdata.youtube.YouTubeVideoEntry):
-			print "[YTB] Video successfully added to favorites"
+			print("[YTB] Video successfully added to favorites")
 			return response
 		else:
 			return None
@@ -551,7 +550,7 @@
 	def removeFromFavorites(self, entry):
 		response = self.ytService.DeleteVideoEntryFromFavorites(entry.getYouTubeId())
 		if response is True:
-			print "[YTB] Video deleted from favorites"
+			print("[YTB] Video deleted from favorites")
 		return response
 
 
@@ -573,38 +572,38 @@
 
 	
 	def removeFromPlaylist(self, playlistVideoEntry):
-		print "[YTB] Removing from Playlist"
+		print("[YTB] Removing from Playlist")
 		response = self.ytService.Delete(playlistVideoEntry.getSelf())
 		if response:
-			print "[YTB] Successfull deleted"
+			print("[YTB] Successfull deleted")
 		else:
-			print "[YTB] Delete unsuccessfull"
+			print("[YTB] Delete unsuccessfull")
 		return response
 
 
 	def addToPlaylist(self, playlistEntry, videoEntry):
-		print "[YTB] Adding to Playlist"
+		print("[YTB] Adding to Playlist")
 		playlistUri = playlistEntry.getFeed()
 		response = self.ytService.AddPlaylistVideoEntryToPlaylist(
 						playlistUri, videoEntry.getYouTubeId(), videoEntry.getTitle(), videoEntry.getDescription())
 		if isinstance(response, gdata.youtube.YouTubePlaylistVideoEntry):
-			print "[YTB] Video added"
+			print("[YTB] Video added")
 			return response
 		else:
 			return None
 
 
 def fetchFailed(string, cookie):
-	print "[YTB] fetchFailed(): ", string
+	print("[YTB] fetchFailed(): ", string)
 	if os.path.exists(cookie["file"]):
 		os.remove(cookie["file"])
 	cookie["callback"](cookie["entry"])
 
 
 def fetchFinished(string, cookie):
-	print "[YTB] fetchFinished(): ", string
+	print("[YTB] fetchFinished(): ", string)
 	if os.path.exists(cookie["file"]):
-		print "Loading filename %s" % cookie["file"]
+		print("Loading filename %s" % cookie["file"])
 		cookie["entry"].thumbnail[str(cookie["index"])] = LoadPixmap(cookie["file"])
 		os.remove(cookie["file"])
 	cookie["callback"](cookie["entry"])
--- a/youtubeplayer/src/YouTubeList.py
+++ b/youtubeplayer/src/YouTubeList.py
@@ -19,7 +19,7 @@
 #    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
 ############################################################################
 
-from YouTubeInterface import interface
+from .YouTubeInterface import interface
 
 from Components.ActionMap import ActionMap
 from Components.MenuList import MenuList
@@ -44,17 +44,17 @@
 from Plugins.Extensions.VlcPlayer.VlcServer import VlcServer
 from Plugins.Extensions.VlcPlayer.VlcServerList import VlcServerListScreen
 
-from YouTubeContextMenu import YouTubeEntryContextMenu, YouTubeEntryContextMenuList
+from .YouTubeContextMenu import YouTubeEntryContextMenu, YouTubeEntryContextMenuList
 
 from Tools.BoundFunction import boundFunction
 from Tools.HardwareInfo import HardwareInfo
 
-from YouTubePlayer import YouTubePlayer
-from DirectYouTubePlayer import DirectYouTubePlayer
-
-from YouTubeUserConfig import youTubeUserConfig
-from YouTubeUserList import YouTubeUserListScreen
-from YouTubePlayList import YouTubePlaylistScreen
+from .YouTubePlayer import YouTubePlayer
+from .DirectYouTubePlayer import DirectYouTubePlayer
+
+from .YouTubeUserConfig import youTubeUserConfig
+from .YouTubeUserList import YouTubeUserListScreen
+from .YouTubePlayList import YouTubePlaylistScreen
 
 #from Screens.InfoBar import MoviePlayer
 #from enigma import eServiceReference
@@ -143,7 +143,7 @@
 		Screen.setTitle(self, self.entry.getTitle())
 		if self.entry.getRatingAverage() != "not available":
 			ratingStars = int(round(20 * float(self.entry.getRatingAverage()), 0))
-			print "[YTB] Rating: ", ratingStars, "    ", self["stars"].getRange()
+			print("[YTB] Rating: ", ratingStars, "    ", self["stars"].getRange())
 			self["stars"].setValue(ratingStars)
 		else:
 			self["stars"].hide()
@@ -273,7 +273,7 @@
 
 
 	def insertEntry(self, entry):
-		print "[YTB] YouTubeTest::updateFinished()"
+		print("[YTB] YouTubeTest::updateFinished()")
 		self.list.append(YouTubeEntryComponent(entry))
 		self.list.sort(cmp = lambda x, y : cmp(x[0].sequenceNumber, y[0].sequenceNumber))
 		currentlyShown = "%d" % len(self.list)
@@ -310,7 +310,7 @@
 
 		
 	def searchFeedReal(self, searchContext):
-		print "[YTB] searchFeedReal"
+		print("[YTB] searchFeedReal")
 		try:
 			feed = interface.search(searchContext.searchTerm.value, 
 					orderby = searchContext.orderBy.value,
@@ -320,7 +320,7 @@
 					categories = [ searchContext.categories.value ],
 					sortOrder = searchContext.sortOrder.value,
 					format = config.plugins.youtubeplayer.quality)
-		except Exception, e:
+		except Exception as e:
 			feed = None
 			self.session.open(MessageBox, _("Error querying feed for search term %s:\n%s" %
 					(searchContext.searchTerm.value, e)), MessageBox.TYPE_ERROR)
@@ -337,7 +337,7 @@
 	def loadPlaylistFeedReal(self, playlist):
 		try:
 			feed = interface.getUserPlaylistFeed(playlist)
-		except Exception, e:
+		except Exception as e:
 			feed = None
 			self.session.open(MessageBox, _("Error querying playlist-feed for playlist %s:\n%s" %
 					(playlist.getTitle(), e)), MessageBox.TYPE_ERROR)
@@ -353,7 +353,7 @@
 	def loadFavoritesFeedReal(self, userName = "default"):
 		try:
 			feed = interface.getUserFavoritesFeed(userName)
-		except Exception, e:
+		except Exception as e:
 			feed = None
 			self.session.open(MessageBox, _("Error querying favorites feed:\n%s" %
 					e), MessageBox.TYPE_ERROR)
@@ -374,7 +374,7 @@
 	def loadFeedReal(self, feedUrl, feedName, append = False, addToHistory = True):
 		try:
 			feed = interface.getFeed(feedUrl)
-		except Exception, e:
+		except Exception as e:
 			feed = None
 			self.session.open(MessageBox, _("Error querying feed %s:\n%s" %
 					(feedName, e)), MessageBox.TYPE_ERROR)
@@ -483,7 +483,7 @@
 	def addToFavoritesReal(self):
 		try:
 			interface.addToFavorites(self["list"].getCurrent()[0])
-		except Exception, e:
+		except Exception as e:
 			self.session.open(MessageBox, _("Error adding video to favorites:\n%s" %
 					e), MessageBox.TYPE_ERROR)
 
@@ -509,7 +509,7 @@
 			if interface.removeFromFavorites(self["list"].getCurrent()[0]):
 				self.list.remove(self["list"].getCurrent())
 				self["list"].setList(self.list)
-		except Exception, e:
+		except Exception as e:
 			self.session.open(MessageBox, _("Error removing video from favorites:\n%s" %
 					e), MessageBox.TYPE_ERROR)
 
@@ -535,7 +535,7 @@
 			if interface.removeFromPlaylist(self["list"].getCurrent()[0]):
 				self.list.remove(self["list"].getCurrent())
 				self["list"].setList(self.list)
-		except Exception, e:
+		except Exception as e:
 			self.session.open(MessageBox, _("Error removing video from playlist:\n%s" %
 					e), MessageBox.TYPE_ERROR)
 
@@ -560,7 +560,7 @@
 		if playlist is not None:
 			try:
 				interface.addToPlaylist(playlist, self["list"].getCurrent()[0])
-			except Exception, e:
+			except Exception as e:
 				self.session.open(MessageBox, _("Error adding video to playlist:\n%s" %
 					e), MessageBox.TYPE_ERROR)
 
@@ -620,7 +620,7 @@
 # script that will automatically add &fmt=18 onto the end
 # of each YouTube URL.
 	def play(self):
-		print "[YTB] Play()"
+		print("[YTB] Play()")
 		youTubeEntry = self["list"].getCurrent()[0]
 		mrl = self.getVideoUrl(youTubeEntry, config.plugins.youtubeplayer.quality.value)
 		if mrl is not None:
@@ -641,11 +641,11 @@
 			self.currentServer.play(self.session, mrl, youTubeEntry.getTitle(), self,
 								player = boundFunction(YouTubePlayer, contextMenuEntries = entries, infoCallback = self.showVideoInfo, name = self["list"].getCurrent()[0].getTitle()))
 		else:
-			print "[YTB] No valid flv-mrl found"
+			print("[YTB] No valid flv-mrl found")
 
 
 	def playDirect(self):
-		print "[YTB] PlayDirect()"
+		print("[YTB] PlayDirect()")
 		youTubeEntry = self["list"].getCurrent()[0]
 		mrl = self.getVideoUrl(youTubeEntry, config.plugins.youtubeplayer.quality.value)
 		if mrl is not None:
@@ -667,7 +667,7 @@
 
 			self.session.open(DirectYouTubePlayer, mrl, youTubeEntry.getTitle(), self, contextMenuEntries = entries, infoCallback = self.showVideoInfo, name = self["list"].getCurrent()[0].getTitle())
 		else:
-			print "[YTB] No valid flv-mrl found"
+			print("[YTB] No valid flv-mrl found")
 			
 
 	def getNextFile(self):
--- a/youtubeplayer/src/YouTubePlayList.py
+++ b/youtubeplayer/src/YouTubePlayList.py
@@ -18,8 +18,8 @@
 #    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
 ############################################################################
 
-from YouTubeInterface import interface
-from YouTubeAddPlayList import YouTubeAddPlaylistDialog
+from .YouTubeInterface import interface
+from .YouTubeAddPlayList import YouTubeAddPlaylistDialog
 from Components.ActionMap import ActionMap
 from Components.MenuList import MenuList
 from Components.Label import Label
@@ -75,7 +75,7 @@
 			feed = interface.getPlaylistFeed()
 			for entry in feed.getEntries():
 				self.list.append(YouTubePlaylistEntryComponent(entry))
-		except Exception, e:
+		except Exception as e:
 			self.session.open(MessageBox, _("Error loading playlists:\n%s" %
 					e), MessageBox.TYPE_ERROR)
 		self["list"].setList(self.list)
--- a/youtubeplayer/src/YouTubePlayer.py
+++ b/youtubeplayer/src/YouTubePlayer.py
@@ -21,7 +21,7 @@
 from Plugins.Extensions.VlcPlayer.VlcPlayer import VlcPlayer
 from Components.ActionMap import ActionMap
 
-from YouTubeContextMenu import YouTubeEntryContextMenu, YouTubeEntryContextMenuList
+from .YouTubeContextMenu import YouTubeEntryContextMenu, YouTubeEntryContextMenuList
 
 
 class YouTubePlayer(VlcPlayer):
--- a/youtubeplayer/src/YouTubeSearchDialog.py
+++ b/youtubeplayer/src/YouTubeSearchDialog.py
@@ -29,7 +29,7 @@
 from Components.ActionMap import ActionMap
 from Components.Button import Button
 
-from ConfigTextWithSuggestions import ConfigTextWithSuggestions
+from .ConfigTextWithSuggestions import ConfigTextWithSuggestions
 
 from . import _
 
--- a/youtubeplayer/src/YouTubeUserConfig.py
+++ b/youtubeplayer/src/YouTubeUserConfig.py
@@ -29,7 +29,7 @@
 from Components.config import config
 from Components.config import getConfigListEntry
 from Screens.Screen import Screen
-from YouTubeInterface import YouTubeUser
+from .YouTubeInterface import YouTubeUser
 
 from . import _
 
@@ -91,7 +91,7 @@
 
 	# Edit has been canceled
 	def cancel(self, user):
-		for element in user.getCfg().dict().values():
+		for element in list(user.getCfg().dict().values()):
 			element.cancel()
 
 	def getUserlist(self):
--- a/youtubeplayer/src/YouTubeUserList.py
+++ b/youtubeplayer/src/YouTubeUserList.py
@@ -26,8 +26,8 @@
 from Screens.Screen import Screen
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS
 from Tools.LoadPixmap import LoadPixmap
-from YouTubeUserConfig import youTubeUserConfig
-from YouTubeUserConfig import YouTubeUserConfigScreen
+from .YouTubeUserConfig import youTubeUserConfig
+from .YouTubeUserConfig import YouTubeUserConfigScreen
 from enigma import eListboxPythonMultiContent, RT_HALIGN_LEFT, gFont
 
 from . import _
--- a/youtubeplayer/src/__init__.py
+++ b/youtubeplayer/src/__init__.py
@@ -18,7 +18,7 @@
 def _(txt):
     t = gettext.dgettext("YouTubePlayer", txt)
     if t == txt:
-        print "[YTB] fallback to default translation for", txt
+        print("[YTB] fallback to default translation for", txt)
         t = gettext.gettext(txt)
     return t
 
--- a/youtubeplayer/src/plugin.py
+++ b/youtubeplayer/src/plugin.py
@@ -20,14 +20,14 @@
 
 from Plugins.Plugin import PluginDescriptor
 
-from YouTubeList import YouTubeListScreen
-from YouTubePlayList import YouTubePlaylistScreen
-from YouTubeSearchDialog import YouTubeSearchDialog, SEARCH, STDFEEDS, PLAYLISTS, FAVORITES, CANCEL
-from YouTubeUserList import YouTubeUserListScreen
-from YouTubeUserConfig import youTubeUserConfig
-from YouTubeStdFeedSelection import YouTubeStdFeedSelectionScreen
-from YouTubeInterface import interface, YouTubeInterface
-from SkinLoader import loadPluginSkin
+from .YouTubeList import YouTubeListScreen
+from .YouTubePlayList import YouTubePlaylistScreen
+from .YouTubeSearchDialog import YouTubeSearchDialog, SEARCH, STDFEEDS, PLAYLISTS, FAVORITES, CANCEL
+from .YouTubeUserList import YouTubeUserListScreen
+from .YouTubeUserConfig import youTubeUserConfig
+from .YouTubeStdFeedSelection import YouTubeStdFeedSelectionScreen
+from .YouTubeInterface import interface, YouTubeInterface
+from .SkinLoader import loadPluginSkin
 from Screens.MessageBox import MessageBox
 
 import gettext
@@ -36,7 +36,7 @@
 def _(txt):
 	t = gettext.dgettext("YouTube", txt)
 	if t == txt:
-		print "[YTB] fallback to default translation for", txt
+		print("[YTB] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
@@ -52,7 +52,7 @@
 
 
 	def searchDialogClosed(self, what, searchContext = None):
-		print "[YTB] searchDialogClosed: ", what
+		print("[YTB] searchDialogClosed: ", what)
 		if what == SEARCH:
 			dlg = self.session.openWithCallback(self.youTubeListScreenClosed, YouTubeListScreen)
 			dlg.searchFeed(searchContext)
@@ -85,11 +85,11 @@
 
 	def openPlaylists(self, loginState):
 		if loginState == YouTubeUserListScreen.LOGIN_SUCCESS:
-			print "[YTB] logged in"
+			print("[YTB] logged in")
 			dlg = self.session.openWithCallback(self.playlistChoosen, YouTubePlaylistScreen)
 			dlg.loadPlaylist()
 		elif loginState == YouTubeUserListScreen.LOGIN_FAILED:
-			print "[YTB] not logged in"
+			print("[YTB] not logged in")
 			self.session.openWithCallback(self.backToSearchDialog, MessageBox, _("Login not successful"), MessageBox.TYPE_INFO)
 		else:
 			self.backToSearchDialog()
@@ -105,11 +105,11 @@
 
 	def openFavorites(self, loginState):
 		if loginState == YouTubeUserListScreen.LOGIN_SUCCESS:
-			print "[YTB] logged in"
+			print("[YTB] logged in")
 			dlg = self.session.openWithCallback(self.youTubeListScreenClosed, YouTubeListScreen)
 			dlg.loadFavoritesFeed("default")
 		elif loginState == YouTubeUserListScreen.LOGIN_FAILED:
-			print "[YTB] not logged in"
+			print("[YTB] not logged in")
 			self.session.openWithCallback(self.backToSearchDialog, MessageBox, _("Login not successful"), MessageBox.TYPE_INFO)
 		else:
 			self.backToSearchDialog()
@@ -129,7 +129,7 @@
 def main(session, **kwargs):
 	try:
 		youTubeManager = YouTubeManager(session)
-	except Exception, e:
+	except Exception as e:
 		session.open(MessageBox, _("Error contacting YouTube:\n%s" % e), MessageBox.TYPE_ERROR)
 	else:
 		youTubeManager.openSearchDialog()
--- a/webbouqueteditor/src/plugin.py
+++ b/webbouqueteditor/src/plugin.py
@@ -8,7 +8,7 @@
 from twisted.web import static
 from twisted.python import util
 #
-from WebChilds.WebUploadResource import WebUploadResource
+from .WebChilds.WebUploadResource import WebUploadResource
 from enigma import eEnv
 
 if hasattr(static.File, 'render_GET'):
--- a/webbouqueteditor/src/WebChilds/WebUploadResource.py
+++ b/webbouqueteditor/src/WebChilds/WebUploadResource.py
@@ -26,7 +26,7 @@
 		if cnt <= 0:
 			try:
 				os_remove(FILENAME)
-			except OSError, oe:
+			except OSError as oe:
 				pass
 			result = """<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n
 				<e2simplexmlresult>\n
--- a/webbouqueteditor/src/WebComponents/Sources/BouquetEditor.py
+++ b/webbouqueteditor/src/WebComponents/Sources/BouquetEditor.py
@@ -40,7 +40,7 @@
 		
 
 	def handleCommand(self, cmd):
-		print "[WebComponents.BouquetEditor] handleCommand with cmd = ", cmd
+		print("[WebComponents.BouquetEditor] handleCommand with cmd = ", cmd)
 		if self.func is self.ADD_BOUQUET:
 			self.result = self.addToBouquet(cmd)
 		elif self.func is self.MOVE_BOUQUET:
@@ -73,7 +73,7 @@
 			self.result = ( False, "one two three four unknown command" )
 
 	def addToBouquet(self, param):
-		print "[WebComponents.BouquetEditor] addToBouquet with param = ", param
+		print("[WebComponents.BouquetEditor] addToBouquet with param = ", param)
 		bName = param["name"]
 		if bName is None:
 			return (False, "No bouquet name given!")
@@ -103,7 +103,7 @@
 						if services is not None:
 							for service in services:
 								if mutableBouquet.addService(service):
-									print "add", service.toString(), "to new bouquet failed"
+									print("add", service.toString(), "to new bouquet failed")
 						mutableBouquet.flushChanges()
 						self.setRoot(self.bouquet_rootstr)
 						return (True, "Bouquet %s created." % bName)
@@ -119,7 +119,7 @@
 
 
 	def addProviderToBouquetlist(self, param):
-		print "[WebComponents.BouquetEditor] addProviderToBouquet with param = ", param
+		print("[WebComponents.BouquetEditor] addProviderToBouquet with param = ", param)
 		refstr = sref = param["sProviderRef"]
 		if refstr is None:
 			return (False, "No provider given!")
@@ -135,7 +135,7 @@
 		return self.addBouquet(providerName, mode, services and services.getContent('R', True))
 
 	def removeBouquet(self, param):
-		print "[WebComponents.BouquetEditor] removeBouquet with param = ", param
+		print("[WebComponents.BouquetEditor] removeBouquet with param = ", param)
 		refstr = sref = param["sBouquetRef"]
 		if refstr is None:
 			return (False, "No bouquet name given!")
@@ -144,7 +144,7 @@
 			if param["mode"] is not None:
 				mode = int(param["mode"])
 		
-		if param.has_key("BouquetRefRoot"):
+		if "BouquetRefRoot" in param:
 			bouquet_root = param["BouquetRefRoot"] # only when removing alternative
 		else:
 			bouquet_root = None
@@ -180,7 +180,7 @@
 			return (False, "Error: Bouquet %s could not deleted, OSError." % filename)
 
 	def moveBouquet(self, param):
-		print "[WebComponents.BouquetEditor] moveBouquet with param = ", param
+		print("[WebComponents.BouquetEditor] moveBouquet with param = ", param)
 		sBouquetRef = param["sBouquetRef"]
 		if sBouquetRef is None:
 			return (False, "No bouquet name given!")
@@ -205,7 +205,7 @@
 			return (False, "Bouquet %s can not be moved." % self.getName(ref))
 			
 	def removeService(self, param):
-		print "[WebComponents.BouquetEditor] removeService with param = ", param
+		print("[WebComponents.BouquetEditor] removeService with param = ", param)
 		sBouquetRef = param["sBouquetRef"]
 		if sBouquetRef is None:
 			return (False, "No bouquet given!")
@@ -235,7 +235,7 @@
 		return (False, "Service %s can not be removed." % self.getName(ref))
 
 	def moveService(self, param):
-		print "[WebComponents.BouquetEditor] moveService with param = ", param
+		print("[WebComponents.BouquetEditor] moveService with param = ", param)
 		sBouquetRef = param["sBouquetRef"]
 		if sBouquetRef is None:
 			return (False, "No bouquet given!")
@@ -261,7 +261,7 @@
 		return (False, "Service can not be moved.")
 
 	def addServiceToBouquet(self, param):
-		print "[WebComponents.BouquetEditor] addService with param = ", param
+		print("[WebComponents.BouquetEditor] addService with param = ", param)
 		sBouquetRef = param["sBouquetRef"]
 		if sBouquetRef is None:
 			return (False, "No bouquet given!")
@@ -295,7 +295,7 @@
 		return (False, "This service can not be added.")
 		
 	def addMarkerToBouquet(self, param):
-		print "[WebComponents.BouquetEditor] addMarkerToBouquet with param = ", param
+		print("[WebComponents.BouquetEditor] addMarkerToBouquet with param = ", param)
 		sBouquetRef = param["sBouquetRef"]
 		if sBouquetRef is None:
 			return (False, "No bouquet given!")
@@ -415,7 +415,7 @@
 					if mutableAlternatives:
 						mutableAlternatives.setListName(name)
 						if mutableAlternatives.addService(cur_ref):
-									print "add", cur_ref.toString(), "to new alternatives failed"
+									print("add", cur_ref.toString(), "to new alternatives failed")
 						mutableAlternatives.flushChanges()
 						self.setRoot(sBouquetRef)
 						sCurrentRef = sref # currentRef is now an alternative (bouquet)
@@ -441,7 +441,7 @@
 			return returnValue
 			
 	def removeAlternativeServices(self, param):
-		print "[WebComponents.BouquetEditor] removeAlternativeServices with param = ", param
+		print("[WebComponents.BouquetEditor] removeAlternativeServices with param = ", param)
 		sBouquetRef = param["sBouquetRef"]
 		if sBouquetRef is None:
 			return (False, "No bouquet given!")
@@ -461,11 +461,11 @@
 				mutableBouquetList = self.getMutableList(eServiceReference(sBouquetRef))
 				if mutableBouquetList is not None:
 					if mutableBouquetList.addService(first_in_alternative, cur_service.ref):
-						print "couldn't add first alternative service to current root"
-				else:
-					print "couldn't edit current root"
-			else:
-				print "remove empty alternative list"
+						print("couldn't add first alternative service to current root")
+				else:
+					print("couldn't edit current root")
+			else:
+				print("remove empty alternative list")
 		else:
 			return (False, "Service is not an alternative.")
 		new_param = {}
--- a/webbouqueteditor/src/WebComponents/Sources/SatellitesList.py
+++ b/webbouqueteditor/src/WebComponents/Sources/SatellitesList.py
@@ -25,7 +25,7 @@
 		return func(self.mode)
 
 	def buildList(self, mode):
-		print "[WebComponents.SatellitesList] buildList with param = %d" % mode
+		print("[WebComponents.SatellitesList] buildList with param = %d" % mode)
 		if mode == MODE_TV:
 			s_type = service_types_tv
 		else:
--- a/webbouqueteditor/src/WebComponents/Sources/ServiceList.py
+++ b/webbouqueteditor/src/WebComponents/Sources/ServiceList.py
@@ -65,9 +65,9 @@
 		return ref in self.getServicesAsList("S")
 
 	def handleCommand(self, cmd):
-		print "ServiceList handle command"
+		print("ServiceList handle command")
 		if self.validate_commands and not self.validateReference(cmd):
-			print "Service reference did not validate!"
+			print("Service reference did not validate!")
 			return
 		ref = eServiceReference(cmd)
 		if self.command_func:
--- a/webcamviewer/src/FTPDownloader.py
+++ b/webcamviewer/src/FTPDownloader.py
@@ -89,7 +89,7 @@
 		if self.file is None:
 			try:
 				self.file, offset = self.openFile()
-			except IOError, ie:
+			except IOError as ie:
 				self.connectionFailed()
 				return
 
@@ -106,7 +106,7 @@
 			self.file.seek(0, SEEK_END)
 
 			self.file.write(data)
-		except IOError, ie:
+		except IOError as ie:
 			self.connectionFailed()
 
 	def ftpFinish(self, code = 0, message = None):
--- a/webcamviewer/src/PictureScreen.py
+++ b/webcamviewer/src/PictureScreen.py
@@ -6,10 +6,10 @@
 from Components.Pixmap import Pixmap
 from Components.ActionMap import ActionMap
 
-from FTPDownloader import FTPDownloader
+from .FTPDownloader import FTPDownloader
 from twisted.web.client import HTTPDownloader
 from twisted.internet import reactor
-from urlparse import urlparse, urlunparse
+from urllib.parse import urlparse, urlunparse
 
 def _parse(url, defaultPort = None):
 	url = url.strip()
@@ -85,7 +85,7 @@
 		authHeader = "Basic " + basicAuth.strip()
 		AuthHeaders = {"Authorization": authHeader}
 
-		if kwargs.has_key("headers"):
+		if "headers" in kwargs:
 			kwargs["headers"].update(AuthHeaders)
 		else:
 			kwargs["headers"] = AuthHeaders
@@ -133,7 +133,7 @@
 			 "green": self.AutoReloaderSwitch,
 			 "yellow": self.pause,
 			 "red": self.prev,
-			 "blue": self.next,
+			 "blue": self.__next__,
 			 }, -1)
 
 		self.onLayoutFinish.append(self.do)
@@ -174,16 +174,16 @@
 	def fetchFile(self, url):
 		self.processing = True
 		self.setTitle("loading File")
-		print "fetching URL", url
+		print("fetching URL", url)
 		self.sourcefile = "/tmp/loadedfile"
 		download(url, self.sourcefile).addCallback(self.fetchFinished).addErrback(self.fetchFailed)
 
 	def fetchFailed(self,string):
-		print "fetch failed", string
+		print("fetch failed", string)
 		self.setTitle("fetch failed: "+string)
 
 	def fetchFinished(self,string):
-		print "fetching finished"
+		print("fetching finished")
 		self.setPicture(self.sourcefile)
 
 	def setPicture(self, string):
@@ -205,7 +205,7 @@
 		elif self.slideshowcallback is not None:
 				self.closetimer = eTimer()
 				self.closetimer.timeout.get().append(self.slideshowcallback)
-				print "waiting", config.plugins.pictureviewer.slideshowtime.value, "seconds for next picture"
+				print("waiting", config.plugins.pictureviewer.slideshowtime.value, "seconds for next picture")
 				if not self.paused:
 					self.closetimer.start(int(config.plugins.pictureviewer.slideshowtime.value))
 
@@ -232,7 +232,7 @@
 			self.paused = True
 		self.slideshowcallback(prev = True)
 
-	def next(self):
+	def __next__(self):
 		if not self.slideshowcallback:
 			return
 		if not self.paused:
--- a/webcamviewer/src/WebcamTravel.py
+++ b/webcamviewer/src/WebcamTravel.py
@@ -12,7 +12,7 @@
 
 from enigma import eListboxPythonMultiContent, RT_HALIGN_LEFT, RT_HALIGN_RIGHT,ePicLoad,eTimer
 
-from PictureScreen import PictureScreen
+from .PictureScreen import PictureScreen
 
 from twisted.web.client import getPage,downloadPage
 #from twisted.internet import reactor
@@ -23,7 +23,7 @@
 from os.path import exists as os_path_exists
 from datetime import datetime
 
-from urllib import quote as urllib_quote
+from urllib.parse import quote as urllib_quote
 #########################################
 
 class TravelWebcamviewer(Screen):
@@ -114,7 +114,7 @@
 	def onOK(self):
 		selection = self["list"].getCurrent()
 		if selection:
-			print selection
+			print(selection)
 			self.session.open(PictureScreen,selection[0].title,selection[0].pic_url)
 
 	def onRed(self):
@@ -143,7 +143,7 @@
 			self.finish_loading = False
 
 	def onDataLoaded(self,list,count=0,page=0,per_page=0):
-		print "onDataLoaded",list,count,page,per_page
+		print("onDataLoaded",list,count,page,per_page)
 		self.count =count
 		self.page = page
 		self.per_page = per_page
@@ -160,12 +160,12 @@
 			downloadPage(cam.thumbnail_url,"/tmp/"+str(cam.webcamid)+"_thumb.jpg").addCallback(self.fetchFinished,cam.webcamid).addErrback(self.fetchFailed,cam.webcamid)
 
 	def fetchFailed(self,string,webcamid):
-		print "fetchFailed",webcamid,string.getErrorMessage()
+		print("fetchFailed",webcamid,string.getErrorMessage())
 		self.buildEntryStatus(string.getErrorMessage())
 		self.pixmaps_to_load.remove(webcamid)
 
 	def fetchFinished(self,x,webcamid):
-		print "fetchFinished",x,webcamid
+		print("fetchFinished",x,webcamid)
 		self.pixmaps_to_load.remove(webcamid)
 
 		sc = AVSwitch().getFramebufferScale()
@@ -175,14 +175,14 @@
 			self.picloads[webcamid].setPara((self["thumbnail"].instance.size().width(), self["thumbnail"].instance.size().height(), sc[0], sc[1], False, 1, "#00000000"))
 			self.picloads[webcamid].startDecode("/tmp/"+str(webcamid)+"_thumb.jpg")
 		else:
-			print "[decodePic] Thumbnail file NOT FOUND !!!-->:",thumbnailFile
+			print("[decodePic] Thumbnail file NOT FOUND !!!-->:",thumbnailFile)
 
 	def finish_decode(self,webcamid,info):
-		print "finish_decode - of webcamid", webcamid,info
+		print("finish_decode - of webcamid", webcamid,info)
 		ptr = self.picloads[webcamid].getData()
 		if ptr != None:
 			self.thumbnails[webcamid] = ptr
-			print "removing file"
+			print("removing file")
 			os_remove("/tmp/"+str(webcamid)+"_thumb.jpg")
 			del self.picloads[webcamid]
 			self.timer_default.start(1)
@@ -191,7 +191,7 @@
 
 	def buildStatusList(self):
 		self.timer_status.stop()
-		print "buildStatusList"
+		print("buildStatusList")
 		statuslist = []
 		statuslist.append(self.buildEntryStatus("loading data"))
 
@@ -208,7 +208,7 @@
 		if len(self.picloads) != 0:
 			return
 		self.timer_default.stop()
-		print "buildCamList"
+		print("buildCamList")
 		statuslist = []
 		for cam in self.list:
 			try:
@@ -280,9 +280,9 @@
 	def get(self,method,callback,errorback,**kwargs):
 		url = "http://"+self.URL_HOST+"/"+self.URL_FORMAT+"?method="+method+"&devid="+self.APIKEY
 		for key in kwargs:
-			print key,kwargs[key]
+			print(key,kwargs[key])
 			url +="&"+str(key)+"="+str(kwargs[key])
-		print url
+		print(url)
 		cb = getPage(url).addCallback(callback)
 		if errorback!=None:
 			cb.addErrback(errorback)
@@ -290,7 +290,7 @@
 			cb.addErrback(self.loadingFailed)
 
 	def loadingFailed(self,reason):
-		print "loadingFailed",reason
+		print("loadingFailed",reason)
 
 	def list_popular(self,callback,_page=1,_per_page=30):
 		"""	wct.webcams.list_popular
--- a/webcamviewer/src/WebcamViewConfig.py
+++ b/webcamviewer/src/WebcamViewConfig.py
@@ -31,13 +31,13 @@
 		}, -2)
 
 	def save(self):
-		print "saving"
+		print("saving")
 		for x in self["config"].list:
 			x[1].save()
 		self.close(True,self.session)
 
 	def cancel(self):
-		print "cancel"
+		print("cancel")
 		for x in self["config"].list:
 			x[1].cancel()
 		self.close(False,self.session)
--- a/webcamviewer/src/plugin.py
+++ b/webcamviewer/src/plugin.py
@@ -31,9 +31,9 @@
 import xml.dom.minidom
 
 ### my
-from WebcamViewConfig import WebcamViewerMenu
-from PictureScreen import PictureScreen
-from WebcamTravel import TravelWebcamviewer
+from .WebcamViewConfig import WebcamViewerMenu
+from .PictureScreen import PictureScreen
+from .WebcamTravel import TravelWebcamviewer
 ###
 myname = "Webcam/Picture Viewer"
 myversion = "1.1"
@@ -195,10 +195,10 @@
 				self.wbviewer.do()
 			self.currentslideshowitem = currentslideshowitem
 		elif int(config.plugins.pictureviewer.slideshowmode.value) is SLIDESHOWMODE_REPEAT:
-			print "["+myname+"] restarting slideshow"
+			print("["+myname+"] restarting slideshow")
 			self.start()
 		else:
-			print "["+myname+"] slideshow finished"
+			print("["+myname+"] slideshow finished")
 			self.wbviewer.exit()
 			self.cb()
 
@@ -282,10 +282,10 @@
 						_("select List to load"),
 						list
 				)
-			except IOError,e:
-				print "["+myname+"] IOError:",e
-			except OSError,e:
-				print "["+myname+"] OSError:",e
+			except IOError as e:
+				print("["+myname+"] IOError:",e)
+			except OSError as e:
+				print("["+myname+"] OSError:",e)
 
 	def KeyRed(self):
 		if self.currList is "filelist" :
@@ -320,21 +320,21 @@
 					   if x.startswith("#"):
 						   pass
 					   elif not os.path.exists(file):
-						   print "["+myname+"] loaded file from filelist isnt avaible! ignoreing ->", file
+						   print("["+myname+"] loaded file from filelist isnt avaible! ignoreing ->", file)
 					   else:
 						   list.append((_(file.split("/")[-1]), file))
 				   self.slideshowfiles = list
 				   self["slist"].l.setList(self.slideshowfiles)
 				   self.loadedslideshowlistlistname = filename.replace(config.plugins.pictureviewer.slideshowext.value, "")
-			   except IOError, e:
-				   print "["+myname+"] error:", e
+			   except IOError as e:
+				   print("["+myname+"] error:", e)
 
 	def fileToSaveFilelistEntered(self, filename):
 		if filename is not None:
-			print "["+myname+"] saving list to ", config.plugins.pictureviewer.slideshowdir.value+filename + config.plugins.pictureviewer.slideshowext.value
+			print("["+myname+"] saving list to ", config.plugins.pictureviewer.slideshowdir.value+filename + config.plugins.pictureviewer.slideshowext.value)
 			try:
 				if not os.path.exists(config.plugins.pictureviewer.slideshowdir.value):
-					print "+" * 10, os.path.basename(filename)
+					print("+" * 10, os.path.basename(filename))
 					os.mkdir(config.plugins.pictureviewer.slideshowdir.value)
 				fp = open(config.plugins.pictureviewer.slideshowdir.value + filename+config.plugins.pictureviewer.slideshowext.value, "w")
 				fp.write("# this is a slideshow file for "+myname+" made by V"+myversion+"\n")
@@ -343,8 +343,8 @@
 				for x in self.slideshowfiles:
 					fp.write(x[1] + "\n")
 				fp.close()
-			except IOError, e:
-				print "["+myname+"] error:", e
+			except IOError as e:
+				print("["+myname+"] error:", e)
 
 	def KeyYellow(self):
 		if self.currList is "filelist":
@@ -390,11 +390,11 @@
 				if selection[1] == True: # isDir
 					pass
 				else:
-					print "["+myname+"] file selected ", selection[0]
+					print("["+myname+"] file selected ", selection[0])
 					if os.path.isfile(selection[0]):
 						self.session.open(PictureScreen,selection[0].split("/")[-1], selection[0])
 					else:
-						print "["+myname+"] file not found ", selection[0]
+						print("["+myname+"] file not found ", selection[0])
 		else:
 			self.updateInfoPanel()
 
@@ -446,7 +446,7 @@
 			pass
 
 	def output(self,str):
-		print "+" * 10, str
+		print("+" * 10, str)
 
 	def openMenu(self):
 		self.session.open(WebcamViewerMenu)
@@ -602,7 +602,7 @@
 		else:
 			extension = name.split('.')
 			extension = extension[-1].lower()
-			if EXTENSIONS.has_key(extension):
+			if extension in EXTENSIONS:
 				png = loadPNG("/usr/share/enigma2/extensions/" + EXTENSIONS[extension] + ".png")
 			else:
 				png = None
--- a/weatherplugin/src/__init__.py
+++ b/weatherplugin/src/__init__.py
@@ -9,7 +9,7 @@
 def _(txt):
 	t = gettext.dgettext("WeatherPlugin", txt)
 	if t == txt:
-		print "[WeatherPlugin] fallback to default translation for", txt
+		print("[WeatherPlugin] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/weatherplugin/src/plugin.py
+++ b/weatherplugin/src/plugin.py
@@ -28,13 +28,13 @@
 from xml.etree.cElementTree import fromstring as cet_fromstring
 from twisted.internet import defer
 from twisted.web.client import getPage, downloadPage
-from urllib import quote
+from urllib.parse import quote
 from Components.Pixmap import Pixmap
 from enigma import ePicLoad, eEnv
 from os import path as os_path, mkdir as os_mkdir
 from Components.AVSwitch import AVSwitch
 from Components.config import ConfigSubsection, ConfigSubList, ConfigInteger, config
-from setup import initConfig, WeatherPluginEntriesListConfigScreen
+from .setup import initConfig, WeatherPluginEntriesListConfigScreen
 
 config.plugins.WeatherPlugin = ConfigSubsection()
 config.plugins.WeatherPlugin.entriescount =  ConfigInteger(0)
--- a/vps/src_py/Modifications.py
+++ b/vps/src_py/Modifications.py
@@ -11,7 +11,7 @@
 from time import time
 from enigma import getBestPlayableServiceReference, eServiceReference
 import xml.etree.cElementTree
-from Vps_setup import VPS_show_info
+from .Vps_setup import VPS_show_info
 
 vps_already_registered = False
 
@@ -123,7 +123,7 @@
 			self.timerentry_vpsplugin_enabled = ConfigYesNo(default = self.timer.vpsplugin_enabled)
 			self.timerentry_vpsplugin_dontcheck_pdc = self.timer.vpsplugin_enabled
 		elif self.timer.eit is not None and self.timer.name != "" and self.timer not in self.session.nav.RecordTimer.timer_list and self.timer not in self.session.nav.RecordTimer.processed_timers and config.plugins.vps.default_vps.value:
-			from Vps_check import Check_PDC, VPS_check_PDC_Screen
+			from .Vps_check import Check_PDC, VPS_check_PDC_Screen
 			service = self.timerentry_service_ref.ref
 			if service and service.flags & eServiceReference.isGroup:
 				service = getBestPlayableServiceReference(service, eServiceReference())
@@ -170,7 +170,7 @@
 				if config.plugins.vps.allow_overwrite.value == True:
 					self.list.append(getConfigListEntry(_("Recording controlled by channel"), self.timerentry_vpsplugin_overwrite))
 				
-				from Vps_check import Check_PDC, VPS_check_PDC_Screen
+				from .Vps_check import Check_PDC, VPS_check_PDC_Screen
 				service = self.timerentry_service_ref.ref
 				if service and service.flags & eServiceReference.isGroup:
 					service = getBestPlayableServiceReference(service, eServiceReference())
--- a/vps/src_py/Vps.py
+++ b/vps/src_py/Vps.py
@@ -581,7 +581,7 @@
 					else:
 						break
 			except AttributeError:
-				print "[VPS-Plugin] AttributeError in Vps.py"
+				print("[VPS-Plugin] AttributeError in Vps.py")
 				return
 		else:
 			nextExecution = 14400
@@ -599,7 +599,7 @@
 			nextExecution = 1
 		
 		self.timer.startLongTimer(nextExecution)
-		print "[VPS-Plugin] next execution in "+ str(nextExecution) +" sec" 
+		print("[VPS-Plugin] next execution in "+ str(nextExecution) +" sec") 
 	
 	def addTimerToList(self, timer):
 		self.vpstimers.append(vps_timer(timer, self.session))
--- a/vps/src_py/Vps_check.py
+++ b/vps/src_py/Vps_check.py
@@ -10,7 +10,7 @@
 from Tools.XMLTools import stringToXML
 from Tools import Directories
 from time import time
-from Vps import vps_exe
+from .Vps import vps_exe
 import NavigationInstance
 from xml.etree.cElementTree import parse as xml_parse
 
--- a/vps/src_py/plugin.py
+++ b/vps/src_py/plugin.py
@@ -1,8 +1,8 @@
 from Plugins.Plugin import PluginDescriptor
 from os import stat
-from Vps import vps_timers
-from Vps_setup import VPS_Setup
-from Modifications import register_vps
+from .Vps import vps_timers
+from .Vps_setup import VPS_Setup
+from .Modifications import register_vps
 
 # Config
 from Components.config import config, ConfigYesNo, ConfigSubsection, ConfigInteger
@@ -20,7 +20,7 @@
 
 def autostart(reason, **kwargs):
 	if reason == 0:
-		if kwargs.has_key("session"):
+		if "session" in kwargs:
 			session = kwargs["session"]
 			vps_timers.session = session
 			vps_timers.checkTimer()
--- a/vps/src_py/WebComponents/Sources/Vps.py
+++ b/vps/src_py/WebComponents/Sources/Vps.py
@@ -21,7 +21,7 @@
 					vpsplugin_time = None
 			for timer in self.recordtimer.timer_list + self.recordtimer.processed_timers:
 				if sRef == str(timer.service_ref) and eit == timer.eit:
-					print "[WebComponents.Vps] addTimerByEventID: Found new timer, changing!"
+					print("[WebComponents.Vps] addTimerByEventID: Found new timer, changing!")
 					timer.vpsplugin_enabled = vpsplugin_enabled
 					timer.vpsplugin_overwrite = vpsplugin_overwrite
 					timer.vpsplugin_time = vpsplugin_time
@@ -56,7 +56,7 @@
 				if sRef == str(timer.service_ref) and begin == int(timer.begin) \
 						and end == int(timer.end) and name == timer.name \
 						and description == timer.description:
-					print "[WebComponents.Vps] editTimer: Timer changed!"
+					print("[WebComponents.Vps] editTimer: Timer changed!")
 					timer.vpsplugin_enabled = vpsplugin_enabled
 					timer.vpsplugin_overwrite = vpsplugin_overwrite
 					timer.vpsplugin_time = vpsplugin_time
@@ -81,7 +81,7 @@
 			curappend(item.vpsplugin_time or -1)
 			append(curlist)
 			i += 1
-		print newlist
+		print(newlist)
 		return newlist
 	list = property(getList)
 
--- a/vlcplayer/src/VlcFileList.py
+++ b/vlcplayer/src/VlcFileList.py
@@ -82,9 +82,9 @@
 		else:
 			extension = name.split('.')
 			extension = extension[-1].lower()
-			if MEDIA_EXTENSIONS.has_key(extension):
+			if extension in MEDIA_EXTENSIONS:
 				png = LoadPixmap(resolveFilename(SCOPE_SKIN_IMAGE, "extensions/" + MEDIA_EXTENSIONS[extension] + ".png"))
-			elif PLAYLIST_EXTENSIONS.has_key(extension):
+			elif extension in PLAYLIST_EXTENSIONS:
 				png = LoadPixmap(resolveFilename(SCOPE_PLUGINS, "Extensions/VlcPlayer/") + PLAYLIST_EXTENSIONS[extension])
 			else:
 				png = None
@@ -135,8 +135,8 @@
 			else:
 				self.currentDirectory = previousDirectory
 				ret = None, None
-		except ExpatError, e:
-			print e
+		except ExpatError as e:
+			print(e)
 			self.currentDirectory = previousDirectory
 			self.update()
 			ret = None, self.currentDirectory
--- a/vlcplayer/src/VlcMediaList.py
+++ b/vlcplayer/src/VlcMediaList.py
@@ -19,8 +19,8 @@
 
 from pyexpat import ExpatError
 
-from VlcFileList import VlcFileList
-from VlcPlayList import VlcPlayList
+from .VlcFileList import VlcFileList
+from .VlcPlayList import VlcPlayList
 from . import _
 
 
@@ -93,7 +93,7 @@
 		try:
 			for id in self.playlistIds:
 				self.server.delete(id)
-		except Exception, e:
+		except Exception as e:
 			pass
 			
 	def close(self, proceed = False):
@@ -122,7 +122,7 @@
 			self["key_red"].setText(_("filter on"))
 		try:
 			self.updateFilelist()
-		except Exception, e:
+		except Exception as e:
 			self.session.open(
 				MessageBox, _("Error updating filelist from server %(server)s:\n%(error)s" % (
 						{"server" : self.server.getName(), "error" : e})
@@ -159,7 +159,7 @@
 						self.playlistIds.append(id)
 						self.updatePlaylist()
 						self.switchToPlayList()
-				except Exception, e:
+				except Exception as e:
 					self.session.open(
 						MessageBox, _("Error loading playlist %(media)s into server %(server)s:\n%(error)s" % (
 								{"media" : media, "server" : self.server.getName(), "error" : e})
@@ -175,13 +175,13 @@
 	def getFilesAndDirsCB(self, currentDirectory, regex):
 		try:
 			return self.server.getFilesAndDirs(currentDirectory, regex)
-		except ExpatError, e:
+		except ExpatError as e:
 			self.session.open(
 				MessageBox, _("Error loading playlist into server %(server)s:\n%(error)s" % (
 						{"server" : self.server.getName(), "error" : e })
 					), MessageBox.TYPE_ERROR)
-			raise ExpatError, e
-		except Exception, e:
+			raise ExpatError(e)
+		except Exception as e:
 			self.session.open(
 				MessageBox, _("Error loading filelist into server %(server)s:\n%(error)s" % (
 						{"server" : self.server.getName(), "error" : e })
@@ -191,12 +191,12 @@
 	def getPlaylistEntriesCB(self):
 		try:
 			return self.server.getPlaylistEntries()
-		except ExpatError, e:
+		except ExpatError as e:
 			self.session.open(
 				MessageBox, _("Error loading playlist into server %(server)s:\n%(error)s" % (
 						{"server" : self.server.getName(), "error" : e })
 					), MessageBox.TYPE_ERROR)
-		except Exception, e:
+		except Exception as e:
 			self.session.open(
 				MessageBox, _("Error loading playlist into server %(server)s:\n%(error)s" % (
 						{"server" : self.server.getName(), "error" : e })
--- a/vlcplayer/src/VlcPlayer.py
+++ b/vlcplayer/src/VlcPlayer.py
@@ -39,28 +39,28 @@
 
 ENIGMA_SERVICE_ID = 0
 
-print "[VLC] Checking for buildin servicets ... ",
+print("[VLC] Checking for buildin servicets ... ", end=' ')
 if isValidServiceId(ENIGMA_SERVICETS_ID):
-	print "yes"
+	print("yes")
 	ENIGMA_SERVICE_ID = ENIGMA_SERVICETS_ID
 	STOP_BEFORE_UNPAUSE = False
 else:
-	print "no"
-	print "[VLC] Checking for existing and usable servicets.so ... ",
+	print("no")
+	print("[VLC] Checking for existing and usable servicets.so ... ", end=' ')
 	try:
-		import servicets
-	except Exception, e:
-		print e
-		print "[VLC] Checking for usable gstreamer service ... ",
+		from . import servicets
+	except Exception as e:
+		print(e)
+		print("[VLC] Checking for usable gstreamer service ... ", end=' ')
 		if isValidServiceId(ENIGMA_SERVICEGS_ID):
-			print "yes"
+			print("yes")
 			ENIGMA_SERVICE_ID = ENIGMA_SERVICEGS_ID
 			STOP_BEFORE_UNPAUSE = True
 		else:
-			print "no"
-			print "[VLC] No valid VLC-Service found - VLC-streaming not supported"
+			print("no")
+			print("[VLC] No valid VLC-Service found - VLC-streaming not supported")
 	else:
-		print "yes"
+		print("yes")
 		ENIGMA_SERVICE_ID = ENIGMA_SERVICETS_ID
 		STOP_BEFORE_UNPAUSE = False
 
@@ -140,14 +140,14 @@
 		if self.server is None:
 			self.stats = None
 			return
-		print "[VLC] refresh"
+		print("[VLC] refresh")
 		try:
 			self.stats = self.server.status()
 			self.lastrefresh = time()
-			if self.stats and self.stats.has_key("time"):
-				print "Time: ", self.stats["time"]
-		except Exception, e:
-			print e
+			if self.stats and "time" in self.stats:
+				print("Time: ", self.stats["time"])
+		except Exception as e:
+			print(e)
 
 	def refresh(self):
 		self.__onRefresh()
@@ -160,7 +160,7 @@
 		return self
 
 	def getPlayPosition(self):
-		if self.stats and self.stats.has_key("time"):
+		if self.stats and "time" in self.stats:
 			pos = float(self.stats["time"])
 			if self.player.state == VlcPlayer.STATE_PLAYING:
 				pos += time() - self.lastrefresh
@@ -169,7 +169,7 @@
 			return (True, 0)
 
 	def getLength(self):
-		if self.stats and self.stats.has_key("length"):
+		if self.stats and "length" in self.stats:
 			return (False, int(self.stats["length"])*90000)
 		else:
 			return (True, 0)
@@ -281,7 +281,7 @@
 				"previous": self.playPrevFile
 			}, -2)
 
-		print "[VLC] evEOF=%d" % iPlayableService.evEOF
+		print("[VLC] evEOF=%d" % iPlayableService.evEOF)
 		self.__event_tracker = ServiceEventTracker(screen = self, eventmap =
 			{
 				iPlayableService.evEOF: self.__evEOF,
@@ -289,7 +289,7 @@
 			})
 
 	def createSummary(self):
-		print "[VLC] createSummary"
+		print("[VLC] createSummary")
 		return VlcPlayerSummary
 
 	def __onClose(self):
@@ -297,11 +297,11 @@
 		self.session.nav.playService(self.oldNavService)
 
 	def __evEOF(self):
-		print "[VLC] Event EOF"
+		print("[VLC] Event EOF")
 		self.stop()
 
 	def __evSOF(self):
-		print "[VLC] Event SOF"
+		print("[VLC] Event SOF")
 		self.vlcservice.refresh()
 
 	def playfile(self, path, name):
@@ -317,7 +317,7 @@
 		if self.state == self.STATE_PAUSED:
 			self.unpause()
 			return
-		print "[VLC] setupStream: " + self.filename
+		print("[VLC] setupStream: " + self.filename)
 		if ENIGMA_SERVICE_ID == 0:
 			self.hide()
 			self.session.open(
@@ -327,8 +327,8 @@
 			return
 		try:
 			url = self.server.playFile(self.filename, DEFAULT_VIDEO_PID, DEFAULT_AUDIO_PID)
-			print "[VLC] url: " + url
-		except Exception, e:
+			print("[VLC] url: " + url)
+		except Exception as e:
 			self.hide()
 			self.session.open(
 					MessageBox, _("Error with VLC server:\n%s" % e), MessageBox.TYPE_ERROR
@@ -337,7 +337,7 @@
 			return
 		if url is not None:
 			sref = eServiceReference(ENIGMA_SERVICE_ID, 0, url)
-			print "sref valid=", sref.valid()
+			print("sref valid=", sref.valid())
 			sref.setData(0, DEFAULT_VIDEO_PID)
 			sref.setData(1, DEFAULT_AUDIO_PID)
 			self.session.nav.playService(sref)
@@ -347,7 +347,7 @@
 			self.vlcservice.setServer(self.server)
 
 	def pause(self):
-		print "[VLC] pause"
+		print("[VLC] pause")
 		if self.state == self.STATE_PLAYING:
 			self.session.nav.pause(True)
 			self.server.pause()
@@ -360,11 +360,11 @@
 			self.unpause()
 
 	def unpause(self):
-		print "[VLC] unpause"
+		print("[VLC] unpause")
 		try:
 			self.server.seek("-2")
 			self.server.unpause()
-		except Exception, e:
+		except Exception as e:
 			self.session.open(
 				MessageBox, _("Error with VLC server:\n%s" % e), MessageBox.TYPE_ERROR
 			)
@@ -384,7 +384,7 @@
 			self.__setHideTimer()
 
 	def stopCurrent(self):
-		print "[VLC] stopCurrent"
+		print("[VLC] stopCurrent")
 		self.session.nav.stopService()
 		if self.state == self.STATE_IDLE:
 			self.close()
@@ -392,7 +392,7 @@
 		try:
 			self.server.stop()
 			self.server.deleteCurrentTree()
-		except Exception, e:
+		except Exception as e:
 			self.session.open(
 				MessageBox, _("Error with VLC server:\n%s" % e), MessageBox.TYPE_ERROR
 			)
@@ -401,7 +401,7 @@
 		self.vlcservice.refresh()
 
 	def stop(self):
-		print "[VLC] stop"
+		print("[VLC] stop")
 		self.stopCurrent()
 		self.close()
 
@@ -427,7 +427,7 @@
 			self.showInfobar()
 
 	def playNextFile(self):
-		print "[VLC] playNextFile"
+		print("[VLC] playNextFile")
 		if isDvdUrl(self.filename):
 			url, track, chapter = splitDvdUrl(self.filename)
 			if track is None:
@@ -454,7 +454,7 @@
 					self.showInfobar()
 
 	def playPrevFile(self):
-		print "[VLC] playPrevFile"
+		print("[VLC] playPrevFile")
 		if isDvdUrl(self.filename):
 			url, track, chapter = splitDvdUrl(self.filename)
 			if track is None:
--- a/vlcplayer/src/VlcServer.py
+++ b/vlcplayer/src/VlcServer.py
@@ -12,12 +12,12 @@
 
 import re
 import posixpath
-from sys import maxint
+from sys import maxsize
 from random import randint, seed
-from urllib import urlencode
-from urllib2 import urlopen
+from urllib.parse import urlencode
+from urllib.request import urlopen
 from xml.dom.minidom import parse
-from VlcPlayer import VlcPlayer, isDvdUrl
+from .VlcPlayer import VlcPlayer, isDvdUrl
 
 seed()
 
@@ -151,10 +151,10 @@
 	def __xmlRequestRaw(self, request, params):
 		uri = "/requests/" + request + ".xml" + params
 		location = "%s:%d" % (self.getHost(), self.getHttpPort())
-		print "[VLC] __xmlRequest http://", location, uri
+		print("[VLC] __xmlRequest http://", location, uri)
 		resp = urlopen("http://" + location + uri)
 		if resp is None:
-			raise IOError, "No response from Server"
+			raise IOError("No response from Server")
 		xml = parse(resp)
 		resp.close()
 		return xml
@@ -210,7 +210,7 @@
 
 	def playFile(self, filename, videoPid, audioPid):
 		stats = self.status()
-		if stats is not None and stats.has_key("apiversion"):
+		if stats is not None and "apiversion" in stats:
 			apiversion = int(stats["apiversion"])
 		else:
 			apiversion = 2
@@ -285,7 +285,7 @@
 		if not apiversion > 2:
 			inputPar = "?" + urlencode({"command": "in_play", "input": inputPar}).replace('+', '%20')
 
-		print "[VLC] playfile", inputPar
+		print("[VLC] playfile", inputPar)
 
 		xml = self.__xmlRequestRaw("status", inputPar)
 		error = xml.getElementsByTagName("error")
@@ -294,7 +294,7 @@
 			if len(self.lastError) == 0:
 				self.lastError = None
 			else:
-				print "[VLC] VlcControl error:", self.lastError
+				print("[VLC] VlcControl error:", self.lastError)
 			return None
 		else:
 			self.lastError = None
@@ -313,7 +313,7 @@
 		self.__xmlRequest("status", {"command": "pl_delete", "id": str(id)})
 
 	def deleteCurrentTree(self):
-		print "[VLC] delete current tree"
+		print("[VLC] delete current tree")
 		currentElement = self.getCurrentElement()
 		while currentElement is not None and currentElement.parentNode is not None and currentElement.parentNode.getAttribute("ro") != "ro":
 			currentElement = currentElement.parentNode
--- a/vlcplayer/src/VlcServerConfig.py
+++ b/vlcplayer/src/VlcServerConfig.py
@@ -25,14 +25,14 @@
 from Components.config import config
 from Components.config import getConfigListEntry
 from Screens.Screen import Screen
-from VlcServer import VlcServer
+from .VlcServer import VlcServer
 from . import _
 
 class ConfigMutable(ConfigElement):
 	def __init__(self, configElementDict, defaultKey):
 		ConfigElement.__init__(self)
 		self.configElementDict = configElementDict
-		if self.configElementDict.has_key(defaultKey):
+		if defaultKey in self.configElementDict:
 			self.currentConfig = self.configElementDict[defaultKey]
 			self.currentKey = defaultKey
 			self.defaultKey = self.currentKey
@@ -41,7 +41,7 @@
 		self.elements[key] = configElement
 
 	def setAsCurrent(self, key):
-		if self.configElementDict.has_key(key):
+		if key in self.configElementDict:
 			self.currentConfig = self.configElementDict[key]
 			self.currentKey = key
 			self.saved_value = self.currentConfig.saved_value
@@ -226,7 +226,7 @@
 
 	# Edit has been canceled
 	def cancel(self, server):
-		for element in server.getCfg().dict().values():
+		for element in list(server.getCfg().dict().values()):
 			element.cancel()
 
 	def getServerlist(self):
--- a/vlcplayer/src/VlcServerList.py
+++ b/vlcplayer/src/VlcServerList.py
@@ -18,8 +18,8 @@
 from Screens.Screen import Screen
 from Tools.Directories import resolveFilename, SCOPE_PLUGINS
 from Tools.LoadPixmap import LoadPixmap
-from VlcServerConfig import vlcServerConfig
-from VlcServerConfig import VlcServerConfigScreen
+from .VlcServerConfig import vlcServerConfig
+from .VlcServerConfig import VlcServerConfigScreen
 from enigma import eListboxPythonMultiContent, RT_HALIGN_LEFT, gFont
 from . import _
 
--- a/vlcplayer/src/__init__.py
+++ b/vlcplayer/src/__init__.py
@@ -19,7 +19,7 @@
 def _(txt):
 	t = gettext.dgettext("VlcPlayer", txt)
 	if t == txt:
-		print "[VLC] fallback to default translation for", txt
+		print("[VLC] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
--- a/vlcplayer/src/plugin.py
+++ b/vlcplayer/src/plugin.py
@@ -12,23 +12,23 @@
 
 from Plugins.Plugin import PluginDescriptor
 
-from VlcServerList import VlcServerListScreen
-from VlcMediaList import VlcMediaListScreen
-from VlcServerConfig import vlcServerConfig
+from .VlcServerList import VlcServerListScreen
+from .VlcMediaList import VlcMediaListScreen
+from .VlcServerConfig import vlcServerConfig
 
 import gettext
 
 def _(txt):
 	t = gettext.dgettext("VlcPlayer", txt)
 	if t == txt:
-		print "[VLC] fallback to default translation for", txt
+		print("[VLC] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 	
 
 class __VlcManager():
 	def __init__(self, session):
-		print "[VLC] VlcManager"
+		print("[VLC] VlcManager")
 		self.session = session
 
 	def startSession(self):
@@ -39,7 +39,7 @@
 			self.openMedialist(defaultServer)
 		
 	def openServerlist(self):
-		print "[VLC] openServerlist"
+		print("[VLC] openServerlist")
 		defaultServer = vlcServerConfig.getDefaultServer()
 		self.session.openWithCallback(self.serverlistClosed, VlcServerListScreen, defaultServer)
 
@@ -48,12 +48,12 @@
 		self.openMedialist(selectedServer)
 		
 	def openMedialist(self, selectedServer):
-		print "[VLC] openMedialist"
+		print("[VLC] openMedialist")
 		if selectedServer is not None:
 			self.session.openWithCallback(self.medialistClosed, VlcMediaListScreen, selectedServer).keyUpdate()
 
 	def medialistClosed(self, proceed = False):
-		print "[VLC] medialistClosed"
+		print("[VLC] medialistClosed")
 		if proceed:
 			self.openServerlist()
 
--- a/virtualzap/src/__init__.py
+++ b/virtualzap/src/__init__.py
@@ -10,7 +10,7 @@
 def _(txt):
 	t = gettext.dgettext("VirtualZap", txt)
 	if t == txt:
-		print "[VirtualZap] fallback to default translation for", txt
+		print("[VirtualZap] fallback to default translation for", txt)
 		t = gettext.gettext(txt)
 	return t
 
diff -u /home/teslanet/Archive/enigma2-plugins-sh4.git/elektro/src/ping.py /home/teslanet/ENIGMA2_3/ACC/tdt/tufsbox/work/e2plugin/elektro/src/ping.py
--- a/elektro/src/ping.py
+++ b/elektro/src/ping.py
@@ -120,12 +120,12 @@
 
 def main():
   if len(sys.argv)<2:
-    print "Usage: %s hostname" % os.path.basename(sys.argv[0])
+    print("Usage: %s hostname" % os.path.basename(sys.argv[0]))
     sys.exit(1)
 
   dest=gethostbyname(sys.argv[1])
   delay=doOne(dest)
-  print delay
+  print(delay)
   return None
 
 if __name__=='__main__':
